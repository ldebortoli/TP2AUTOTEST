import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.util.Iterator iterator0 = null;
        try {
            collections.iterators.AbstractIteratorDecorator abstractIteratorDecorator1 = new collections.iterators.AbstractIteratorDecorator(iterator0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        java.util.Map map0 = null;
        collections.Predicate predicate1 = null;
        collections.Predicate predicate2 = null;
        try {
            java.util.Map map3 = collections.map.PredicatedMap.decorate(map0, predicate1, predicate2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        java.util.Map map0 = null;
        collections.Factory factory1 = null;
        try {
            java.util.Map map2 = collections.map.DefaultedMap.decorate(map0, factory1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        collections.Transformer transformer2 = null;
        try {
            java.util.Map map3 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 10L);
        collections.Transformer transformer4 = null;
        try {
            java.util.Map map5 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.Factory factory4 = null;
        try {
            java.util.Map map5 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        collections.Transformer transformer15 = null;
        try {
            java.util.Map map16 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.Transformer transformer6 = null;
        try {
            java.util.Map map7 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap21.isEmpty();
        boolean b25 = defaultedMap21.equals((java.lang.Object) 10);
        java.lang.Object obj26 = defaultedMap6.get((java.lang.Object) b25);
        collections.Factory factory27 = null;
        try {
            java.util.Map map28 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        boolean b15 = defaultedMap12.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection16 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) collection16);
        boolean b18 = defaultedMap17.isEmpty();
        java.lang.Object obj19 = defaultedMap9.get((java.lang.Object) defaultedMap17);
        java.lang.Object obj21 = defaultedMap9.get((java.lang.Object) 10.0f);
        java.lang.Object obj22 = defaultedMap6.remove((java.lang.Object) defaultedMap9);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (byte) 0 + "'", obj21.equals((byte) 0));
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj38 = defaultedMap36.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap40.keySet();
        boolean b43 = defaultedMap40.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection44 = defaultedMap40.values();
        java.lang.Object obj46 = defaultedMap36.put((java.lang.Object) collection44, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set49 = defaultedMap48.keySet();
        boolean b51 = defaultedMap48.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection52 = defaultedMap48.values();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) collection52);
        int i54 = defaultedMap53.size();
        collections.Predicate predicate55 = null;
        collections.Predicate predicate56 = null;
        java.util.Map map57 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap53, predicate55, predicate56);
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap59.keySet();
        boolean b62 = defaultedMap59.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection63 = defaultedMap59.values();
        java.util.Set set64 = defaultedMap59.keySet();
        java.util.Set set65 = defaultedMap59.entrySet();
        java.lang.Object obj66 = defaultedMap36.put((java.lang.Object) predicate56, (java.lang.Object) defaultedMap59);
        boolean b67 = defaultedMap19.equals(obj66);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertNotNull(map57);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertNotNull(set64);
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue(b67 == false);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.lang.String str5 = defaultedMap1.toString();
        collections.Transformer transformer6 = null;
        try {
            java.util.Map map7 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{1=null}" + "'", str5.equals("{1=null}"));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        java.lang.Object obj13 = new java.lang.Object();
        boolean b14 = defaultedMap10.containsValue(obj13);
        boolean b15 = defaultedMap10.isEmpty();
        collections.Factory factory16 = null;
        try {
            java.util.Map map17 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap10, factory16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == true);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.Factory factory16 = null;
        try {
            java.util.Map map17 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) (byte) 100);
        int i29 = defaultedMap26.size();
        boolean b30 = defaultedMap12.equals((java.lang.Object) i29);
        collections.Factory factory31 = null;
        try {
            java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap12, factory31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == false);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap12);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) (byte) 100);
        java.lang.Object obj30 = defaultedMap12.put((java.lang.Object) (byte) 100, (java.lang.Object) "");
        collections.Transformer transformer31 = null;
        try {
            java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap12, transformer31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap16.isEmpty();
        boolean b18 = defaultedMap16.isEmpty();
        java.util.Map map19 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) b18);
        collections.Factory factory20 = null;
        try {
            java.util.Map map21 = collections.map.DefaultedMap.decorate(map19, factory20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(map19);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.get((java.lang.Object) 0.0f);
        boolean b9 = defaultedMap6.isEmpty();
        int i10 = defaultedMap6.size();
        java.lang.Object obj11 = null;
        java.lang.Object obj12 = defaultedMap1.put((java.lang.Object) i10, obj11);
        int i13 = defaultedMap1.size();
        collections.Factory factory14 = null;
        try {
            java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (byte) 0 + "'", obj8.equals((byte) 0));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue(i13 == 1);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        java.lang.Object obj0 = new java.lang.Object();
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap(obj0);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        java.lang.String str6 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap1.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj11 = defaultedMap1.put((java.lang.Object) collection9, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        java.util.Set set29 = defaultedMap24.keySet();
        java.util.Set set30 = defaultedMap24.entrySet();
        java.lang.Object obj31 = defaultedMap1.put((java.lang.Object) predicate21, (java.lang.Object) defaultedMap24);
        collections.Transformer transformer32 = null;
        try {
            java.util.Map map33 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap24, transformer32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        java.lang.Object obj13 = new java.lang.Object();
        boolean b14 = defaultedMap10.containsValue(obj13);
        collections.Transformer transformer15 = null;
        try {
            java.util.Map map16 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap10, transformer15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b14 == false);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.Factory factory14 = null;
        try {
            java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        java.lang.Object obj38 = null;
        boolean b39 = defaultedMap26.containsValue(obj38);
        java.util.Set set40 = defaultedMap26.entrySet();
        java.lang.Object obj41 = defaultedMap19.remove((java.lang.Object) set40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b44 = defaultedMap43.isEmpty();
        boolean b45 = defaultedMap43.isEmpty();
        java.lang.Object obj46 = defaultedMap10.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap43);
        collections.Transformer transformer47 = null;
        try {
            java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap19, transformer47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj10 = null;
        boolean b11 = defaultedMap1.containsValue(obj10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        defaultedMap13.clear();
        java.util.Set set18 = defaultedMap13.entrySet();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection21 = defaultedMap20.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap20);
        boolean b23 = defaultedMap13.containsKey((java.lang.Object) defaultedMap20);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) b23);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap12);
        boolean b25 = defaultedMap1.isEmpty();
        collections.Transformer transformer26 = null;
        try {
            java.util.Map map27 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertTrue(b25 == true);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        java.lang.Object obj38 = null;
        boolean b39 = defaultedMap26.containsValue(obj38);
        java.util.Set set40 = defaultedMap26.entrySet();
        java.lang.Object obj41 = defaultedMap19.remove((java.lang.Object) set40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b44 = defaultedMap43.isEmpty();
        boolean b45 = defaultedMap43.isEmpty();
        java.lang.Object obj46 = defaultedMap10.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap43);
        collections.Transformer transformer47 = null;
        try {
            java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap10, transformer47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        java.util.Set set30 = defaultedMap24.keySet();
        java.lang.Object obj32 = defaultedMap24.get((java.lang.Object) (short) 1);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        boolean b11 = defaultedMap6.containsKey((java.lang.Object) 1);
        defaultedMap6.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) (byte) 100);
        int i17 = defaultedMap14.size();
        java.lang.Object obj18 = defaultedMap6.remove((java.lang.Object) defaultedMap14);
        boolean b19 = defaultedMap1.containsKey((java.lang.Object) defaultedMap6);
        collections.Transformer transformer20 = null;
        try {
            java.util.Map map21 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue(i17 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue(b19 == false);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b6 = defaultedMap5.isEmpty();
        java.util.Set set7 = defaultedMap5.entrySet();
        boolean b8 = defaultedMap1.containsValue((java.lang.Object) set7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        boolean b22 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        boolean b24 = defaultedMap23.isEmpty();
        java.util.Collection collection25 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        defaultedMap23.putAll((java.util.Map) defaultedMap27);
        java.util.Collection collection31 = defaultedMap23.values();
        java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) collection31);
        collections.Transformer transformer33 = null;
        try {
            java.util.Map map34 = collections.map.DefaultedMap.decorate(map32, transformer33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(map32);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        int i6 = defaultedMap1.size();
        collections.Factory factory7 = null;
        try {
            java.util.Map map8 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(i6 == 1);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) (-1.0f));
        collections.Predicate predicate4 = null;
        collections.Predicate predicate5 = null;
        java.util.Map map6 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate4, predicate5);
        collections.Factory factory7 = null;
        try {
            java.util.Map map8 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + 0 + "'", obj3.equals(0));
        org.junit.Assert.assertNotNull(map6);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.util.Set set6 = defaultedMap1.keySet();
        java.util.Set set7 = defaultedMap1.entrySet();
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        boolean b15 = defaultedMap12.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection16 = defaultedMap12.values();
        java.lang.String str17 = defaultedMap12.toString();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap19.isEmpty();
        java.lang.Object obj23 = defaultedMap19.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = defaultedMap25.remove((java.lang.Object) 1.0f);
        defaultedMap25.clear();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        boolean b39 = defaultedMap34.containsKey((java.lang.Object) 1);
        defaultedMap34.clear();
        java.lang.Object obj41 = defaultedMap25.put((java.lang.Object) defaultedMap30, (java.lang.Object) defaultedMap34);
        java.lang.Object obj42 = defaultedMap19.get((java.lang.Object) defaultedMap30);
        java.lang.Object obj44 = defaultedMap30.get((java.lang.Object) 100L);
        java.lang.Object obj45 = defaultedMap12.remove((java.lang.Object) defaultedMap30);
        boolean b46 = defaultedMap1.containsValue(obj45);
        collections.Factory factory47 = null;
        try {
            java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "{}" + "'", str17.equals("{}"));
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 0 + "'", obj23.equals((byte) 0));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (byte) 0 + "'", obj42.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte) 0 + "'", obj44.equals((byte) 0));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue(b46 == false);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b3 = defaultedMap1.isEmpty();
        java.util.Set set4 = defaultedMap1.entrySet();
        defaultedMap1.clear();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNotNull(set4);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        java.util.Set set8 = defaultedMap6.keySet();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        int i22 = defaultedMap19.size();
        java.util.Set set23 = defaultedMap19.keySet();
        defaultedMap6.putAll((java.util.Map) defaultedMap19);
        defaultedMap19.clear();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(set23);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        java.lang.String str7 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        java.lang.String str14 = defaultedMap9.toString();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap16.isEmpty();
        boolean b18 = defaultedMap16.isEmpty();
        java.lang.Object obj20 = defaultedMap16.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        defaultedMap22.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        boolean b36 = defaultedMap31.containsKey((java.lang.Object) 1);
        defaultedMap31.clear();
        java.lang.Object obj38 = defaultedMap22.put((java.lang.Object) defaultedMap27, (java.lang.Object) defaultedMap31);
        java.lang.Object obj39 = defaultedMap16.get((java.lang.Object) defaultedMap27);
        java.lang.Object obj41 = defaultedMap27.get((java.lang.Object) 100L);
        java.lang.Object obj42 = defaultedMap9.remove((java.lang.Object) defaultedMap27);
        java.util.Map map43 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, obj42);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set46 = defaultedMap45.keySet();
        boolean b48 = defaultedMap45.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection49 = defaultedMap45.values();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) collection49);
        boolean b51 = defaultedMap50.isEmpty();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = defaultedMap53.remove((java.lang.Object) 1.0f);
        defaultedMap53.clear();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj64 = null;
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) 1, obj64);
        boolean b67 = defaultedMap62.containsKey((java.lang.Object) 1);
        defaultedMap62.clear();
        java.lang.Object obj69 = defaultedMap53.put((java.lang.Object) defaultedMap58, (java.lang.Object) defaultedMap62);
        collections.Predicate predicate70 = null;
        collections.Predicate predicate71 = null;
        java.util.Map map72 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap53, predicate70, predicate71);
        java.lang.Object obj73 = defaultedMap50.get((java.lang.Object) predicate70);
        boolean b74 = defaultedMap50.isEmpty();
        java.lang.Object obj75 = defaultedMap1.get((java.lang.Object) b74);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{1=null}" + "'", str7.equals("{1=null}"));
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "{}" + "'", str14.equals("{}"));
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (byte) 0 + "'", obj20.equals((byte) 0));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (byte) 0 + "'", obj39.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNotNull(collection49);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(map72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + (byte) 0 + "'", obj75.equals((byte) 0));
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) (byte) 100);
        int i21 = defaultedMap18.size();
        java.lang.Object obj22 = defaultedMap10.remove((java.lang.Object) defaultedMap18);
        boolean b23 = defaultedMap5.containsKey((java.lang.Object) defaultedMap10);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) defaultedMap5);
        defaultedMap1.clear();
        java.util.Set set26 = defaultedMap1.keySet();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set26);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) (byte) 100);
        int i12 = defaultedMap9.size();
        java.lang.Object obj13 = defaultedMap1.remove((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        boolean b18 = defaultedMap15.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection19 = defaultedMap15.values();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap15, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = null;
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) 1, obj26);
        boolean b29 = defaultedMap24.containsKey((java.lang.Object) 1);
        int i30 = defaultedMap24.size();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set33 = defaultedMap32.keySet();
        boolean b35 = defaultedMap32.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection36 = defaultedMap32.values();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) collection36);
        boolean b38 = defaultedMap37.isEmpty();
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = defaultedMap40.remove((java.lang.Object) 1.0f);
        defaultedMap40.clear();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj51 = null;
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) 1, obj51);
        boolean b54 = defaultedMap49.containsKey((java.lang.Object) 1);
        defaultedMap49.clear();
        java.lang.Object obj56 = defaultedMap40.put((java.lang.Object) defaultedMap45, (java.lang.Object) defaultedMap49);
        collections.Predicate predicate57 = null;
        collections.Predicate predicate58 = null;
        java.util.Map map59 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap40, predicate57, predicate58);
        java.lang.Object obj60 = defaultedMap37.get((java.lang.Object) predicate57);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj64 = null;
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) 1, obj64);
        java.util.Set set66 = defaultedMap62.keySet();
        boolean b67 = defaultedMap37.containsValue((java.lang.Object) set66);
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection70 = defaultedMap69.values();
        java.lang.Object obj71 = defaultedMap24.put((java.lang.Object) b67, (java.lang.Object) defaultedMap69);
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj75 = defaultedMap73.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b78 = defaultedMap77.isEmpty();
        java.util.Set set79 = defaultedMap77.entrySet();
        boolean b80 = defaultedMap73.containsValue((java.lang.Object) set79);
        java.lang.Object obj81 = defaultedMap24.get((java.lang.Object) b80);
        java.lang.Object obj82 = defaultedMap1.put((java.lang.Object) map22, (java.lang.Object) b80);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i30 == 1);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertNotNull(collection36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(set66);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + (byte) 0 + "'", obj75.equals((byte) 0));
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNotNull(set79);
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.util.Set set4 = defaultedMap1.keySet();
        collections.Transformer transformer5 = null;
        try {
            java.util.Map map6 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set4);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        java.util.Set set6 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection9 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b11 = defaultedMap1.containsKey((java.lang.Object) defaultedMap8);
        int i12 = defaultedMap8.size();
        collections.Transformer transformer13 = null;
        try {
            java.util.Map map14 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, transformer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 0);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        java.lang.Object obj13 = new java.lang.Object();
        boolean b14 = defaultedMap10.containsValue(obj13);
        boolean b15 = defaultedMap10.isEmpty();
        java.lang.String str16 = defaultedMap10.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "{}" + "'", str16.equals("{}"));
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        int i25 = defaultedMap22.size();
        java.util.Set set26 = defaultedMap22.keySet();
        boolean b27 = defaultedMap1.containsValue((java.lang.Object) set26);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(set26);
        org.junit.Assert.assertTrue(b27 == false);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        boolean b9 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        int i10 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = null;
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) 1, obj14);
        java.lang.String str16 = defaultedMap12.toString();
        boolean b17 = defaultedMap1.equals((java.lang.Object) str16);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "{1=null}" + "'", str16.equals("{1=null}"));
        org.junit.Assert.assertTrue(b17 == false);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b3 = defaultedMap1.isEmpty();
        java.util.Set set4 = defaultedMap1.entrySet();
        collections.Transformer transformer5 = null;
        try {
            java.util.Map map6 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNotNull(set4);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        boolean b11 = defaultedMap6.containsKey((java.lang.Object) 1);
        java.lang.String str12 = defaultedMap6.toString();
        boolean b13 = defaultedMap1.containsValue((java.lang.Object) str12);
        collections.Factory factory14 = null;
        try {
            java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "{1=null}" + "'", str12.equals("{1=null}"));
        org.junit.Assert.assertTrue(b13 == false);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        collections.Factory factory21 = null;
        try {
            java.util.Map map22 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set5 = defaultedMap4.keySet();
        boolean b7 = defaultedMap4.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection8 = defaultedMap4.values();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) collection8);
        boolean b10 = defaultedMap9.isEmpty();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap9);
        java.lang.Object obj13 = defaultedMap1.get((java.lang.Object) 10.0f);
        collections.Factory factory14 = null;
        try {
            java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (byte) 0 + "'", obj13.equals((byte) 0));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        java.lang.Object obj8 = defaultedMap1.remove((java.lang.Object) false);
        collections.Factory factory9 = null;
        try {
            java.util.Map map10 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        boolean b8 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        boolean b14 = defaultedMap6.containsKey((java.lang.Object) 0.0f);
        java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap6);
        collections.Factory factory16 = null;
        try {
            java.util.Map map17 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(map15);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        java.util.Set set30 = defaultedMap24.keySet();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = defaultedMap32.remove((java.lang.Object) 1.0f);
        defaultedMap32.clear();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = defaultedMap37.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = null;
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) 1, obj43);
        boolean b46 = defaultedMap41.containsKey((java.lang.Object) 1);
        defaultedMap41.clear();
        java.lang.Object obj48 = defaultedMap32.put((java.lang.Object) defaultedMap37, (java.lang.Object) defaultedMap41);
        java.lang.Object obj49 = null;
        boolean b50 = defaultedMap37.containsValue(obj49);
        java.util.Set set51 = defaultedMap37.entrySet();
        java.util.Collection collection52 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set55 = defaultedMap54.keySet();
        java.util.Collection collection56 = defaultedMap54.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set59 = defaultedMap58.keySet();
        boolean b61 = defaultedMap58.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        boolean b64 = defaultedMap63.isEmpty();
        boolean b65 = defaultedMap54.containsValue((java.lang.Object) defaultedMap63);
        int i66 = defaultedMap63.size();
        defaultedMap63.clear();
        java.lang.Object obj68 = defaultedMap37.get((java.lang.Object) defaultedMap63);
        defaultedMap24.putAll((java.util.Map) defaultedMap63);
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b72 = defaultedMap71.isEmpty();
        boolean b73 = defaultedMap71.isEmpty();
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj82 = null;
        java.lang.Object obj83 = defaultedMap80.put((java.lang.Object) 1, obj82);
        boolean b85 = defaultedMap80.containsKey((java.lang.Object) 1);
        defaultedMap80.clear();
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj90 = defaultedMap88.remove((java.lang.Object) (byte) 100);
        int i91 = defaultedMap88.size();
        java.lang.Object obj92 = defaultedMap80.remove((java.lang.Object) defaultedMap88);
        boolean b93 = defaultedMap75.containsKey((java.lang.Object) defaultedMap80);
        java.lang.Object obj94 = defaultedMap71.remove((java.lang.Object) defaultedMap75);
        defaultedMap71.clear();
        java.util.Set set96 = defaultedMap71.entrySet();
        java.lang.Object obj97 = defaultedMap24.remove((java.lang.Object) set96);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(set96);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        collections.Factory factory25 = null;
        try {
            java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        java.util.Set set29 = defaultedMap15.entrySet();
        java.util.Collection collection30 = defaultedMap15.values();
        java.lang.Object obj31 = defaultedMap1.get((java.lang.Object) collection30);
        java.util.Set set32 = defaultedMap1.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertNotNull(set32);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        collections.Transformer transformer14 = null;
        try {
            java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap10, transformer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj10 = null;
        boolean b11 = defaultedMap1.containsValue(obj10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        boolean b18 = defaultedMap13.containsKey((java.lang.Object) 1);
        java.lang.String str19 = defaultedMap13.toString();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap21.keySet();
        boolean b24 = defaultedMap21.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection25 = defaultedMap21.values();
        java.lang.String str26 = defaultedMap21.toString();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap28.isEmpty();
        java.lang.Object obj32 = defaultedMap28.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = defaultedMap28.get((java.lang.Object) defaultedMap39);
        java.lang.Object obj53 = defaultedMap39.get((java.lang.Object) 100L);
        java.lang.Object obj54 = defaultedMap21.remove((java.lang.Object) defaultedMap39);
        java.util.Map map55 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, obj54);
        boolean b56 = defaultedMap1.equals((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = null;
        java.lang.Object obj61 = defaultedMap58.put((java.lang.Object) 1, obj60);
        defaultedMap58.clear();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap58);
        int i64 = defaultedMap63.size();
        java.lang.Object obj65 = defaultedMap1.get((java.lang.Object) defaultedMap63);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "{1=null}" + "'", str19.equals("{1=null}"));
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{}" + "'", str26.equals("{}"));
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (byte) 0 + "'", obj51.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(map55);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (byte) 0 + "'", obj65.equals((byte) 0));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        boolean b8 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        boolean b14 = defaultedMap6.containsKey((java.lang.Object) 0.0f);
        java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap6);
        collections.Factory factory16 = null;
        try {
            java.util.Map map17 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(map15);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        int i20 = defaultedMap19.size();
        collections.Predicate predicate21 = null;
        collections.Predicate predicate22 = null;
        java.util.Map map23 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap19, predicate21, predicate22);
        collections.Predicate predicate24 = null;
        collections.Predicate predicate25 = null;
        java.util.Map map26 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap19, predicate24, predicate25);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) predicate24);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(map23);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertTrue(b27 == false);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj10 = null;
        boolean b11 = defaultedMap1.containsValue(obj10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        boolean b18 = defaultedMap13.containsKey((java.lang.Object) 1);
        java.lang.String str19 = defaultedMap13.toString();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap21.keySet();
        boolean b24 = defaultedMap21.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection25 = defaultedMap21.values();
        java.lang.String str26 = defaultedMap21.toString();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap28.isEmpty();
        java.lang.Object obj32 = defaultedMap28.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = defaultedMap28.get((java.lang.Object) defaultedMap39);
        java.lang.Object obj53 = defaultedMap39.get((java.lang.Object) 100L);
        java.lang.Object obj54 = defaultedMap21.remove((java.lang.Object) defaultedMap39);
        java.util.Map map55 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, obj54);
        boolean b56 = defaultedMap1.equals((java.lang.Object) defaultedMap13);
        boolean b57 = defaultedMap13.isEmpty();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "{1=null}" + "'", str19.equals("{1=null}"));
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{}" + "'", str26.equals("{}"));
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (byte) 0 + "'", obj51.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(map55);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == false);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.util.Set set4 = defaultedMap1.keySet();
        defaultedMap1.clear();
        int i6 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertTrue(i6 == 0);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection23 = defaultedMap22.values();
        boolean b24 = defaultedMap6.containsValue((java.lang.Object) collection23);
        collections.Factory factory25 = null;
        try {
            java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b24 == false);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap21.isEmpty();
        boolean b25 = defaultedMap21.equals((java.lang.Object) 10);
        java.lang.Object obj26 = defaultedMap6.get((java.lang.Object) b25);
        collections.Transformer transformer27 = null;
        try {
            java.util.Map map28 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, transformer27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.Predicate predicate7 = null;
        collections.Predicate predicate8 = null;
        java.util.Map map9 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate7, predicate8);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) map9);
        boolean b11 = defaultedMap10.isEmpty();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertNotNull(map9);
        org.junit.Assert.assertTrue(b11 == true);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.remove((java.lang.Object) 1.0f);
        java.util.Set set20 = defaultedMap17.keySet();
        collections.Predicate predicate21 = null;
        collections.Predicate predicate22 = null;
        java.util.Map map23 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate21, predicate22);
        java.lang.Object obj24 = defaultedMap14.remove((java.lang.Object) predicate22);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(map23);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        java.lang.String str42 = defaultedMap39.toString();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set45 = defaultedMap44.keySet();
        java.util.Collection collection46 = defaultedMap44.values();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set49 = defaultedMap48.keySet();
        boolean b51 = defaultedMap48.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection52 = defaultedMap48.values();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) collection52);
        boolean b54 = defaultedMap53.isEmpty();
        boolean b55 = defaultedMap44.containsValue((java.lang.Object) defaultedMap53);
        boolean b56 = defaultedMap44.isEmpty();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap44);
        boolean b58 = defaultedMap57.isEmpty();
        java.util.Collection collection59 = defaultedMap57.values();
        java.lang.Object obj60 = defaultedMap39.get((java.lang.Object) collection59);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "{}" + "'", str42.equals("{}"));
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertNotNull(collection46);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        collections.Factory factory15 = null;
        try {
            java.util.Map map16 = collections.map.DefaultedMap.decorate(map14, factory15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(map14);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        int i5 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = null;
        boolean b25 = defaultedMap12.containsValue(obj24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b28 = defaultedMap27.isEmpty();
        boolean b29 = defaultedMap27.isEmpty();
        boolean b31 = defaultedMap27.equals((java.lang.Object) 10);
        java.lang.Object obj32 = defaultedMap12.get((java.lang.Object) b31);
        java.util.Set set33 = defaultedMap12.keySet();
        boolean b34 = defaultedMap1.containsValue((java.lang.Object) defaultedMap12);
        collections.Factory factory35 = null;
        try {
            java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b34 == false);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap12);
        collections.Predicate predicate25 = null;
        collections.Predicate predicate26 = null;
        java.util.Map map27 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate25, predicate26);
        collections.Transformer transformer28 = null;
        try {
            java.util.Map map29 = collections.map.DefaultedMap.decorate(map27, transformer28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNotNull(map27);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b4 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b4 == true);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        java.lang.String str13 = defaultedMap1.toString();
        collections.Transformer transformer14 = null;
        try {
            java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.get((java.lang.Object) 0.0f);
        boolean b11 = defaultedMap8.isEmpty();
        java.lang.Object obj14 = defaultedMap8.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b16 = defaultedMap1.equals((java.lang.Object) defaultedMap15);
        defaultedMap15.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        java.lang.String str24 = defaultedMap19.toString();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection30 = defaultedMap26.values();
        java.lang.String str31 = defaultedMap26.toString();
        collections.Predicate predicate32 = null;
        collections.Predicate predicate33 = null;
        java.util.Map map34 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap26, predicate32, predicate33);
        java.lang.Object obj35 = defaultedMap15.put((java.lang.Object) defaultedMap19, (java.lang.Object) map34);
        collections.Factory factory36 = null;
        try {
            java.util.Map map37 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap19, factory36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "{}" + "'", str24.equals("{}"));
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "{}" + "'", str31.equals("{}"));
        org.junit.Assert.assertNotNull(map34);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        java.util.Set set35 = defaultedMap31.keySet();
        boolean b36 = defaultedMap6.containsValue((java.lang.Object) set35);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = defaultedMap38.remove((java.lang.Object) 1.0f);
        defaultedMap38.clear();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        boolean b46 = defaultedMap43.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection47 = defaultedMap43.values();
        java.util.Set set48 = defaultedMap43.keySet();
        java.util.Set set49 = defaultedMap43.entrySet();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.remove((java.lang.Object) 1.0f);
        defaultedMap51.clear();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj58 = defaultedMap56.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = null;
        java.lang.Object obj63 = defaultedMap60.put((java.lang.Object) 1, obj62);
        boolean b65 = defaultedMap60.containsKey((java.lang.Object) 1);
        defaultedMap60.clear();
        java.lang.Object obj67 = defaultedMap51.put((java.lang.Object) defaultedMap56, (java.lang.Object) defaultedMap60);
        collections.Predicate predicate68 = null;
        collections.Predicate predicate69 = null;
        java.util.Map map70 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap51, predicate68, predicate69);
        java.lang.Object obj71 = defaultedMap38.put((java.lang.Object) set49, (java.lang.Object) predicate69);
        java.util.Map map72 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, obj71);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(map70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(map72);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        int i6 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.remove((java.lang.Object) 1.0f);
        java.lang.Object obj12 = defaultedMap8.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        java.lang.Object obj18 = defaultedMap14.remove((java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap8.get((java.lang.Object) 'a');
        boolean b20 = defaultedMap1.containsKey(obj19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        java.lang.String str27 = defaultedMap22.toString();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b30 = defaultedMap29.isEmpty();
        boolean b31 = defaultedMap29.isEmpty();
        java.lang.Object obj33 = defaultedMap29.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = defaultedMap35.remove((java.lang.Object) 1.0f);
        defaultedMap35.clear();
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = defaultedMap40.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) 1, obj46);
        boolean b49 = defaultedMap44.containsKey((java.lang.Object) 1);
        defaultedMap44.clear();
        java.lang.Object obj51 = defaultedMap35.put((java.lang.Object) defaultedMap40, (java.lang.Object) defaultedMap44);
        java.lang.Object obj52 = defaultedMap29.get((java.lang.Object) defaultedMap40);
        java.lang.Object obj54 = defaultedMap40.get((java.lang.Object) 100L);
        java.lang.Object obj55 = defaultedMap22.remove((java.lang.Object) defaultedMap40);
        boolean b56 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set59 = defaultedMap58.keySet();
        boolean b61 = defaultedMap58.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        boolean b64 = defaultedMap63.isEmpty();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj68 = defaultedMap66.remove((java.lang.Object) 1.0f);
        defaultedMap66.clear();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj73 = defaultedMap71.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj77 = null;
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) 1, obj77);
        boolean b80 = defaultedMap75.containsKey((java.lang.Object) 1);
        defaultedMap75.clear();
        java.lang.Object obj82 = defaultedMap66.put((java.lang.Object) defaultedMap71, (java.lang.Object) defaultedMap75);
        collections.Predicate predicate83 = null;
        collections.Predicate predicate84 = null;
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap66, predicate83, predicate84);
        java.lang.Object obj86 = defaultedMap63.get((java.lang.Object) predicate83);
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj90 = null;
        java.lang.Object obj91 = defaultedMap88.put((java.lang.Object) 1, obj90);
        java.util.Set set92 = defaultedMap88.keySet();
        boolean b93 = defaultedMap63.containsValue((java.lang.Object) set92);
        boolean b94 = defaultedMap22.equals((java.lang.Object) defaultedMap63);
        boolean b95 = defaultedMap1.containsValue((java.lang.Object) b94);
        collections.Factory factory96 = null;
        try {
            java.util.Map map97 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "{}" + "'", str27.equals("{}"));
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte) 0 + "'", obj52.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte) 0 + "'", obj54.equals((byte) 0));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(set92);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(b95 == false);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        java.lang.String str13 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        java.util.Collection collection17 = defaultedMap15.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        boolean b26 = defaultedMap15.containsValue((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap15.isEmpty();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap15.putAll((java.util.Map) defaultedMap30);
        java.lang.Object obj35 = defaultedMap1.get((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        java.util.Collection collection39 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection45 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) collection45);
        boolean b47 = defaultedMap46.isEmpty();
        boolean b48 = defaultedMap37.containsValue((java.lang.Object) defaultedMap46);
        boolean b49 = defaultedMap1.containsValue((java.lang.Object) b48);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == false);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        boolean b30 = defaultedMap6.isEmpty();
        collections.Predicate predicate31 = null;
        collections.Predicate predicate32 = null;
        java.util.Map map33 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap6, predicate31, predicate32);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set36 = defaultedMap35.keySet();
        java.util.Collection collection37 = defaultedMap35.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set40 = defaultedMap39.keySet();
        boolean b42 = defaultedMap39.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection43 = defaultedMap39.values();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) collection43);
        boolean b45 = defaultedMap44.isEmpty();
        boolean b46 = defaultedMap35.containsValue((java.lang.Object) defaultedMap44);
        int i47 = defaultedMap44.size();
        defaultedMap44.clear();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set51 = defaultedMap50.keySet();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set54 = defaultedMap53.keySet();
        boolean b56 = defaultedMap53.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection57 = defaultedMap53.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) collection57);
        boolean b59 = defaultedMap58.isEmpty();
        java.lang.Object obj60 = defaultedMap50.get((java.lang.Object) defaultedMap58);
        boolean b61 = defaultedMap44.containsValue((java.lang.Object) defaultedMap58);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap58);
        java.util.Set set64 = defaultedMap58.keySet();
        java.lang.Object obj65 = defaultedMap6.get((java.lang.Object) set64);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(map33);
        org.junit.Assert.assertNotNull(set36);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(collection43);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNotNull(collection57);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (byte) 0 + "'", obj60.equals((byte) 0));
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertNotNull(set64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap21.isEmpty();
        boolean b25 = defaultedMap21.equals((java.lang.Object) 10);
        java.lang.Object obj26 = defaultedMap6.get((java.lang.Object) b25);
        java.lang.Object obj28 = defaultedMap6.get((java.lang.Object) 0L);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap30.keySet();
        java.util.Collection collection32 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set35 = defaultedMap34.keySet();
        boolean b37 = defaultedMap34.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection38 = defaultedMap34.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) collection38);
        boolean b40 = defaultedMap39.isEmpty();
        boolean b41 = defaultedMap30.containsValue((java.lang.Object) defaultedMap39);
        boolean b42 = defaultedMap30.isEmpty();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap30);
        boolean b44 = defaultedMap43.isEmpty();
        java.util.Collection collection45 = defaultedMap43.values();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj49 = defaultedMap47.remove((java.lang.Object) 1.0f);
        defaultedMap43.putAll((java.util.Map) defaultedMap47);
        java.util.Collection collection51 = defaultedMap43.values();
        java.lang.Object obj52 = defaultedMap6.get((java.lang.Object) collection51);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b55 = defaultedMap54.isEmpty();
        boolean b56 = defaultedMap54.isEmpty();
        boolean b58 = defaultedMap54.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b61 = defaultedMap54.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set62 = defaultedMap54.entrySet();
        boolean b63 = defaultedMap6.equals((java.lang.Object) set62);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (byte) 0 + "'", obj28.equals((byte) 0));
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte) 0 + "'", obj52.equals((byte) 0));
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertTrue(b63 == false);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        int i6 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.remove((java.lang.Object) 1.0f);
        java.lang.Object obj12 = defaultedMap8.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        java.lang.Object obj18 = defaultedMap14.remove((java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap8.get((java.lang.Object) 'a');
        boolean b20 = defaultedMap1.containsKey(obj19);
        collections.Transformer transformer21 = null;
        try {
            java.util.Map map22 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertTrue(b20 == false);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set8 = defaultedMap7.keySet();
        java.lang.Object obj10 = defaultedMap7.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        java.lang.Object obj16 = defaultedMap12.remove((java.lang.Object) 'a');
        defaultedMap7.putAll((java.util.Map) defaultedMap12);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap7, predicate18, predicate19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) collection26);
        boolean b28 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        defaultedMap30.clear();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = defaultedMap35.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        boolean b44 = defaultedMap39.containsKey((java.lang.Object) 1);
        defaultedMap39.clear();
        java.lang.Object obj46 = defaultedMap30.put((java.lang.Object) defaultedMap35, (java.lang.Object) defaultedMap39);
        collections.Predicate predicate47 = null;
        collections.Predicate predicate48 = null;
        java.util.Map map49 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate47, predicate48);
        java.lang.Object obj50 = defaultedMap27.get((java.lang.Object) predicate47);
        java.util.Set set51 = defaultedMap27.entrySet();
        java.lang.Object obj52 = defaultedMap1.put((java.lang.Object) defaultedMap7, (java.lang.Object) defaultedMap27);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = defaultedMap54.remove((java.lang.Object) 1.0f);
        java.util.Set set57 = defaultedMap54.keySet();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap59.keySet();
        boolean b62 = defaultedMap59.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection63 = defaultedMap59.values();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) collection63);
        boolean b65 = defaultedMap64.isEmpty();
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = defaultedMap67.remove((java.lang.Object) 1.0f);
        defaultedMap67.clear();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj74 = defaultedMap72.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj78 = null;
        java.lang.Object obj79 = defaultedMap76.put((java.lang.Object) 1, obj78);
        boolean b81 = defaultedMap76.containsKey((java.lang.Object) 1);
        defaultedMap76.clear();
        java.lang.Object obj83 = defaultedMap67.put((java.lang.Object) defaultedMap72, (java.lang.Object) defaultedMap76);
        collections.Predicate predicate84 = null;
        collections.Predicate predicate85 = null;
        java.util.Map map86 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap67, predicate84, predicate85);
        java.lang.Object obj87 = defaultedMap64.get((java.lang.Object) predicate84);
        java.util.Set set88 = defaultedMap64.entrySet();
        java.util.Map map89 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap54, (java.lang.Object) defaultedMap64);
        boolean b90 = defaultedMap27.equals((java.lang.Object) map89);
        boolean b91 = defaultedMap27.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(map49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(set57);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(map86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(set88);
        org.junit.Assert.assertNotNull(map89);
        org.junit.Assert.assertTrue(b90 == true);
        org.junit.Assert.assertTrue(b91 == true);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        int i7 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) collection13);
        boolean b15 = defaultedMap14.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.remove((java.lang.Object) 1.0f);
        defaultedMap17.clear();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = null;
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) 1, obj28);
        boolean b31 = defaultedMap26.containsKey((java.lang.Object) 1);
        defaultedMap26.clear();
        java.lang.Object obj33 = defaultedMap17.put((java.lang.Object) defaultedMap22, (java.lang.Object) defaultedMap26);
        collections.Predicate predicate34 = null;
        collections.Predicate predicate35 = null;
        java.util.Map map36 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate34, predicate35);
        java.lang.Object obj37 = defaultedMap14.get((java.lang.Object) predicate34);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        java.util.Set set43 = defaultedMap39.keySet();
        boolean b44 = defaultedMap14.containsValue((java.lang.Object) set43);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection47 = defaultedMap46.values();
        java.lang.Object obj48 = defaultedMap1.put((java.lang.Object) b44, (java.lang.Object) defaultedMap46);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.remove((java.lang.Object) 1.0f);
        defaultedMap50.clear();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = defaultedMap55.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj61 = null;
        java.lang.Object obj62 = defaultedMap59.put((java.lang.Object) 1, obj61);
        boolean b64 = defaultedMap59.containsKey((java.lang.Object) 1);
        defaultedMap59.clear();
        java.lang.Object obj66 = defaultedMap50.put((java.lang.Object) defaultedMap55, (java.lang.Object) defaultedMap59);
        java.lang.Object obj67 = null;
        boolean b68 = defaultedMap55.containsValue(obj67);
        java.util.Set set69 = defaultedMap55.entrySet();
        boolean b70 = defaultedMap46.containsValue((java.lang.Object) set69);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set73 = defaultedMap72.keySet();
        java.lang.Object obj75 = defaultedMap72.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj79 = defaultedMap77.remove((java.lang.Object) 1.0f);
        java.lang.Object obj81 = defaultedMap77.remove((java.lang.Object) 'a');
        defaultedMap72.putAll((java.util.Map) defaultedMap77);
        collections.Predicate predicate83 = null;
        collections.Predicate predicate84 = null;
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap72, predicate83, predicate84);
        java.util.Map map86 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap46, (java.lang.Object) map85);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNotNull(set69);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNotNull(set73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + (byte) 0 + "'", obj75.equals((byte) 0));
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNotNull(map86);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        boolean b30 = defaultedMap6.isEmpty();
        java.util.Set set31 = defaultedMap6.keySet();
        java.util.Collection collection32 = defaultedMap6.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertNotNull(collection32);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        boolean b15 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(b15 == true);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = null;
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) 1, obj31);
        java.util.Set set33 = defaultedMap29.keySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) set33);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set37 = defaultedMap36.keySet();
        java.util.Collection collection38 = defaultedMap36.values();
        defaultedMap34.putAll((java.util.Map) defaultedMap36);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        java.util.Collection collection43 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set46 = defaultedMap45.keySet();
        boolean b48 = defaultedMap45.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection49 = defaultedMap45.values();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) collection49);
        boolean b51 = defaultedMap50.isEmpty();
        boolean b52 = defaultedMap41.containsValue((java.lang.Object) defaultedMap50);
        int i53 = defaultedMap50.size();
        defaultedMap50.clear();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set57 = defaultedMap56.keySet();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap59.keySet();
        boolean b62 = defaultedMap59.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection63 = defaultedMap59.values();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) collection63);
        boolean b65 = defaultedMap64.isEmpty();
        java.lang.Object obj66 = defaultedMap56.get((java.lang.Object) defaultedMap64);
        boolean b67 = defaultedMap50.containsValue((java.lang.Object) defaultedMap64);
        java.util.Collection collection68 = defaultedMap64.values();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap64);
        java.util.Set set70 = defaultedMap64.keySet();
        boolean b71 = defaultedMap34.equals((java.lang.Object) set70);
        java.lang.Object obj72 = defaultedMap10.get((java.lang.Object) b71);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertNotNull(collection43);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNotNull(collection49);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertNotNull(set57);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (byte) 0 + "'", obj66.equals((byte) 0));
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertNotNull(collection68);
        org.junit.Assert.assertNotNull(set70);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        int i7 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) collection13);
        boolean b15 = defaultedMap14.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.remove((java.lang.Object) 1.0f);
        defaultedMap17.clear();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = null;
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) 1, obj28);
        boolean b31 = defaultedMap26.containsKey((java.lang.Object) 1);
        defaultedMap26.clear();
        java.lang.Object obj33 = defaultedMap17.put((java.lang.Object) defaultedMap22, (java.lang.Object) defaultedMap26);
        collections.Predicate predicate34 = null;
        collections.Predicate predicate35 = null;
        java.util.Map map36 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate34, predicate35);
        java.lang.Object obj37 = defaultedMap14.get((java.lang.Object) predicate34);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        java.util.Set set43 = defaultedMap39.keySet();
        boolean b44 = defaultedMap14.containsValue((java.lang.Object) set43);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection47 = defaultedMap46.values();
        java.lang.Object obj48 = defaultedMap1.put((java.lang.Object) b44, (java.lang.Object) defaultedMap46);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b55 = defaultedMap54.isEmpty();
        java.util.Set set56 = defaultedMap54.entrySet();
        boolean b57 = defaultedMap50.containsValue((java.lang.Object) set56);
        java.lang.Object obj58 = defaultedMap1.get((java.lang.Object) b57);
        collections.Predicate predicate59 = null;
        collections.Predicate predicate60 = null;
        java.util.Map map61 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate59, predicate60);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte) 0 + "'", obj52.equals((byte) 0));
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(map61);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.util.Set set6 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        boolean b15 = defaultedMap12.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection16 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) collection16);
        boolean b18 = defaultedMap17.isEmpty();
        boolean b19 = defaultedMap8.containsValue((java.lang.Object) defaultedMap17);
        java.lang.Object obj20 = new java.lang.Object();
        boolean b21 = defaultedMap17.containsValue(obj20);
        boolean b22 = defaultedMap17.isEmpty();
        boolean b24 = defaultedMap17.containsKey((java.lang.Object) (short) -1);
        defaultedMap1.putAll((java.util.Map) defaultedMap17);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = null;
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) 1, obj29);
        defaultedMap27.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set34 = defaultedMap33.keySet();
        java.lang.Object obj36 = defaultedMap33.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = defaultedMap38.remove((java.lang.Object) 1.0f);
        java.lang.Object obj42 = defaultedMap38.remove((java.lang.Object) 'a');
        defaultedMap33.putAll((java.util.Map) defaultedMap38);
        collections.Predicate predicate44 = null;
        collections.Predicate predicate45 = null;
        java.util.Map map46 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap33, predicate44, predicate45);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set49 = defaultedMap48.keySet();
        boolean b51 = defaultedMap48.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection52 = defaultedMap48.values();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) collection52);
        boolean b54 = defaultedMap53.isEmpty();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj58 = defaultedMap56.remove((java.lang.Object) 1.0f);
        defaultedMap56.clear();
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = defaultedMap61.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj67 = null;
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) 1, obj67);
        boolean b70 = defaultedMap65.containsKey((java.lang.Object) 1);
        defaultedMap65.clear();
        java.lang.Object obj72 = defaultedMap56.put((java.lang.Object) defaultedMap61, (java.lang.Object) defaultedMap65);
        collections.Predicate predicate73 = null;
        collections.Predicate predicate74 = null;
        java.util.Map map75 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap56, predicate73, predicate74);
        java.lang.Object obj76 = defaultedMap53.get((java.lang.Object) predicate73);
        java.util.Set set77 = defaultedMap53.entrySet();
        java.lang.Object obj78 = defaultedMap27.put((java.lang.Object) defaultedMap33, (java.lang.Object) defaultedMap53);
        defaultedMap1.putAll((java.util.Map) defaultedMap33);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (byte) 0 + "'", obj36.equals((byte) 0));
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(map46);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(map75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(set77);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b6 = defaultedMap5.isEmpty();
        java.util.Set set7 = defaultedMap5.entrySet();
        boolean b8 = defaultedMap1.containsValue((java.lang.Object) set7);
        defaultedMap1.clear();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj10 = defaultedMap8.remove((java.lang.Object) (byte) 100);
        int i11 = defaultedMap8.size();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = defaultedMap13.remove((java.lang.Object) 1.0f);
        java.lang.Object obj17 = defaultedMap13.remove((java.lang.Object) 'a');
        java.lang.Object obj18 = defaultedMap8.get((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set21 = defaultedMap20.keySet();
        boolean b23 = defaultedMap20.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection24 = defaultedMap20.values();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) collection24);
        int i26 = defaultedMap25.size();
        collections.Predicate predicate27 = null;
        collections.Predicate predicate28 = null;
        java.util.Map map29 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap25, predicate27, predicate28);
        java.lang.Object obj30 = defaultedMap13.get((java.lang.Object) defaultedMap25);
        java.lang.Object obj31 = null;
        boolean b32 = defaultedMap13.equals(obj31);
        java.lang.Object obj33 = defaultedMap1.get(obj31);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 0 + "'", obj18.equals(0));
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertNotNull(map29);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (byte) 0 + "'", obj30.equals((byte) 0));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        java.util.Set set24 = defaultedMap22.keySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        java.util.Collection collection28 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap30.keySet();
        boolean b33 = defaultedMap30.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection34 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) collection34);
        boolean b36 = defaultedMap35.isEmpty();
        boolean b37 = defaultedMap26.containsValue((java.lang.Object) defaultedMap35);
        int i38 = defaultedMap35.size();
        java.util.Set set39 = defaultedMap35.keySet();
        defaultedMap22.putAll((java.util.Map) defaultedMap35);
        java.lang.Object obj41 = defaultedMap1.get((java.lang.Object) defaultedMap22);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        java.lang.String str49 = defaultedMap43.toString();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set52 = defaultedMap51.keySet();
        boolean b54 = defaultedMap51.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection55 = defaultedMap51.values();
        java.lang.String str56 = defaultedMap51.toString();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap58.isEmpty();
        boolean b60 = defaultedMap58.isEmpty();
        java.lang.Object obj62 = defaultedMap58.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = defaultedMap64.remove((java.lang.Object) 1.0f);
        defaultedMap64.clear();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj71 = defaultedMap69.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj75 = null;
        java.lang.Object obj76 = defaultedMap73.put((java.lang.Object) 1, obj75);
        boolean b78 = defaultedMap73.containsKey((java.lang.Object) 1);
        defaultedMap73.clear();
        java.lang.Object obj80 = defaultedMap64.put((java.lang.Object) defaultedMap69, (java.lang.Object) defaultedMap73);
        java.lang.Object obj81 = defaultedMap58.get((java.lang.Object) defaultedMap69);
        java.lang.Object obj83 = defaultedMap69.get((java.lang.Object) 100L);
        java.lang.Object obj84 = defaultedMap51.remove((java.lang.Object) defaultedMap69);
        java.util.Map map85 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap43, obj84);
        boolean b86 = defaultedMap1.containsKey((java.lang.Object) defaultedMap43);
        collections.Predicate predicate87 = null;
        collections.Predicate predicate88 = null;
        java.util.Map map89 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate87, predicate88);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(collection34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "{1=null}" + "'", str49.equals("{1=null}"));
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNotNull(collection55);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "{}" + "'", str56.equals("{}"));
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (byte) 0 + "'", obj62.equals((byte) 0));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (byte) 0 + "'", obj81.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (byte) 0 + "'", obj83.equals((byte) 0));
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertTrue(b86 == false);
        org.junit.Assert.assertNotNull(map89);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        java.util.Set set14 = defaultedMap10.keySet();
        boolean b15 = defaultedMap10.isEmpty();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b15 == true);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Set set10 = defaultedMap8.keySet();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(set10);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection2 = defaultedMap1.values();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.Factory factory4 = null;
        try {
            java.util.Map map5 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(collection2);
        org.junit.Assert.assertNotNull(collection3);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set5 = defaultedMap4.keySet();
        boolean b7 = defaultedMap4.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection8 = defaultedMap4.values();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) collection8);
        boolean b10 = defaultedMap9.isEmpty();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap9);
        java.util.Collection collection12 = defaultedMap9.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertNotNull(collection12);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set8 = defaultedMap7.keySet();
        java.lang.Object obj10 = defaultedMap7.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        java.lang.Object obj16 = defaultedMap12.remove((java.lang.Object) 'a');
        defaultedMap7.putAll((java.util.Map) defaultedMap12);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap7, predicate18, predicate19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) "");
        boolean b23 = defaultedMap7.containsKey((java.lang.Object) defaultedMap22);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap22);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.Predicate predicate7 = null;
        collections.Predicate predicate8 = null;
        java.util.Map map9 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate7, predicate8);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) map9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        java.util.Collection collection14 = defaultedMap12.values();
        java.util.Set set15 = defaultedMap12.keySet();
        java.util.Map map16 = collections.map.DefaultedMap.decorate(map9, (java.lang.Object) set15);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertNotNull(map9);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertNotNull(collection14);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertNotNull(map16);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.lang.String str9 = defaultedMap1.toString();
        defaultedMap1.clear();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "{}" + "'", str9.equals("{}"));
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        int i25 = defaultedMap22.size();
        java.util.Set set26 = defaultedMap22.keySet();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set29 = defaultedMap28.keySet();
        java.util.Collection collection30 = defaultedMap28.values();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set33 = defaultedMap32.keySet();
        boolean b35 = defaultedMap32.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection36 = defaultedMap32.values();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) collection36);
        boolean b38 = defaultedMap37.isEmpty();
        boolean b39 = defaultedMap28.containsValue((java.lang.Object) defaultedMap37);
        java.lang.Object obj40 = new java.lang.Object();
        boolean b41 = defaultedMap37.containsValue(obj40);
        boolean b42 = defaultedMap22.containsValue(obj40);
        java.lang.Object obj43 = defaultedMap1.get(obj40);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b50 = defaultedMap49.isEmpty();
        java.util.Set set51 = defaultedMap49.entrySet();
        boolean b52 = defaultedMap45.containsValue((java.lang.Object) set51);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set55 = defaultedMap54.keySet();
        java.util.Collection collection56 = defaultedMap54.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set59 = defaultedMap58.keySet();
        boolean b61 = defaultedMap58.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        boolean b64 = defaultedMap63.isEmpty();
        boolean b65 = defaultedMap54.containsValue((java.lang.Object) defaultedMap63);
        boolean b66 = defaultedMap54.isEmpty();
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap54);
        boolean b68 = defaultedMap67.isEmpty();
        java.util.Collection collection69 = defaultedMap67.values();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj73 = defaultedMap71.remove((java.lang.Object) 1.0f);
        defaultedMap67.putAll((java.util.Map) defaultedMap71);
        java.util.Collection collection75 = defaultedMap67.values();
        java.util.Map map76 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap45, (java.lang.Object) collection75);
        boolean b77 = defaultedMap1.containsKey((java.lang.Object) defaultedMap45);
        collections.Transformer transformer78 = null;
        try {
            java.util.Map map79 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(set26);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertNotNull(collection36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + 0 + "'", obj43.equals(0));
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte) 0 + "'", obj47.equals((byte) 0));
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertNotNull(collection69);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(collection75);
        org.junit.Assert.assertNotNull(map76);
        org.junit.Assert.assertTrue(b77 == false);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = null;
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) 1, obj14);
        boolean b17 = defaultedMap12.containsKey((java.lang.Object) 1);
        java.util.Map map18 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap12);
        collections.Transformer transformer19 = null;
        try {
            java.util.Map map20 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(map18);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        boolean b35 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        boolean b40 = defaultedMap37.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection41 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) collection41);
        boolean b43 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.remove((java.lang.Object) 1.0f);
        defaultedMap45.clear();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = null;
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) 1, obj56);
        boolean b59 = defaultedMap54.containsKey((java.lang.Object) 1);
        defaultedMap54.clear();
        java.lang.Object obj61 = defaultedMap45.put((java.lang.Object) defaultedMap50, (java.lang.Object) defaultedMap54);
        collections.Predicate predicate62 = null;
        collections.Predicate predicate63 = null;
        java.util.Map map64 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap45, predicate62, predicate63);
        java.lang.Object obj65 = defaultedMap42.get((java.lang.Object) predicate62);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = defaultedMap67.put((java.lang.Object) 1, obj69);
        java.util.Set set71 = defaultedMap67.keySet();
        boolean b72 = defaultedMap42.containsValue((java.lang.Object) set71);
        boolean b73 = defaultedMap1.equals((java.lang.Object) defaultedMap42);
        java.util.Collection collection74 = defaultedMap1.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(collection41);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(map64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(set71);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertNotNull(collection74);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.Predicate predicate5 = null;
        collections.Predicate predicate6 = null;
        java.util.Map map7 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate5, predicate6);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNotNull(map7);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.lang.String str5 = defaultedMap1.toString();
        int i6 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        boolean b11 = defaultedMap8.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        java.util.Set set17 = defaultedMap13.keySet();
        java.lang.Object obj18 = defaultedMap8.get((java.lang.Object) defaultedMap13);
        boolean b19 = defaultedMap1.equals(obj18);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{1=null}" + "'", str5.equals("{1=null}"));
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (byte) 0 + "'", obj18.equals((byte) 0));
        org.junit.Assert.assertTrue(b19 == false);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 10L);
        java.util.Set set4 = defaultedMap1.entrySet();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertNotNull(set4);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set5 = defaultedMap4.keySet();
        boolean b7 = defaultedMap4.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection8 = defaultedMap4.values();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) collection8);
        boolean b10 = defaultedMap9.isEmpty();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap13, predicate18, predicate19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        defaultedMap22.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        boolean b36 = defaultedMap31.containsKey((java.lang.Object) 1);
        defaultedMap31.clear();
        java.lang.Object obj38 = defaultedMap22.put((java.lang.Object) defaultedMap27, (java.lang.Object) defaultedMap31);
        java.lang.Object obj39 = null;
        boolean b40 = defaultedMap27.containsValue(obj39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b43 = defaultedMap42.isEmpty();
        boolean b44 = defaultedMap42.isEmpty();
        boolean b46 = defaultedMap42.equals((java.lang.Object) 10);
        java.lang.Object obj47 = defaultedMap27.get((java.lang.Object) b46);
        java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, (java.lang.Object) defaultedMap27);
        collections.Predicate predicate49 = null;
        collections.Predicate predicate50 = null;
        java.util.Map map51 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap13, predicate49, predicate50);
        defaultedMap13.clear();
        defaultedMap13.clear();
        boolean b54 = defaultedMap9.containsKey((java.lang.Object) defaultedMap13);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte) 0 + "'", obj47.equals((byte) 0));
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNotNull(map51);
        org.junit.Assert.assertTrue(b54 == false);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection23 = defaultedMap22.values();
        boolean b24 = defaultedMap6.containsValue((java.lang.Object) collection23);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) b24);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b24 == false);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap38.isEmpty();
        boolean b40 = defaultedMap38.isEmpty();
        java.lang.Object obj42 = defaultedMap38.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = defaultedMap44.remove((java.lang.Object) 1.0f);
        defaultedMap44.clear();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj51 = defaultedMap49.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = null;
        java.lang.Object obj56 = defaultedMap53.put((java.lang.Object) 1, obj55);
        boolean b58 = defaultedMap53.containsKey((java.lang.Object) 1);
        defaultedMap53.clear();
        java.lang.Object obj60 = defaultedMap44.put((java.lang.Object) defaultedMap49, (java.lang.Object) defaultedMap53);
        java.lang.Object obj61 = defaultedMap38.get((java.lang.Object) defaultedMap49);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, (java.lang.Object) defaultedMap38);
        java.util.Set set63 = defaultedMap15.keySet();
        java.lang.String str64 = defaultedMap15.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (byte) 0 + "'", obj42.equals((byte) 0));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (byte) 0 + "'", obj61.equals((byte) 0));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "{}" + "'", str64.equals("{}"));
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) b4);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap7.isEmpty();
        boolean b9 = defaultedMap7.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) (byte) 100);
        int i27 = defaultedMap24.size();
        java.lang.Object obj28 = defaultedMap16.remove((java.lang.Object) defaultedMap24);
        boolean b29 = defaultedMap11.containsKey((java.lang.Object) defaultedMap16);
        java.lang.Object obj30 = defaultedMap7.remove((java.lang.Object) defaultedMap11);
        defaultedMap7.clear();
        java.util.Set set32 = defaultedMap7.entrySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = null;
        boolean b52 = defaultedMap39.containsValue(obj51);
        java.util.Set set53 = defaultedMap39.entrySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection56 = defaultedMap55.values();
        boolean b57 = defaultedMap39.containsValue((java.lang.Object) collection56);
        defaultedMap7.putAll((java.util.Map) defaultedMap39);
        java.util.Map map59 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap5, (java.lang.Object) defaultedMap39);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set62 = defaultedMap61.keySet();
        java.util.Collection collection63 = defaultedMap61.values();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set66 = defaultedMap65.keySet();
        boolean b68 = defaultedMap65.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection69 = defaultedMap65.values();
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) collection69);
        boolean b71 = defaultedMap70.isEmpty();
        boolean b72 = defaultedMap61.containsValue((java.lang.Object) defaultedMap70);
        boolean b73 = defaultedMap61.isEmpty();
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap61);
        boolean b75 = defaultedMap74.isEmpty();
        java.util.Collection collection76 = defaultedMap74.values();
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj80 = defaultedMap78.remove((java.lang.Object) 1.0f);
        defaultedMap74.putAll((java.util.Map) defaultedMap78);
        java.util.Collection collection82 = defaultedMap74.values();
        java.util.Map map83 = collections.map.DefaultedMap.decorate(map59, (java.lang.Object) collection82);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertNotNull(set66);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNotNull(collection69);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertNotNull(collection76);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(collection82);
        org.junit.Assert.assertNotNull(map83);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        java.lang.String str22 = defaultedMap17.toString();
        collections.Predicate predicate23 = null;
        collections.Predicate predicate24 = null;
        java.util.Map map25 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate23, predicate24);
        boolean b26 = defaultedMap1.containsValue((java.lang.Object) defaultedMap17);
        boolean b27 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{}" + "'", str22.equals("{}"));
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == true);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.lang.String str5 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b12 = defaultedMap11.isEmpty();
        java.util.Set set13 = defaultedMap11.entrySet();
        boolean b14 = defaultedMap7.containsValue((java.lang.Object) set13);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        java.util.Collection collection18 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set21 = defaultedMap20.keySet();
        boolean b23 = defaultedMap20.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection24 = defaultedMap20.values();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) collection24);
        boolean b26 = defaultedMap25.isEmpty();
        boolean b27 = defaultedMap16.containsValue((java.lang.Object) defaultedMap25);
        boolean b28 = defaultedMap16.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap16);
        boolean b30 = defaultedMap29.isEmpty();
        java.util.Collection collection31 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        defaultedMap29.putAll((java.util.Map) defaultedMap33);
        java.util.Collection collection37 = defaultedMap29.values();
        java.util.Map map38 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap7, (java.lang.Object) collection37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap40.keySet();
        boolean b43 = defaultedMap40.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection44 = defaultedMap40.values();
        java.lang.String str45 = defaultedMap40.toString();
        collections.Predicate predicate46 = null;
        collections.Predicate predicate47 = null;
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap40, predicate46, predicate47);
        java.util.Map map49 = collections.map.DefaultedMap.decorate(map38, (java.lang.Object) map48);
        java.util.Map map50 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) map48);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set53 = defaultedMap52.keySet();
        boolean b55 = defaultedMap52.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection56 = defaultedMap52.values();
        collections.Predicate predicate57 = null;
        collections.Predicate predicate58 = null;
        java.util.Map map59 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap52, predicate57, predicate58);
        java.util.Map map60 = collections.map.DefaultedMap.decorate(map50, (java.lang.Object) predicate58);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{1=null}" + "'", str5.equals("{1=null}"));
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (byte) 0 + "'", obj9.equals((byte) 0));
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertNotNull(map38);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "{}" + "'", str45.equals("{}"));
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNotNull(map49);
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNotNull(map60);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        boolean b30 = defaultedMap29.isEmpty();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertTrue(b30 == true);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap21.isEmpty();
        boolean b25 = defaultedMap21.equals((java.lang.Object) 10);
        java.lang.Object obj26 = defaultedMap6.get((java.lang.Object) b25);
        java.util.Set set27 = defaultedMap6.entrySet();
        collections.Transformer transformer28 = null;
        try {
            java.util.Map map29 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, transformer28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertNotNull(set27);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        int i6 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.remove((java.lang.Object) 1.0f);
        java.lang.Object obj12 = defaultedMap8.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        java.lang.Object obj18 = defaultedMap14.remove((java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap8.get((java.lang.Object) 'a');
        boolean b20 = defaultedMap1.containsKey(obj19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        java.lang.String str27 = defaultedMap22.toString();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b30 = defaultedMap29.isEmpty();
        boolean b31 = defaultedMap29.isEmpty();
        java.lang.Object obj33 = defaultedMap29.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = defaultedMap35.remove((java.lang.Object) 1.0f);
        defaultedMap35.clear();
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = defaultedMap40.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) 1, obj46);
        boolean b49 = defaultedMap44.containsKey((java.lang.Object) 1);
        defaultedMap44.clear();
        java.lang.Object obj51 = defaultedMap35.put((java.lang.Object) defaultedMap40, (java.lang.Object) defaultedMap44);
        java.lang.Object obj52 = defaultedMap29.get((java.lang.Object) defaultedMap40);
        java.lang.Object obj54 = defaultedMap40.get((java.lang.Object) 100L);
        java.lang.Object obj55 = defaultedMap22.remove((java.lang.Object) defaultedMap40);
        boolean b56 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set59 = defaultedMap58.keySet();
        boolean b61 = defaultedMap58.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        boolean b64 = defaultedMap63.isEmpty();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj68 = defaultedMap66.remove((java.lang.Object) 1.0f);
        defaultedMap66.clear();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj73 = defaultedMap71.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj77 = null;
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) 1, obj77);
        boolean b80 = defaultedMap75.containsKey((java.lang.Object) 1);
        defaultedMap75.clear();
        java.lang.Object obj82 = defaultedMap66.put((java.lang.Object) defaultedMap71, (java.lang.Object) defaultedMap75);
        collections.Predicate predicate83 = null;
        collections.Predicate predicate84 = null;
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap66, predicate83, predicate84);
        java.lang.Object obj86 = defaultedMap63.get((java.lang.Object) predicate83);
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj90 = null;
        java.lang.Object obj91 = defaultedMap88.put((java.lang.Object) 1, obj90);
        java.util.Set set92 = defaultedMap88.keySet();
        boolean b93 = defaultedMap63.containsValue((java.lang.Object) set92);
        boolean b94 = defaultedMap22.equals((java.lang.Object) defaultedMap63);
        boolean b95 = defaultedMap1.containsValue((java.lang.Object) b94);
        java.util.Collection collection96 = defaultedMap1.values();
        collections.Factory factory97 = null;
        try {
            java.util.Map map98 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "{}" + "'", str27.equals("{}"));
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte) 0 + "'", obj52.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte) 0 + "'", obj54.equals((byte) 0));
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(set92);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(b95 == false);
        org.junit.Assert.assertNotNull(collection96);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        java.util.Set set6 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection9 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b11 = defaultedMap1.containsKey((java.lang.Object) defaultedMap8);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap8, predicate12, predicate13);
        java.util.Collection collection15 = defaultedMap8.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertNotNull(collection15);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.String str2 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj6 = defaultedMap4.remove((java.lang.Object) 1.0f);
        defaultedMap4.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        boolean b18 = defaultedMap13.containsKey((java.lang.Object) 1);
        defaultedMap13.clear();
        java.lang.Object obj20 = defaultedMap4.put((java.lang.Object) defaultedMap9, (java.lang.Object) defaultedMap13);
        collections.Predicate predicate21 = null;
        collections.Predicate predicate22 = null;
        java.util.Map map23 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap4, predicate21, predicate22);
        collections.Predicate predicate24 = null;
        collections.Predicate predicate25 = null;
        java.util.Map map26 = collections.map.PredicatedMap.decorate(map23, predicate24, predicate25);
        boolean b27 = defaultedMap1.containsKey((java.lang.Object) map23);
        collections.Predicate predicate28 = null;
        collections.Predicate predicate29 = null;
        java.util.Map map30 = collections.map.PredicatedMap.decorate(map23, predicate28, predicate29);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "{}" + "'", str2.equals("{}"));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(map23);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(map30);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        java.util.Collection collection21 = defaultedMap6.values();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        java.util.Set set27 = defaultedMap23.keySet();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) set27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap30.keySet();
        java.util.Collection collection32 = defaultedMap30.values();
        defaultedMap28.putAll((java.util.Map) defaultedMap30);
        boolean b34 = defaultedMap30.isEmpty();
        java.lang.Object obj35 = defaultedMap6.get((java.lang.Object) b34);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap38.isEmpty();
        boolean b40 = defaultedMap38.isEmpty();
        java.lang.Object obj42 = defaultedMap38.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = defaultedMap44.remove((java.lang.Object) 1.0f);
        defaultedMap44.clear();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj51 = defaultedMap49.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = null;
        java.lang.Object obj56 = defaultedMap53.put((java.lang.Object) 1, obj55);
        boolean b58 = defaultedMap53.containsKey((java.lang.Object) 1);
        defaultedMap53.clear();
        java.lang.Object obj60 = defaultedMap44.put((java.lang.Object) defaultedMap49, (java.lang.Object) defaultedMap53);
        java.lang.Object obj61 = defaultedMap38.get((java.lang.Object) defaultedMap49);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, (java.lang.Object) defaultedMap38);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = null;
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) 1, obj66);
        defaultedMap64.clear();
        java.util.Set set69 = defaultedMap64.entrySet();
        boolean b70 = defaultedMap38.equals((java.lang.Object) defaultedMap64);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj74 = defaultedMap72.remove((java.lang.Object) 1.0f);
        defaultedMap72.clear();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj79 = defaultedMap77.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap81 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj83 = null;
        java.lang.Object obj84 = defaultedMap81.put((java.lang.Object) 1, obj83);
        boolean b86 = defaultedMap81.containsKey((java.lang.Object) 1);
        defaultedMap81.clear();
        java.lang.Object obj88 = defaultedMap72.put((java.lang.Object) defaultedMap77, (java.lang.Object) defaultedMap81);
        java.lang.Object obj89 = null;
        boolean b90 = defaultedMap77.containsValue(obj89);
        java.util.Set set91 = defaultedMap77.entrySet();
        java.util.Collection collection92 = defaultedMap77.values();
        int i93 = defaultedMap77.size();
        java.lang.Object obj94 = defaultedMap64.remove((java.lang.Object) defaultedMap77);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (byte) 0 + "'", obj42.equals((byte) 0));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (byte) 0 + "'", obj61.equals((byte) 0));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(set69);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertNotNull(set91);
        org.junit.Assert.assertNotNull(collection92);
        org.junit.Assert.assertTrue(i93 == 0);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap21.isEmpty();
        boolean b25 = defaultedMap21.equals((java.lang.Object) 10);
        java.lang.Object obj26 = defaultedMap6.get((java.lang.Object) b25);
        java.util.Set set27 = defaultedMap6.entrySet();
        collections.Factory factory28 = null;
        try {
            java.util.Map map29 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertNotNull(set27);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        java.util.Set set9 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = defaultedMap11.remove((java.lang.Object) 1.0f);
        defaultedMap11.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj22 = null;
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) 1, obj22);
        boolean b25 = defaultedMap20.containsKey((java.lang.Object) 1);
        defaultedMap20.clear();
        java.lang.Object obj27 = defaultedMap11.put((java.lang.Object) defaultedMap16, (java.lang.Object) defaultedMap20);
        java.lang.Object obj28 = null;
        boolean b29 = defaultedMap16.containsValue(obj28);
        java.util.Set set30 = defaultedMap16.entrySet();
        java.util.Collection collection31 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set34 = defaultedMap33.keySet();
        java.util.Collection collection35 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        boolean b40 = defaultedMap37.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection41 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) collection41);
        boolean b43 = defaultedMap42.isEmpty();
        boolean b44 = defaultedMap33.containsValue((java.lang.Object) defaultedMap42);
        int i45 = defaultedMap42.size();
        defaultedMap42.clear();
        java.lang.Object obj47 = defaultedMap16.get((java.lang.Object) defaultedMap42);
        java.lang.Object obj48 = defaultedMap1.remove(obj47);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertNotNull(collection35);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(collection41);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte) 0 + "'", obj47.equals((byte) 0));
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj5 = defaultedMap3.remove((java.lang.Object) 1.0f);
        java.lang.Object obj7 = defaultedMap3.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        java.lang.Object obj13 = defaultedMap9.remove((java.lang.Object) 'a');
        java.lang.Object obj14 = defaultedMap3.get((java.lang.Object) 'a');
        defaultedMap3.clear();
        boolean b16 = defaultedMap3.isEmpty();
        int i17 = defaultedMap3.size();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.util.Set set26 = defaultedMap24.keySet();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set29 = defaultedMap28.keySet();
        java.util.Collection collection30 = defaultedMap28.values();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set33 = defaultedMap32.keySet();
        boolean b35 = defaultedMap32.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection36 = defaultedMap32.values();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) collection36);
        boolean b38 = defaultedMap37.isEmpty();
        boolean b39 = defaultedMap28.containsValue((java.lang.Object) defaultedMap37);
        int i40 = defaultedMap37.size();
        java.util.Set set41 = defaultedMap37.keySet();
        defaultedMap24.putAll((java.util.Map) defaultedMap37);
        java.lang.Object obj43 = defaultedMap3.get((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = null;
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) 1, obj47);
        boolean b50 = defaultedMap45.containsKey((java.lang.Object) 1);
        java.lang.String str51 = defaultedMap45.toString();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set54 = defaultedMap53.keySet();
        boolean b56 = defaultedMap53.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection57 = defaultedMap53.values();
        java.lang.String str58 = defaultedMap53.toString();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b61 = defaultedMap60.isEmpty();
        boolean b62 = defaultedMap60.isEmpty();
        java.lang.Object obj64 = defaultedMap60.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj68 = defaultedMap66.remove((java.lang.Object) 1.0f);
        defaultedMap66.clear();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj73 = defaultedMap71.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj77 = null;
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) 1, obj77);
        boolean b80 = defaultedMap75.containsKey((java.lang.Object) 1);
        defaultedMap75.clear();
        java.lang.Object obj82 = defaultedMap66.put((java.lang.Object) defaultedMap71, (java.lang.Object) defaultedMap75);
        java.lang.Object obj83 = defaultedMap60.get((java.lang.Object) defaultedMap71);
        java.lang.Object obj85 = defaultedMap71.get((java.lang.Object) 100L);
        java.lang.Object obj86 = defaultedMap53.remove((java.lang.Object) defaultedMap71);
        java.util.Map map87 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap45, obj86);
        boolean b88 = defaultedMap3.containsKey((java.lang.Object) defaultedMap45);
        java.lang.Object obj89 = defaultedMap1.remove((java.lang.Object) b88);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (byte) 0 + "'", obj14.equals((byte) 0));
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i17 == 0);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(set26);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertNotNull(collection36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 0 + "'", obj43.equals((byte) 0));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "{1=null}" + "'", str51.equals("{1=null}"));
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNotNull(collection57);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "{}" + "'", str58.equals("{}"));
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue("'" + obj64 + "' != '" + (byte) 0 + "'", obj64.equals((byte) 0));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (byte) 0 + "'", obj83.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj85 + "' != '" + (byte) 0 + "'", obj85.equals((byte) 0));
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(map87);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        int i6 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        boolean b11 = defaultedMap8.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection12 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) collection12);
        boolean b14 = defaultedMap13.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.remove((java.lang.Object) 1.0f);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) 1, obj27);
        boolean b30 = defaultedMap25.containsKey((java.lang.Object) 1);
        defaultedMap25.clear();
        java.lang.Object obj32 = defaultedMap16.put((java.lang.Object) defaultedMap21, (java.lang.Object) defaultedMap25);
        collections.Predicate predicate33 = null;
        collections.Predicate predicate34 = null;
        java.util.Map map35 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap16, predicate33, predicate34);
        java.lang.Object obj36 = defaultedMap13.get((java.lang.Object) predicate33);
        boolean b37 = defaultedMap13.isEmpty();
        collections.Predicate predicate38 = null;
        collections.Predicate predicate39 = null;
        java.util.Map map40 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap13, predicate38, predicate39);
        java.lang.Object obj41 = defaultedMap1.get((java.lang.Object) predicate38);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj45 = defaultedMap43.remove((java.lang.Object) (byte) 100);
        int i46 = defaultedMap43.size();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = defaultedMap48.remove((java.lang.Object) 1.0f);
        java.lang.Object obj52 = defaultedMap48.remove((java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap43.get((java.lang.Object) defaultedMap48);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap55.keySet();
        boolean b58 = defaultedMap55.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection59 = defaultedMap55.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) collection59);
        int i61 = defaultedMap60.size();
        collections.Predicate predicate62 = null;
        collections.Predicate predicate63 = null;
        java.util.Map map64 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap60, predicate62, predicate63);
        java.lang.Object obj65 = defaultedMap48.get((java.lang.Object) defaultedMap60);
        boolean b66 = defaultedMap1.containsValue((java.lang.Object) defaultedMap48);
        java.lang.Object obj68 = defaultedMap1.get((java.lang.Object) true);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(map35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(map40);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + 0 + "'", obj53.equals(0));
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertNotNull(map64);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (byte) 0 + "'", obj65.equals((byte) 0));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        boolean b37 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) b37);
        collections.Transformer transformer39 = null;
        try {
            java.util.Map map40 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap38, transformer39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertTrue(b37 == true);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        boolean b35 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        boolean b40 = defaultedMap37.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection41 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) collection41);
        boolean b43 = defaultedMap42.isEmpty();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.remove((java.lang.Object) 1.0f);
        defaultedMap45.clear();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = null;
        java.lang.Object obj57 = defaultedMap54.put((java.lang.Object) 1, obj56);
        boolean b59 = defaultedMap54.containsKey((java.lang.Object) 1);
        defaultedMap54.clear();
        java.lang.Object obj61 = defaultedMap45.put((java.lang.Object) defaultedMap50, (java.lang.Object) defaultedMap54);
        collections.Predicate predicate62 = null;
        collections.Predicate predicate63 = null;
        java.util.Map map64 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap45, predicate62, predicate63);
        java.lang.Object obj65 = defaultedMap42.get((java.lang.Object) predicate62);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = defaultedMap67.put((java.lang.Object) 1, obj69);
        java.util.Set set71 = defaultedMap67.keySet();
        boolean b72 = defaultedMap42.containsValue((java.lang.Object) set71);
        boolean b73 = defaultedMap1.equals((java.lang.Object) defaultedMap42);
        java.util.Collection collection74 = defaultedMap42.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(collection41);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(map64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(set71);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertNotNull(collection74);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        java.lang.String str13 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        java.util.Collection collection17 = defaultedMap15.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        boolean b26 = defaultedMap15.containsValue((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap15.isEmpty();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap15.putAll((java.util.Map) defaultedMap30);
        java.lang.Object obj35 = defaultedMap1.get((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = null;
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) 1, obj39);
        java.util.Set set41 = defaultedMap37.keySet();
        int i42 = defaultedMap37.size();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set45 = defaultedMap44.keySet();
        boolean b47 = defaultedMap44.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection48 = defaultedMap44.values();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) collection48);
        boolean b50 = defaultedMap49.isEmpty();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = defaultedMap52.remove((java.lang.Object) 1.0f);
        defaultedMap52.clear();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = defaultedMap57.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = null;
        java.lang.Object obj64 = defaultedMap61.put((java.lang.Object) 1, obj63);
        boolean b66 = defaultedMap61.containsKey((java.lang.Object) 1);
        defaultedMap61.clear();
        java.lang.Object obj68 = defaultedMap52.put((java.lang.Object) defaultedMap57, (java.lang.Object) defaultedMap61);
        collections.Predicate predicate69 = null;
        collections.Predicate predicate70 = null;
        java.util.Map map71 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap52, predicate69, predicate70);
        java.lang.Object obj72 = defaultedMap49.get((java.lang.Object) predicate69);
        boolean b73 = defaultedMap49.isEmpty();
        collections.Predicate predicate74 = null;
        collections.Predicate predicate75 = null;
        java.util.Map map76 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap49, predicate74, predicate75);
        java.lang.Object obj77 = defaultedMap37.get((java.lang.Object) predicate74);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set80 = defaultedMap79.keySet();
        boolean b82 = defaultedMap79.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection83 = defaultedMap79.values();
        java.lang.String str84 = defaultedMap79.toString();
        collections.map.DefaultedMap defaultedMap86 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj88 = defaultedMap86.get((java.lang.Object) 0.0f);
        boolean b89 = defaultedMap86.isEmpty();
        java.lang.Object obj92 = defaultedMap86.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap93 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap86);
        boolean b94 = defaultedMap79.equals((java.lang.Object) defaultedMap93);
        defaultedMap93.clear();
        java.lang.Object obj96 = defaultedMap37.get((java.lang.Object) defaultedMap93);
        defaultedMap15.putAll((java.util.Map) defaultedMap37);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue(i42 == 1);
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNotNull(collection48);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(map71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertNotNull(map76);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (byte) 0 + "'", obj77.equals((byte) 0));
        org.junit.Assert.assertNotNull(set80);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNotNull(collection83);
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "{}" + "'", str84.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj88 + "' != '" + (byte) 0 + "'", obj88.equals((byte) 0));
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue("'" + obj96 + "' != '" + (byte) 0 + "'", obj96.equals((byte) 0));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap38.isEmpty();
        boolean b40 = defaultedMap38.isEmpty();
        java.lang.Object obj42 = defaultedMap38.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = defaultedMap44.remove((java.lang.Object) 1.0f);
        defaultedMap44.clear();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj51 = defaultedMap49.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = null;
        java.lang.Object obj56 = defaultedMap53.put((java.lang.Object) 1, obj55);
        boolean b58 = defaultedMap53.containsKey((java.lang.Object) 1);
        defaultedMap53.clear();
        java.lang.Object obj60 = defaultedMap44.put((java.lang.Object) defaultedMap49, (java.lang.Object) defaultedMap53);
        java.lang.Object obj61 = defaultedMap38.get((java.lang.Object) defaultedMap49);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, (java.lang.Object) defaultedMap38);
        java.util.Set set63 = defaultedMap15.keySet();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj67 = defaultedMap65.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b70 = defaultedMap69.isEmpty();
        java.util.Set set71 = defaultedMap69.entrySet();
        boolean b72 = defaultedMap65.containsValue((java.lang.Object) set71);
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set75 = defaultedMap74.keySet();
        java.util.Collection collection76 = defaultedMap74.values();
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set79 = defaultedMap78.keySet();
        boolean b81 = defaultedMap78.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection82 = defaultedMap78.values();
        collections.map.DefaultedMap defaultedMap83 = new collections.map.DefaultedMap((java.lang.Object) collection82);
        boolean b84 = defaultedMap83.isEmpty();
        boolean b85 = defaultedMap74.containsValue((java.lang.Object) defaultedMap83);
        boolean b86 = defaultedMap74.isEmpty();
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap74);
        boolean b88 = defaultedMap87.isEmpty();
        java.util.Collection collection89 = defaultedMap87.values();
        collections.map.DefaultedMap defaultedMap91 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj93 = defaultedMap91.remove((java.lang.Object) 1.0f);
        defaultedMap87.putAll((java.util.Map) defaultedMap91);
        java.util.Collection collection95 = defaultedMap87.values();
        java.util.Map map96 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap65, (java.lang.Object) collection95);
        collections.map.DefaultedMap defaultedMap97 = new collections.map.DefaultedMap((java.lang.Object) collection95);
        boolean b98 = defaultedMap15.containsValue((java.lang.Object) defaultedMap97);
        int i99 = defaultedMap15.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (byte) 0 + "'", obj42.equals((byte) 0));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (byte) 0 + "'", obj61.equals((byte) 0));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (byte) 0 + "'", obj67.equals((byte) 0));
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertNotNull(set71);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(set75);
        org.junit.Assert.assertNotNull(collection76);
        org.junit.Assert.assertNotNull(set79);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertNotNull(collection82);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertNotNull(collection89);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(collection95);
        org.junit.Assert.assertNotNull(map96);
        org.junit.Assert.assertTrue(b98 == false);
        org.junit.Assert.assertTrue(i99 == 0);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap14.putAll((java.util.Map) defaultedMap18);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap14);
        defaultedMap22.clear();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = defaultedMap25.get((java.lang.Object) 0.0f);
        boolean b28 = defaultedMap25.isEmpty();
        int i29 = defaultedMap25.size();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = defaultedMap31.remove((java.lang.Object) 1.0f);
        defaultedMap31.clear();
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = defaultedMap36.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = null;
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) 1, obj42);
        boolean b45 = defaultedMap40.containsKey((java.lang.Object) 1);
        defaultedMap40.clear();
        java.lang.Object obj47 = defaultedMap31.put((java.lang.Object) defaultedMap36, (java.lang.Object) defaultedMap40);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj51 = null;
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) 1, obj51);
        boolean b54 = defaultedMap49.containsKey((java.lang.Object) 1);
        defaultedMap49.clear();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj59 = defaultedMap57.remove((java.lang.Object) (byte) 100);
        int i60 = defaultedMap57.size();
        java.lang.Object obj61 = defaultedMap49.remove((java.lang.Object) defaultedMap57);
        boolean b62 = defaultedMap36.containsValue(obj61);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = null;
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) 1, obj66);
        java.util.Set set68 = defaultedMap64.keySet();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) set68);
        java.lang.Object obj71 = defaultedMap36.put((java.lang.Object) defaultedMap69, (java.lang.Object) (-1L));
        java.lang.String str72 = defaultedMap69.toString();
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj76 = null;
        java.lang.Object obj77 = defaultedMap74.put((java.lang.Object) 1, obj76);
        java.util.Set set78 = defaultedMap74.keySet();
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) set78);
        collections.map.DefaultedMap defaultedMap81 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj83 = defaultedMap81.get((java.lang.Object) 0.0f);
        boolean b84 = defaultedMap81.isEmpty();
        collections.map.DefaultedMap defaultedMap86 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b87 = defaultedMap86.isEmpty();
        boolean b88 = defaultedMap86.isEmpty();
        collections.map.DefaultedMap defaultedMap90 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set91 = defaultedMap90.keySet();
        boolean b93 = defaultedMap90.containsKey((java.lang.Object) 0.0f);
        boolean b94 = defaultedMap86.containsKey((java.lang.Object) 0.0f);
        java.util.Map map95 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap81, (java.lang.Object) defaultedMap86);
        java.lang.Object obj96 = defaultedMap79.remove((java.lang.Object) defaultedMap81);
        java.lang.Object obj97 = defaultedMap25.put((java.lang.Object) defaultedMap69, (java.lang.Object) defaultedMap81);
        java.lang.Object obj98 = defaultedMap22.get((java.lang.Object) defaultedMap25);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (byte) 0 + "'", obj27.equals((byte) 0));
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(set68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "{}" + "'", str72.equals("{}"));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(set78);
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (byte) 0 + "'", obj83.equals((byte) 0));
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertNotNull(set91);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == false);
        org.junit.Assert.assertNotNull(map95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        defaultedMap13.clear();
        java.util.Set set18 = defaultedMap13.entrySet();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b21 = defaultedMap20.isEmpty();
        boolean b22 = defaultedMap20.isEmpty();
        boolean b24 = defaultedMap20.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b27 = defaultedMap20.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap20.entrySet();
        java.lang.Object obj29 = defaultedMap13.get((java.lang.Object) set28);
        java.lang.Object obj30 = defaultedMap6.get(obj29);
        collections.Factory factory31 = null;
        try {
            java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (byte) 0 + "'", obj29.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (byte) 0 + "'", obj30.equals((byte) 0));
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        int i5 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = null;
        boolean b25 = defaultedMap12.containsValue(obj24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b28 = defaultedMap27.isEmpty();
        boolean b29 = defaultedMap27.isEmpty();
        boolean b31 = defaultedMap27.equals((java.lang.Object) 10);
        java.lang.Object obj32 = defaultedMap12.get((java.lang.Object) b31);
        java.util.Set set33 = defaultedMap12.keySet();
        boolean b34 = defaultedMap1.containsValue((java.lang.Object) defaultedMap12);
        collections.Factory factory35 = null;
        try {
            java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap12, factory35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b34 == false);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.get((java.lang.Object) 0.0f);
        boolean b9 = defaultedMap6.isEmpty();
        int i10 = defaultedMap6.size();
        java.lang.Object obj11 = null;
        java.lang.Object obj12 = defaultedMap1.put((java.lang.Object) i10, obj11);
        int i13 = defaultedMap1.size();
        java.lang.String str14 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        boolean b19 = defaultedMap16.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection20 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) collection20);
        boolean b22 = defaultedMap21.isEmpty();
        java.util.Set set23 = defaultedMap21.keySet();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set26 = defaultedMap25.keySet();
        java.util.Collection collection27 = defaultedMap25.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set30 = defaultedMap29.keySet();
        boolean b32 = defaultedMap29.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection33 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) collection33);
        boolean b35 = defaultedMap34.isEmpty();
        boolean b36 = defaultedMap25.containsValue((java.lang.Object) defaultedMap34);
        int i37 = defaultedMap34.size();
        java.util.Set set38 = defaultedMap34.keySet();
        defaultedMap21.putAll((java.util.Map) defaultedMap34);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection45 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) collection45);
        int i47 = defaultedMap46.size();
        collections.Predicate predicate48 = null;
        collections.Predicate predicate49 = null;
        java.util.Map map50 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap46, predicate48, predicate49);
        collections.Predicate predicate51 = null;
        collections.Predicate predicate52 = null;
        java.util.Map map53 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap46, predicate51, predicate52);
        defaultedMap34.putAll((java.util.Map) defaultedMap46);
        defaultedMap1.putAll((java.util.Map) defaultedMap46);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (byte) 0 + "'", obj8.equals((byte) 0));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue(i13 == 1);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "{0=null}" + "'", str14.equals("{0=null}"));
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertNotNull(set26);
        org.junit.Assert.assertNotNull(collection27);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(collection33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertNotNull(map53);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        java.lang.String str22 = defaultedMap17.toString();
        collections.Predicate predicate23 = null;
        collections.Predicate predicate24 = null;
        java.util.Map map25 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate23, predicate24);
        boolean b26 = defaultedMap1.containsValue((java.lang.Object) defaultedMap17);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set29 = defaultedMap28.keySet();
        boolean b31 = defaultedMap28.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection32 = defaultedMap28.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) collection32);
        boolean b34 = defaultedMap33.isEmpty();
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = defaultedMap36.remove((java.lang.Object) 1.0f);
        defaultedMap36.clear();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = defaultedMap41.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = null;
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) 1, obj47);
        boolean b50 = defaultedMap45.containsKey((java.lang.Object) 1);
        defaultedMap45.clear();
        java.lang.Object obj52 = defaultedMap36.put((java.lang.Object) defaultedMap41, (java.lang.Object) defaultedMap45);
        collections.Predicate predicate53 = null;
        collections.Predicate predicate54 = null;
        java.util.Map map55 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap36, predicate53, predicate54);
        java.lang.Object obj56 = defaultedMap33.get((java.lang.Object) predicate53);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = null;
        java.lang.Object obj61 = defaultedMap58.put((java.lang.Object) 1, obj60);
        java.util.Set set62 = defaultedMap58.keySet();
        boolean b63 = defaultedMap33.containsValue((java.lang.Object) set62);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        java.lang.Object obj69 = defaultedMap33.remove((java.lang.Object) '4');
        java.lang.Object obj70 = defaultedMap1.get(obj69);
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{}" + "'", str22.equals("{}"));
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(map55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (byte) 0 + "'", obj70.equals((byte) 0));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        java.util.Set set35 = defaultedMap31.keySet();
        boolean b36 = defaultedMap6.containsValue((java.lang.Object) set35);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        java.lang.Object obj42 = defaultedMap6.remove((java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = defaultedMap44.get((java.lang.Object) 0.0f);
        boolean b47 = defaultedMap44.isEmpty();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b50 = defaultedMap49.isEmpty();
        boolean b51 = defaultedMap49.isEmpty();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set54 = defaultedMap53.keySet();
        boolean b56 = defaultedMap53.containsKey((java.lang.Object) 0.0f);
        boolean b57 = defaultedMap49.containsKey((java.lang.Object) 0.0f);
        java.util.Map map58 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap44, (java.lang.Object) defaultedMap49);
        java.util.Collection collection59 = defaultedMap49.values();
        boolean b60 = defaultedMap6.equals((java.lang.Object) collection59);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (byte) 0 + "'", obj46.equals((byte) 0));
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(map58);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(b60 == false);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        boolean b35 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        java.util.Collection collection39 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection45 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) collection45);
        boolean b47 = defaultedMap46.isEmpty();
        boolean b48 = defaultedMap37.containsValue((java.lang.Object) defaultedMap46);
        boolean b49 = defaultedMap37.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap37);
        boolean b51 = defaultedMap50.isEmpty();
        java.util.Collection collection52 = defaultedMap50.values();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = defaultedMap54.remove((java.lang.Object) 1.0f);
        defaultedMap50.putAll((java.util.Map) defaultedMap54);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        defaultedMap58.clear();
        java.util.Map map60 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap58);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set63 = defaultedMap62.keySet();
        boolean b65 = defaultedMap62.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection66 = defaultedMap62.values();
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) collection66);
        int i68 = defaultedMap67.size();
        collections.Predicate predicate69 = null;
        collections.Predicate predicate70 = null;
        java.util.Map map71 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap67, predicate69, predicate70);
        collections.Predicate predicate72 = null;
        collections.Predicate predicate73 = null;
        java.util.Map map74 = collections.map.PredicatedMap.decorate(map71, predicate72, predicate73);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) predicate72);
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set78 = defaultedMap77.keySet();
        boolean b80 = defaultedMap77.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection81 = defaultedMap77.values();
        java.lang.String str82 = defaultedMap77.toString();
        collections.map.DefaultedMap defaultedMap84 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj86 = defaultedMap84.get((java.lang.Object) 0.0f);
        boolean b87 = defaultedMap84.isEmpty();
        java.lang.Object obj90 = defaultedMap84.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap91 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap84);
        boolean b92 = defaultedMap77.equals((java.lang.Object) defaultedMap91);
        defaultedMap91.clear();
        java.lang.Object obj94 = defaultedMap1.put((java.lang.Object) defaultedMap75, (java.lang.Object) defaultedMap91);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(map60);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertNotNull(collection66);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertNotNull(map71);
        org.junit.Assert.assertNotNull(map74);
        org.junit.Assert.assertNotNull(set78);
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertNotNull(collection81);
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "{}" + "'", str82.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj86 + "' != '" + (byte) 0 + "'", obj86.equals((byte) 0));
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) (-1.0f));
        collections.Predicate predicate4 = null;
        collections.Predicate predicate5 = null;
        java.util.Map map6 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate4, predicate5);
        int i7 = defaultedMap1.size();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + 0 + "'", obj3.equals(0));
        org.junit.Assert.assertNotNull(map6);
        org.junit.Assert.assertTrue(i7 == 0);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.util.Set set6 = defaultedMap1.keySet();
        java.util.Set set7 = defaultedMap1.entrySet();
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        java.util.Set set14 = defaultedMap10.keySet();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) set14);
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        java.util.Collection collection19 = defaultedMap17.values();
        defaultedMap15.putAll((java.util.Map) defaultedMap17);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        java.util.Collection collection24 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection30 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) collection30);
        boolean b32 = defaultedMap31.isEmpty();
        boolean b33 = defaultedMap22.containsValue((java.lang.Object) defaultedMap31);
        int i34 = defaultedMap31.size();
        defaultedMap31.clear();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap40.keySet();
        boolean b43 = defaultedMap40.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection44 = defaultedMap40.values();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) collection44);
        boolean b46 = defaultedMap45.isEmpty();
        java.lang.Object obj47 = defaultedMap37.get((java.lang.Object) defaultedMap45);
        boolean b48 = defaultedMap31.containsValue((java.lang.Object) defaultedMap45);
        java.util.Collection collection49 = defaultedMap45.values();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap45);
        java.util.Set set51 = defaultedMap45.keySet();
        boolean b52 = defaultedMap15.equals((java.lang.Object) set51);
        java.lang.Object obj53 = defaultedMap1.get((java.lang.Object) defaultedMap15);
        java.util.Collection collection54 = defaultedMap15.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte) 0 + "'", obj47.equals((byte) 0));
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNotNull(collection49);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertNotNull(collection54);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        java.util.Set set6 = defaultedMap1.entrySet();
        int i7 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(i7 == 0);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        boolean b8 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        boolean b14 = defaultedMap6.containsKey((java.lang.Object) 0.0f);
        java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap6);
        boolean b17 = defaultedMap1.equals((java.lang.Object) 0);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate18, predicate19);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(map15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(map20);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set8 = defaultedMap7.keySet();
        java.lang.Object obj10 = defaultedMap7.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        java.lang.Object obj16 = defaultedMap12.remove((java.lang.Object) 'a');
        defaultedMap7.putAll((java.util.Map) defaultedMap12);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap7, predicate18, predicate19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) collection26);
        boolean b28 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        defaultedMap30.clear();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = defaultedMap35.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        boolean b44 = defaultedMap39.containsKey((java.lang.Object) 1);
        defaultedMap39.clear();
        java.lang.Object obj46 = defaultedMap30.put((java.lang.Object) defaultedMap35, (java.lang.Object) defaultedMap39);
        collections.Predicate predicate47 = null;
        collections.Predicate predicate48 = null;
        java.util.Map map49 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate47, predicate48);
        java.lang.Object obj50 = defaultedMap27.get((java.lang.Object) predicate47);
        java.util.Set set51 = defaultedMap27.entrySet();
        java.lang.Object obj52 = defaultedMap1.put((java.lang.Object) defaultedMap7, (java.lang.Object) defaultedMap27);
        java.util.Set set53 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(map49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(set53);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        java.lang.Object obj38 = null;
        boolean b39 = defaultedMap26.containsValue(obj38);
        java.util.Set set40 = defaultedMap26.entrySet();
        java.lang.Object obj41 = defaultedMap19.remove((java.lang.Object) set40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b44 = defaultedMap43.isEmpty();
        boolean b45 = defaultedMap43.isEmpty();
        java.lang.Object obj46 = defaultedMap10.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap43);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = null;
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) 1, obj50);
        java.util.Set set52 = defaultedMap48.keySet();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = defaultedMap54.remove((java.lang.Object) 1.0f);
        defaultedMap54.clear();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj61 = defaultedMap59.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj65 = null;
        java.lang.Object obj66 = defaultedMap63.put((java.lang.Object) 1, obj65);
        boolean b68 = defaultedMap63.containsKey((java.lang.Object) 1);
        defaultedMap63.clear();
        java.lang.Object obj70 = defaultedMap54.put((java.lang.Object) defaultedMap59, (java.lang.Object) defaultedMap63);
        defaultedMap48.putAll((java.util.Map) defaultedMap59);
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj75 = defaultedMap73.remove((java.lang.Object) (byte) 100);
        int i76 = defaultedMap73.size();
        boolean b77 = defaultedMap59.equals((java.lang.Object) i76);
        java.lang.Object obj78 = defaultedMap43.remove((java.lang.Object) i76);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap21.isEmpty();
        boolean b25 = defaultedMap21.equals((java.lang.Object) 10);
        java.lang.Object obj26 = defaultedMap6.get((java.lang.Object) b25);
        java.util.Set set27 = defaultedMap6.keySet();
        boolean b29 = defaultedMap6.containsValue((java.lang.Object) (short) -1);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.String str2 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj6 = null;
        java.lang.Object obj7 = defaultedMap4.put((java.lang.Object) 1, obj6);
        defaultedMap4.clear();
        java.util.Set set9 = defaultedMap4.entrySet();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b12 = defaultedMap11.isEmpty();
        boolean b13 = defaultedMap11.isEmpty();
        boolean b15 = defaultedMap11.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b18 = defaultedMap11.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap11.entrySet();
        java.lang.Object obj20 = defaultedMap4.get((java.lang.Object) set19);
        java.util.Map map21 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, obj20);
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "{}" + "'", str2.equals("{}"));
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (byte) 0 + "'", obj20.equals((byte) 0));
        org.junit.Assert.assertNotNull(map21);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = null;
        java.lang.Object obj10 = defaultedMap7.put((java.lang.Object) 1, obj9);
        java.util.Set set11 = defaultedMap7.keySet();
        int i12 = defaultedMap7.size();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        java.lang.Object obj18 = defaultedMap14.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj22 = defaultedMap20.remove((java.lang.Object) 1.0f);
        java.lang.Object obj24 = defaultedMap20.remove((java.lang.Object) 'a');
        java.lang.Object obj25 = defaultedMap14.get((java.lang.Object) 'a');
        boolean b26 = defaultedMap7.containsKey(obj25);
        boolean b27 = defaultedMap1.containsKey(obj25);
        boolean b28 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(i12 == 1);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + (byte) 0 + "'", obj25.equals((byte) 0));
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == false);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b3 = defaultedMap1.isEmpty();
        java.util.Set set4 = defaultedMap1.entrySet();
        int i5 = defaultedMap1.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertTrue(i5 == 0);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap18.keySet();
        boolean b21 = defaultedMap18.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection22 = defaultedMap18.values();
        java.lang.String str23 = defaultedMap18.toString();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = defaultedMap25.get((java.lang.Object) 0.0f);
        boolean b28 = defaultedMap25.isEmpty();
        java.lang.Object obj31 = defaultedMap25.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap25);
        boolean b33 = defaultedMap18.equals((java.lang.Object) defaultedMap32);
        defaultedMap32.clear();
        java.util.Map map35 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap14, (java.lang.Object) defaultedMap32);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = null;
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) 1, obj40);
        java.util.Set set42 = defaultedMap38.keySet();
        int i43 = defaultedMap38.size();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set46 = defaultedMap45.keySet();
        boolean b48 = defaultedMap45.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection49 = defaultedMap45.values();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) collection49);
        boolean b51 = defaultedMap50.isEmpty();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = defaultedMap53.remove((java.lang.Object) 1.0f);
        defaultedMap53.clear();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj64 = null;
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) 1, obj64);
        boolean b67 = defaultedMap62.containsKey((java.lang.Object) 1);
        defaultedMap62.clear();
        java.lang.Object obj69 = defaultedMap53.put((java.lang.Object) defaultedMap58, (java.lang.Object) defaultedMap62);
        collections.Predicate predicate70 = null;
        collections.Predicate predicate71 = null;
        java.util.Map map72 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap53, predicate70, predicate71);
        java.lang.Object obj73 = defaultedMap50.get((java.lang.Object) predicate70);
        boolean b74 = defaultedMap50.isEmpty();
        collections.Predicate predicate75 = null;
        collections.Predicate predicate76 = null;
        java.util.Map map77 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap50, predicate75, predicate76);
        java.lang.Object obj78 = defaultedMap38.get((java.lang.Object) predicate75);
        java.lang.Object obj79 = defaultedMap32.put((java.lang.Object) 1.0d, (java.lang.Object) predicate75);
        defaultedMap32.clear();
        collections.Factory factory81 = null;
        try {
            java.util.Map map82 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap32, factory81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{}" + "'", str23.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (byte) 0 + "'", obj27.equals((byte) 0));
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNotNull(map35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(i43 == 1);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNotNull(collection49);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(map72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertNotNull(map77);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (byte) 0 + "'", obj78.equals((byte) 0));
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) b4);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap7.isEmpty();
        boolean b9 = defaultedMap7.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) (byte) 100);
        int i27 = defaultedMap24.size();
        java.lang.Object obj28 = defaultedMap16.remove((java.lang.Object) defaultedMap24);
        boolean b29 = defaultedMap11.containsKey((java.lang.Object) defaultedMap16);
        java.lang.Object obj30 = defaultedMap7.remove((java.lang.Object) defaultedMap11);
        defaultedMap7.clear();
        java.util.Set set32 = defaultedMap7.entrySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = null;
        boolean b52 = defaultedMap39.containsValue(obj51);
        java.util.Set set53 = defaultedMap39.entrySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection56 = defaultedMap55.values();
        boolean b57 = defaultedMap39.containsValue((java.lang.Object) collection56);
        defaultedMap7.putAll((java.util.Map) defaultedMap39);
        java.util.Map map59 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap5, (java.lang.Object) defaultedMap39);
        java.lang.Object obj61 = defaultedMap5.remove((java.lang.Object) (-1.0d));
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) (byte) 100);
        int i21 = defaultedMap18.size();
        java.lang.Object obj22 = defaultedMap10.remove((java.lang.Object) defaultedMap18);
        boolean b23 = defaultedMap5.containsKey((java.lang.Object) defaultedMap10);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) defaultedMap5);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap27.keySet();
        boolean b30 = defaultedMap27.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection31 = defaultedMap27.values();
        collections.Predicate predicate32 = null;
        collections.Predicate predicate33 = null;
        java.util.Map map34 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap27, predicate32, predicate33);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = defaultedMap36.remove((java.lang.Object) 1.0f);
        defaultedMap36.clear();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = defaultedMap41.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = null;
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) 1, obj47);
        boolean b50 = defaultedMap45.containsKey((java.lang.Object) 1);
        defaultedMap45.clear();
        java.lang.Object obj52 = defaultedMap36.put((java.lang.Object) defaultedMap41, (java.lang.Object) defaultedMap45);
        java.lang.Object obj53 = null;
        boolean b54 = defaultedMap41.containsValue(obj53);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b57 = defaultedMap56.isEmpty();
        boolean b58 = defaultedMap56.isEmpty();
        boolean b60 = defaultedMap56.equals((java.lang.Object) 10);
        java.lang.Object obj61 = defaultedMap41.get((java.lang.Object) b60);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap27, (java.lang.Object) defaultedMap41);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b65 = defaultedMap64.isEmpty();
        boolean b66 = defaultedMap64.isEmpty();
        java.lang.Object obj68 = defaultedMap64.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj72 = defaultedMap70.remove((java.lang.Object) 1.0f);
        defaultedMap70.clear();
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj77 = defaultedMap75.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj81 = null;
        java.lang.Object obj82 = defaultedMap79.put((java.lang.Object) 1, obj81);
        boolean b84 = defaultedMap79.containsKey((java.lang.Object) 1);
        defaultedMap79.clear();
        java.lang.Object obj86 = defaultedMap70.put((java.lang.Object) defaultedMap75, (java.lang.Object) defaultedMap79);
        java.lang.Object obj87 = defaultedMap64.get((java.lang.Object) defaultedMap75);
        java.util.Map map88 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap41, (java.lang.Object) defaultedMap64);
        collections.map.DefaultedMap defaultedMap90 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj92 = null;
        java.lang.Object obj93 = defaultedMap90.put((java.lang.Object) 1, obj92);
        defaultedMap90.clear();
        java.util.Set set95 = defaultedMap90.entrySet();
        boolean b96 = defaultedMap64.equals((java.lang.Object) defaultedMap90);
        java.lang.Object obj97 = null;
        java.lang.Object obj98 = defaultedMap1.put((java.lang.Object) defaultedMap64, obj97);
        defaultedMap64.clear();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(map34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (byte) 0 + "'", obj61.equals((byte) 0));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + obj87 + "' != '" + (byte) 0 + "'", obj87.equals((byte) 0));
        org.junit.Assert.assertNotNull(map88);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(set95);
        org.junit.Assert.assertTrue(b96 == true);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        boolean b30 = defaultedMap6.isEmpty();
        collections.Factory factory31 = null;
        try {
            java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue(b30 == true);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        java.lang.Object obj25 = null;
        boolean b26 = defaultedMap12.containsValue(obj25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = defaultedMap28.remove((java.lang.Object) 1.0f);
        defaultedMap28.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = null;
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) 1, obj39);
        boolean b42 = defaultedMap37.containsKey((java.lang.Object) 1);
        defaultedMap37.clear();
        java.lang.Object obj44 = defaultedMap28.put((java.lang.Object) defaultedMap33, (java.lang.Object) defaultedMap37);
        defaultedMap12.putAll((java.util.Map) defaultedMap33);
        java.util.Collection collection46 = defaultedMap33.values();
        collections.Factory factory47 = null;
        try {
            java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap33, factory47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(collection46);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        java.util.Set set8 = defaultedMap1.keySet();
        java.util.Set set9 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = defaultedMap11.remove((java.lang.Object) 1.0f);
        defaultedMap11.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj22 = null;
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) 1, obj22);
        boolean b25 = defaultedMap20.containsKey((java.lang.Object) 1);
        defaultedMap20.clear();
        java.lang.Object obj27 = defaultedMap11.put((java.lang.Object) defaultedMap16, (java.lang.Object) defaultedMap20);
        java.lang.Object obj28 = null;
        boolean b29 = defaultedMap16.containsValue(obj28);
        java.util.Set set30 = defaultedMap16.entrySet();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection33 = defaultedMap32.values();
        boolean b34 = defaultedMap16.containsValue((java.lang.Object) collection33);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj38 = defaultedMap36.remove((java.lang.Object) (byte) 100);
        int i39 = defaultedMap36.size();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = defaultedMap41.remove((java.lang.Object) 1.0f);
        java.lang.Object obj45 = defaultedMap41.remove((java.lang.Object) 'a');
        java.lang.Object obj46 = defaultedMap36.get((java.lang.Object) defaultedMap41);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set49 = defaultedMap48.keySet();
        boolean b51 = defaultedMap48.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection52 = defaultedMap48.values();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) collection52);
        int i54 = defaultedMap53.size();
        collections.Predicate predicate55 = null;
        collections.Predicate predicate56 = null;
        java.util.Map map57 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap53, predicate55, predicate56);
        java.lang.Object obj58 = defaultedMap41.get((java.lang.Object) defaultedMap53);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = null;
        java.lang.Object obj63 = defaultedMap60.put((java.lang.Object) 1, obj62);
        boolean b65 = defaultedMap60.containsKey((java.lang.Object) 1);
        java.lang.String str66 = defaultedMap60.toString();
        java.lang.Object obj67 = defaultedMap16.put((java.lang.Object) defaultedMap41, (java.lang.Object) str66);
        int i68 = defaultedMap41.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap41);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNotNull(collection33);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + 0 + "'", obj46.equals(0));
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertNotNull(map57);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (byte) 0 + "'", obj58.equals((byte) 0));
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "{1=null}" + "'", str66.equals("{1=null}"));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(i68 == 0);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) (byte) 100);
        int i9 = defaultedMap6.size();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = defaultedMap11.remove((java.lang.Object) 1.0f);
        java.lang.Object obj15 = defaultedMap11.remove((java.lang.Object) 'a');
        java.lang.Object obj16 = defaultedMap6.get((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap18.keySet();
        boolean b21 = defaultedMap18.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection22 = defaultedMap18.values();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) collection22);
        int i24 = defaultedMap23.size();
        collections.Predicate predicate25 = null;
        collections.Predicate predicate26 = null;
        java.util.Map map27 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap23, predicate25, predicate26);
        java.lang.Object obj28 = defaultedMap11.get((java.lang.Object) defaultedMap23);
        java.lang.Object obj29 = null;
        boolean b30 = defaultedMap11.equals(obj29);
        java.util.Set set31 = defaultedMap11.entrySet();
        java.lang.Object obj32 = defaultedMap1.get((java.lang.Object) set31);
        collections.Transformer transformer33 = null;
        try {
            java.util.Map map34 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 0 + "'", obj16.equals(0));
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertNotNull(map27);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (byte) 0 + "'", obj28.equals((byte) 0));
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        collections.Transformer transformer7 = null;
        try {
            java.util.Map map8 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) (byte) 100);
        int i21 = defaultedMap18.size();
        java.lang.Object obj22 = defaultedMap10.remove((java.lang.Object) defaultedMap18);
        boolean b23 = defaultedMap5.containsKey((java.lang.Object) defaultedMap10);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        defaultedMap26.clear();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = defaultedMap31.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = null;
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) 1, obj37);
        boolean b40 = defaultedMap35.containsKey((java.lang.Object) 1);
        defaultedMap35.clear();
        java.lang.Object obj42 = defaultedMap26.put((java.lang.Object) defaultedMap31, (java.lang.Object) defaultedMap35);
        java.lang.Object obj43 = null;
        boolean b44 = defaultedMap31.containsValue(obj43);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b47 = defaultedMap46.isEmpty();
        boolean b48 = defaultedMap46.isEmpty();
        boolean b50 = defaultedMap46.equals((java.lang.Object) 10);
        java.lang.Object obj51 = defaultedMap31.get((java.lang.Object) b50);
        java.lang.Object obj53 = defaultedMap31.get((java.lang.Object) 0L);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap55.keySet();
        java.util.Collection collection57 = defaultedMap55.values();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap59.keySet();
        boolean b62 = defaultedMap59.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection63 = defaultedMap59.values();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) collection63);
        boolean b65 = defaultedMap64.isEmpty();
        boolean b66 = defaultedMap55.containsValue((java.lang.Object) defaultedMap64);
        boolean b67 = defaultedMap55.isEmpty();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap55);
        boolean b69 = defaultedMap68.isEmpty();
        java.util.Collection collection70 = defaultedMap68.values();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj74 = defaultedMap72.remove((java.lang.Object) 1.0f);
        defaultedMap68.putAll((java.util.Map) defaultedMap72);
        java.util.Collection collection76 = defaultedMap68.values();
        java.lang.Object obj77 = defaultedMap31.get((java.lang.Object) collection76);
        defaultedMap5.putAll((java.util.Map) defaultedMap31);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (byte) 0 + "'", obj51.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertNotNull(collection57);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(collection76);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (byte) 0 + "'", obj77.equals((byte) 0));
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        java.util.Collection collection45 = defaultedMap43.values();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap47.keySet();
        boolean b50 = defaultedMap47.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection51 = defaultedMap47.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) collection51);
        boolean b53 = defaultedMap52.isEmpty();
        boolean b54 = defaultedMap43.containsValue((java.lang.Object) defaultedMap52);
        boolean b55 = defaultedMap43.isEmpty();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap43);
        boolean b57 = defaultedMap56.isEmpty();
        java.util.Collection collection58 = defaultedMap56.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = defaultedMap60.remove((java.lang.Object) 1.0f);
        defaultedMap56.putAll((java.util.Map) defaultedMap60);
        java.util.Collection collection64 = defaultedMap56.values();
        java.util.Map map65 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, (java.lang.Object) collection64);
        java.util.Set set66 = defaultedMap6.entrySet();
        collections.Factory factory67 = null;
        try {
            java.util.Map map68 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(collection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertNotNull(map65);
        org.junit.Assert.assertNotNull(set66);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set8 = defaultedMap7.keySet();
        java.lang.Object obj10 = defaultedMap7.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        java.lang.Object obj16 = defaultedMap12.remove((java.lang.Object) 'a');
        defaultedMap7.putAll((java.util.Map) defaultedMap12);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap7, predicate18, predicate19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) collection26);
        boolean b28 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        defaultedMap30.clear();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = defaultedMap35.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        boolean b44 = defaultedMap39.containsKey((java.lang.Object) 1);
        defaultedMap39.clear();
        java.lang.Object obj46 = defaultedMap30.put((java.lang.Object) defaultedMap35, (java.lang.Object) defaultedMap39);
        collections.Predicate predicate47 = null;
        collections.Predicate predicate48 = null;
        java.util.Map map49 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate47, predicate48);
        java.lang.Object obj50 = defaultedMap27.get((java.lang.Object) predicate47);
        java.util.Set set51 = defaultedMap27.entrySet();
        java.lang.Object obj52 = defaultedMap1.put((java.lang.Object) defaultedMap7, (java.lang.Object) defaultedMap27);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = defaultedMap54.remove((java.lang.Object) 1.0f);
        java.util.Set set57 = defaultedMap54.keySet();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap59.keySet();
        boolean b62 = defaultedMap59.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection63 = defaultedMap59.values();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) collection63);
        boolean b65 = defaultedMap64.isEmpty();
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = defaultedMap67.remove((java.lang.Object) 1.0f);
        defaultedMap67.clear();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj74 = defaultedMap72.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj78 = null;
        java.lang.Object obj79 = defaultedMap76.put((java.lang.Object) 1, obj78);
        boolean b81 = defaultedMap76.containsKey((java.lang.Object) 1);
        defaultedMap76.clear();
        java.lang.Object obj83 = defaultedMap67.put((java.lang.Object) defaultedMap72, (java.lang.Object) defaultedMap76);
        collections.Predicate predicate84 = null;
        collections.Predicate predicate85 = null;
        java.util.Map map86 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap67, predicate84, predicate85);
        java.lang.Object obj87 = defaultedMap64.get((java.lang.Object) predicate84);
        java.util.Set set88 = defaultedMap64.entrySet();
        java.util.Map map89 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap54, (java.lang.Object) defaultedMap64);
        boolean b90 = defaultedMap27.equals((java.lang.Object) map89);
        java.util.Set set91 = defaultedMap27.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(map49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(set57);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(map86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(set88);
        org.junit.Assert.assertNotNull(map89);
        org.junit.Assert.assertTrue(b90 == true);
        org.junit.Assert.assertNotNull(set91);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        boolean b8 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        boolean b14 = defaultedMap6.containsKey((java.lang.Object) 0.0f);
        java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap6);
        boolean b16 = defaultedMap1.isEmpty();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(map15);
        org.junit.Assert.assertTrue(b16 == true);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        boolean b22 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        defaultedMap1.putAll((java.util.Map) defaultedMap10);
        java.util.Set set25 = defaultedMap10.keySet();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNotNull(set25);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap38.isEmpty();
        boolean b40 = defaultedMap38.isEmpty();
        java.lang.Object obj42 = defaultedMap38.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = defaultedMap44.remove((java.lang.Object) 1.0f);
        defaultedMap44.clear();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj51 = defaultedMap49.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = null;
        java.lang.Object obj56 = defaultedMap53.put((java.lang.Object) 1, obj55);
        boolean b58 = defaultedMap53.containsKey((java.lang.Object) 1);
        defaultedMap53.clear();
        java.lang.Object obj60 = defaultedMap44.put((java.lang.Object) defaultedMap49, (java.lang.Object) defaultedMap53);
        java.lang.Object obj61 = defaultedMap38.get((java.lang.Object) defaultedMap49);
        java.util.Map map62 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, (java.lang.Object) defaultedMap38);
        java.util.Set set63 = defaultedMap15.keySet();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj67 = defaultedMap65.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b70 = defaultedMap69.isEmpty();
        java.util.Set set71 = defaultedMap69.entrySet();
        boolean b72 = defaultedMap65.containsValue((java.lang.Object) set71);
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set75 = defaultedMap74.keySet();
        java.util.Collection collection76 = defaultedMap74.values();
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set79 = defaultedMap78.keySet();
        boolean b81 = defaultedMap78.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection82 = defaultedMap78.values();
        collections.map.DefaultedMap defaultedMap83 = new collections.map.DefaultedMap((java.lang.Object) collection82);
        boolean b84 = defaultedMap83.isEmpty();
        boolean b85 = defaultedMap74.containsValue((java.lang.Object) defaultedMap83);
        boolean b86 = defaultedMap74.isEmpty();
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap74);
        boolean b88 = defaultedMap87.isEmpty();
        java.util.Collection collection89 = defaultedMap87.values();
        collections.map.DefaultedMap defaultedMap91 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj93 = defaultedMap91.remove((java.lang.Object) 1.0f);
        defaultedMap87.putAll((java.util.Map) defaultedMap91);
        java.util.Collection collection95 = defaultedMap87.values();
        java.util.Map map96 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap65, (java.lang.Object) collection95);
        collections.map.DefaultedMap defaultedMap97 = new collections.map.DefaultedMap((java.lang.Object) collection95);
        boolean b98 = defaultedMap15.containsValue((java.lang.Object) defaultedMap97);
        java.lang.String str99 = defaultedMap97.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (byte) 0 + "'", obj42.equals((byte) 0));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (byte) 0 + "'", obj61.equals((byte) 0));
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (byte) 0 + "'", obj67.equals((byte) 0));
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertNotNull(set71);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(set75);
        org.junit.Assert.assertNotNull(collection76);
        org.junit.Assert.assertNotNull(set79);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertNotNull(collection82);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertNotNull(collection89);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(collection95);
        org.junit.Assert.assertNotNull(map96);
        org.junit.Assert.assertTrue(b98 == false);
        org.junit.Assert.assertTrue("'" + str99 + "' != '" + "{}" + "'", str99.equals("{}"));
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj11 = defaultedMap1.put((java.lang.Object) collection9, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        java.util.Set set29 = defaultedMap24.keySet();
        java.util.Set set30 = defaultedMap24.entrySet();
        java.lang.Object obj31 = defaultedMap1.put((java.lang.Object) predicate21, (java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) 1, obj35);
        java.util.Set set37 = defaultedMap33.keySet();
        int i38 = defaultedMap33.size();
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap40.keySet();
        boolean b43 = defaultedMap40.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection44 = defaultedMap40.values();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) collection44);
        boolean b46 = defaultedMap45.isEmpty();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = defaultedMap48.remove((java.lang.Object) 1.0f);
        defaultedMap48.clear();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = defaultedMap53.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = null;
        java.lang.Object obj60 = defaultedMap57.put((java.lang.Object) 1, obj59);
        boolean b62 = defaultedMap57.containsKey((java.lang.Object) 1);
        defaultedMap57.clear();
        java.lang.Object obj64 = defaultedMap48.put((java.lang.Object) defaultedMap53, (java.lang.Object) defaultedMap57);
        collections.Predicate predicate65 = null;
        collections.Predicate predicate66 = null;
        java.util.Map map67 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate65, predicate66);
        java.lang.Object obj68 = defaultedMap45.get((java.lang.Object) predicate65);
        boolean b69 = defaultedMap45.isEmpty();
        collections.Predicate predicate70 = null;
        collections.Predicate predicate71 = null;
        java.util.Map map72 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap45, predicate70, predicate71);
        java.lang.Object obj73 = defaultedMap33.get((java.lang.Object) predicate70);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set76 = defaultedMap75.keySet();
        boolean b78 = defaultedMap75.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection79 = defaultedMap75.values();
        java.lang.String str80 = defaultedMap75.toString();
        collections.map.DefaultedMap defaultedMap82 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj84 = defaultedMap82.get((java.lang.Object) 0.0f);
        boolean b85 = defaultedMap82.isEmpty();
        java.lang.Object obj88 = defaultedMap82.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap89 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap82);
        boolean b90 = defaultedMap75.equals((java.lang.Object) defaultedMap89);
        defaultedMap89.clear();
        java.lang.Object obj92 = defaultedMap33.get((java.lang.Object) defaultedMap89);
        java.lang.Object obj93 = defaultedMap24.get((java.lang.Object) defaultedMap33);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue(i38 == 1);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(map67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertNotNull(map72);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (byte) 0 + "'", obj73.equals((byte) 0));
        org.junit.Assert.assertNotNull(set76);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertNotNull(collection79);
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "{}" + "'", str80.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj84 + "' != '" + (byte) 0 + "'", obj84.equals((byte) 0));
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue(b90 == true);
        org.junit.Assert.assertTrue("'" + obj92 + "' != '" + (byte) 0 + "'", obj92.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj93 + "' != '" + (byte) 0 + "'", obj93.equals((byte) 0));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        boolean b8 = defaultedMap6.isEmpty();
        java.lang.Object obj10 = defaultedMap6.get((java.lang.Object) 10.0d);
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.util.Collection collection12 = defaultedMap1.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertNotNull(collection12);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection23 = defaultedMap22.values();
        boolean b24 = defaultedMap6.containsValue((java.lang.Object) collection23);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) (byte) 100);
        int i29 = defaultedMap26.size();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = defaultedMap31.remove((java.lang.Object) 1.0f);
        java.lang.Object obj35 = defaultedMap31.remove((java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap26.get((java.lang.Object) defaultedMap31);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set39 = defaultedMap38.keySet();
        boolean b41 = defaultedMap38.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection42 = defaultedMap38.values();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) collection42);
        int i44 = defaultedMap43.size();
        collections.Predicate predicate45 = null;
        collections.Predicate predicate46 = null;
        java.util.Map map47 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap43, predicate45, predicate46);
        java.lang.Object obj48 = defaultedMap31.get((java.lang.Object) defaultedMap43);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) 1, obj52);
        boolean b55 = defaultedMap50.containsKey((java.lang.Object) 1);
        java.lang.String str56 = defaultedMap50.toString();
        java.lang.Object obj57 = defaultedMap6.put((java.lang.Object) defaultedMap31, (java.lang.Object) str56);
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj61 = defaultedMap59.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj65 = defaultedMap63.remove((java.lang.Object) 1.0f);
        defaultedMap63.clear();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj70 = defaultedMap68.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj74 = null;
        java.lang.Object obj75 = defaultedMap72.put((java.lang.Object) 1, obj74);
        boolean b77 = defaultedMap72.containsKey((java.lang.Object) 1);
        defaultedMap72.clear();
        java.lang.Object obj79 = defaultedMap63.put((java.lang.Object) defaultedMap68, (java.lang.Object) defaultedMap72);
        java.lang.Object obj80 = null;
        boolean b81 = defaultedMap68.containsValue(obj80);
        collections.map.DefaultedMap defaultedMap83 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b84 = defaultedMap83.isEmpty();
        boolean b85 = defaultedMap83.isEmpty();
        boolean b87 = defaultedMap83.equals((java.lang.Object) 10);
        java.lang.Object obj88 = defaultedMap68.get((java.lang.Object) b87);
        java.util.Set set89 = defaultedMap68.entrySet();
        java.lang.Object obj90 = defaultedMap6.put((java.lang.Object) 0.0f, (java.lang.Object) defaultedMap68);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + 0 + "'", obj36.equals(0));
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertNotNull(map47);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (byte) 0 + "'", obj48.equals((byte) 0));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "{1=null}" + "'", str56.equals("{1=null}"));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (byte) 0 + "'", obj61.equals((byte) 0));
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue("'" + obj88 + "' != '" + (byte) 0 + "'", obj88.equals((byte) 0));
        org.junit.Assert.assertNotNull(set89);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.remove((java.lang.Object) 1.0f);
        defaultedMap17.clear();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = null;
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) 1, obj28);
        boolean b31 = defaultedMap26.containsKey((java.lang.Object) 1);
        defaultedMap26.clear();
        java.lang.Object obj33 = defaultedMap17.put((java.lang.Object) defaultedMap22, (java.lang.Object) defaultedMap26);
        java.lang.Object obj34 = null;
        boolean b35 = defaultedMap22.containsValue(obj34);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap37.isEmpty();
        boolean b39 = defaultedMap37.isEmpty();
        boolean b41 = defaultedMap37.equals((java.lang.Object) 10);
        java.lang.Object obj42 = defaultedMap22.get((java.lang.Object) b41);
        java.util.Map map43 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap14, (java.lang.Object) b41);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.remove((java.lang.Object) 1.0f);
        java.lang.Object obj49 = defaultedMap45.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.remove((java.lang.Object) 1.0f);
        java.lang.Object obj55 = defaultedMap51.remove((java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap45.get((java.lang.Object) 'a');
        defaultedMap45.clear();
        boolean b58 = defaultedMap45.isEmpty();
        defaultedMap45.clear();
        java.util.Set set60 = defaultedMap45.entrySet();
        boolean b61 = defaultedMap14.containsValue((java.lang.Object) defaultedMap45);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (byte) 0 + "'", obj42.equals((byte) 0));
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (byte) 0 + "'", obj56.equals((byte) 0));
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(b61 == false);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        java.util.Collection collection21 = defaultedMap6.values();
        int i22 = defaultedMap6.size();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = null;
        java.lang.Object obj27 = defaultedMap24.put((java.lang.Object) 1, obj26);
        java.util.Set set28 = defaultedMap24.keySet();
        int i29 = defaultedMap24.size();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set32 = defaultedMap31.keySet();
        boolean b34 = defaultedMap31.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection35 = defaultedMap31.values();
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) collection35);
        boolean b37 = defaultedMap36.isEmpty();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        defaultedMap39.clear();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = defaultedMap44.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = null;
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) 1, obj50);
        boolean b53 = defaultedMap48.containsKey((java.lang.Object) 1);
        defaultedMap48.clear();
        java.lang.Object obj55 = defaultedMap39.put((java.lang.Object) defaultedMap44, (java.lang.Object) defaultedMap48);
        collections.Predicate predicate56 = null;
        collections.Predicate predicate57 = null;
        java.util.Map map58 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap39, predicate56, predicate57);
        java.lang.Object obj59 = defaultedMap36.get((java.lang.Object) predicate56);
        boolean b60 = defaultedMap36.isEmpty();
        collections.Predicate predicate61 = null;
        collections.Predicate predicate62 = null;
        java.util.Map map63 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap36, predicate61, predicate62);
        java.lang.Object obj64 = defaultedMap24.get((java.lang.Object) predicate61);
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj68 = defaultedMap66.remove((java.lang.Object) (byte) 100);
        int i69 = defaultedMap66.size();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj73 = defaultedMap71.remove((java.lang.Object) 1.0f);
        java.lang.Object obj75 = defaultedMap71.remove((java.lang.Object) 'a');
        java.lang.Object obj76 = defaultedMap66.get((java.lang.Object) defaultedMap71);
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set79 = defaultedMap78.keySet();
        boolean b81 = defaultedMap78.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection82 = defaultedMap78.values();
        collections.map.DefaultedMap defaultedMap83 = new collections.map.DefaultedMap((java.lang.Object) collection82);
        int i84 = defaultedMap83.size();
        collections.Predicate predicate85 = null;
        collections.Predicate predicate86 = null;
        java.util.Map map87 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap83, predicate85, predicate86);
        java.lang.Object obj88 = defaultedMap71.get((java.lang.Object) defaultedMap83);
        boolean b89 = defaultedMap24.containsValue((java.lang.Object) defaultedMap71);
        collections.Predicate predicate90 = null;
        collections.Predicate predicate91 = null;
        java.util.Map map92 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap71, predicate90, predicate91);
        java.lang.Object obj93 = defaultedMap6.remove((java.lang.Object) predicate91);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue(i29 == 1);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(collection35);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(map58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(map63);
        org.junit.Assert.assertTrue("'" + obj64 + "' != '" + (byte) 0 + "'", obj64.equals((byte) 0));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj76 + "' != '" + 0 + "'", obj76.equals(0));
        org.junit.Assert.assertNotNull(set79);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertNotNull(collection82);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertNotNull(map87);
        org.junit.Assert.assertTrue("'" + obj88 + "' != '" + (byte) 0 + "'", obj88.equals((byte) 0));
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertNotNull(map92);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        java.util.Set set6 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection9 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b11 = defaultedMap1.containsKey((java.lang.Object) defaultedMap8);
        java.lang.Object obj13 = defaultedMap8.remove((java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = null;
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) 1, obj17);
        java.util.Set set19 = defaultedMap15.keySet();
        int i20 = defaultedMap15.size();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) collection26);
        boolean b28 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        defaultedMap30.clear();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = defaultedMap35.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        boolean b44 = defaultedMap39.containsKey((java.lang.Object) 1);
        defaultedMap39.clear();
        java.lang.Object obj46 = defaultedMap30.put((java.lang.Object) defaultedMap35, (java.lang.Object) defaultedMap39);
        collections.Predicate predicate47 = null;
        collections.Predicate predicate48 = null;
        java.util.Map map49 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate47, predicate48);
        java.lang.Object obj50 = defaultedMap27.get((java.lang.Object) predicate47);
        boolean b51 = defaultedMap27.isEmpty();
        collections.Predicate predicate52 = null;
        collections.Predicate predicate53 = null;
        java.util.Map map54 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap27, predicate52, predicate53);
        java.lang.Object obj55 = defaultedMap15.get((java.lang.Object) predicate52);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set58 = defaultedMap57.keySet();
        boolean b60 = defaultedMap57.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection61 = defaultedMap57.values();
        java.lang.String str62 = defaultedMap57.toString();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = defaultedMap64.get((java.lang.Object) 0.0f);
        boolean b67 = defaultedMap64.isEmpty();
        java.lang.Object obj70 = defaultedMap64.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap64);
        boolean b72 = defaultedMap57.equals((java.lang.Object) defaultedMap71);
        defaultedMap71.clear();
        java.lang.Object obj74 = defaultedMap15.get((java.lang.Object) defaultedMap71);
        boolean b75 = defaultedMap8.equals(obj74);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue(i20 == 1);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(map49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNotNull(map54);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (byte) 0 + "'", obj55.equals((byte) 0));
        org.junit.Assert.assertNotNull(set58);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNotNull(collection61);
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "{}" + "'", str62.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (byte) 0 + "'", obj66.equals((byte) 0));
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (byte) 0 + "'", obj74.equals((byte) 0));
        org.junit.Assert.assertTrue(b75 == false);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 100.0f);
        java.util.Set set2 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) 100.0f);
        java.util.Set set5 = defaultedMap4.entrySet();
        boolean b6 = defaultedMap1.equals((java.lang.Object) defaultedMap4);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b6 == true);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        java.lang.String str7 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        java.lang.String str14 = defaultedMap9.toString();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap16.isEmpty();
        boolean b18 = defaultedMap16.isEmpty();
        java.lang.Object obj20 = defaultedMap16.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        defaultedMap22.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        boolean b36 = defaultedMap31.containsKey((java.lang.Object) 1);
        defaultedMap31.clear();
        java.lang.Object obj38 = defaultedMap22.put((java.lang.Object) defaultedMap27, (java.lang.Object) defaultedMap31);
        java.lang.Object obj39 = defaultedMap16.get((java.lang.Object) defaultedMap27);
        java.lang.Object obj41 = defaultedMap27.get((java.lang.Object) 100L);
        java.lang.Object obj42 = defaultedMap9.remove((java.lang.Object) defaultedMap27);
        java.util.Map map43 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, obj42);
        int i44 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{1=null}" + "'", str7.equals("{1=null}"));
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "{}" + "'", str14.equals("{}"));
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (byte) 0 + "'", obj20.equals((byte) 0));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (byte) 0 + "'", obj39.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertTrue(i44 == 1);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set32 = defaultedMap31.keySet();
        boolean b34 = defaultedMap31.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = null;
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) 1, obj38);
        java.util.Set set40 = defaultedMap36.keySet();
        java.lang.Object obj41 = defaultedMap31.get((java.lang.Object) defaultedMap36);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        java.util.Collection collection45 = defaultedMap43.values();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap47.keySet();
        boolean b50 = defaultedMap47.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection51 = defaultedMap47.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) collection51);
        boolean b53 = defaultedMap52.isEmpty();
        boolean b54 = defaultedMap43.containsValue((java.lang.Object) defaultedMap52);
        java.lang.Object obj55 = new java.lang.Object();
        boolean b56 = defaultedMap52.containsValue(obj55);
        defaultedMap31.putAll((java.util.Map) defaultedMap52);
        defaultedMap29.putAll((java.util.Map) defaultedMap31);
        java.util.Set set59 = defaultedMap29.keySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNotNull(set59);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        java.lang.Object obj13 = new java.lang.Object();
        boolean b14 = defaultedMap10.containsValue(obj13);
        boolean b15 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        collections.Transformer transformer17 = null;
        try {
            java.util.Map map18 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap16, transformer17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == true);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        defaultedMap6.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) (byte) 100);
        java.util.Set set17 = defaultedMap14.entrySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.get((java.lang.Object) 0.0f);
        boolean b22 = defaultedMap19.isEmpty();
        java.lang.Object obj25 = defaultedMap19.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap19, predicate26, predicate27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap30.keySet();
        java.util.Collection collection32 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set35 = defaultedMap34.keySet();
        boolean b37 = defaultedMap34.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection38 = defaultedMap34.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) collection38);
        boolean b40 = defaultedMap39.isEmpty();
        boolean b41 = defaultedMap30.containsValue((java.lang.Object) defaultedMap39);
        boolean b42 = defaultedMap30.isEmpty();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap30);
        boolean b44 = defaultedMap43.isEmpty();
        java.lang.Object obj45 = defaultedMap19.remove((java.lang.Object) defaultedMap43);
        java.util.Set set46 = defaultedMap19.keySet();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap19);
        defaultedMap14.putAll((java.util.Map) defaultedMap47);
        defaultedMap47.clear();
        java.lang.Object obj50 = defaultedMap6.get((java.lang.Object) defaultedMap47);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (byte) 0 + "'", obj21.equals((byte) 0));
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (byte) 0 + "'", obj50.equals((byte) 0));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.String str18 = defaultedMap10.toString();
        collections.Predicate predicate19 = null;
        collections.Predicate predicate20 = null;
        java.util.Map map21 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap10, predicate19, predicate20);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{}" + "'", str18.equals("{}"));
        org.junit.Assert.assertNotNull(map21);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.get((java.lang.Object) 0.0f);
        boolean b17 = defaultedMap14.isEmpty();
        java.lang.Object obj20 = defaultedMap14.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap14);
        boolean b22 = defaultedMap10.containsKey((java.lang.Object) defaultedMap14);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) 1.0f);
        defaultedMap24.clear();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) 1, obj35);
        boolean b38 = defaultedMap33.containsKey((java.lang.Object) 1);
        defaultedMap33.clear();
        java.lang.Object obj40 = defaultedMap24.put((java.lang.Object) defaultedMap29, (java.lang.Object) defaultedMap33);
        collections.Predicate predicate41 = null;
        collections.Predicate predicate42 = null;
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap24, predicate41, predicate42);
        collections.Predicate predicate44 = null;
        collections.Predicate predicate45 = null;
        java.util.Map map46 = collections.map.PredicatedMap.decorate(map43, predicate44, predicate45);
        boolean b47 = defaultedMap10.equals((java.lang.Object) predicate44);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (byte) 0 + "'", obj16.equals((byte) 0));
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNotNull(map46);
        org.junit.Assert.assertTrue(b47 == false);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        boolean b15 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.get((java.lang.Object) 0.0f);
        boolean b20 = defaultedMap17.isEmpty();
        java.lang.Object obj23 = defaultedMap17.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap17);
        java.util.Set set25 = defaultedMap17.entrySet();
        boolean b26 = defaultedMap1.equals((java.lang.Object) defaultedMap17);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = null;
        java.lang.Object obj31 = defaultedMap28.put((java.lang.Object) 1, obj30);
        java.util.Set set32 = defaultedMap28.keySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        defaultedMap28.putAll((java.util.Map) defaultedMap39);
        java.lang.Object obj52 = null;
        boolean b53 = defaultedMap39.containsValue(obj52);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = defaultedMap55.remove((java.lang.Object) 1.0f);
        defaultedMap55.clear();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = defaultedMap60.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = null;
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) 1, obj66);
        boolean b69 = defaultedMap64.containsKey((java.lang.Object) 1);
        defaultedMap64.clear();
        java.lang.Object obj71 = defaultedMap55.put((java.lang.Object) defaultedMap60, (java.lang.Object) defaultedMap64);
        defaultedMap39.putAll((java.util.Map) defaultedMap60);
        java.util.Collection collection73 = defaultedMap60.values();
        java.util.Map map74 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap17, (java.lang.Object) collection73);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(collection73);
        org.junit.Assert.assertNotNull(map74);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        boolean b9 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        int i10 = defaultedMap1.size();
        collections.Transformer transformer11 = null;
        try {
            java.util.Map map12 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(i10 == 0);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        int i7 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) collection13);
        boolean b15 = defaultedMap14.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.remove((java.lang.Object) 1.0f);
        defaultedMap17.clear();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = null;
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) 1, obj28);
        boolean b31 = defaultedMap26.containsKey((java.lang.Object) 1);
        defaultedMap26.clear();
        java.lang.Object obj33 = defaultedMap17.put((java.lang.Object) defaultedMap22, (java.lang.Object) defaultedMap26);
        collections.Predicate predicate34 = null;
        collections.Predicate predicate35 = null;
        java.util.Map map36 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate34, predicate35);
        java.lang.Object obj37 = defaultedMap14.get((java.lang.Object) predicate34);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        java.util.Set set43 = defaultedMap39.keySet();
        boolean b44 = defaultedMap14.containsValue((java.lang.Object) set43);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection47 = defaultedMap46.values();
        java.lang.Object obj48 = defaultedMap1.put((java.lang.Object) b44, (java.lang.Object) defaultedMap46);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b55 = defaultedMap54.isEmpty();
        java.util.Set set56 = defaultedMap54.entrySet();
        boolean b57 = defaultedMap50.containsValue((java.lang.Object) set56);
        java.lang.Object obj58 = defaultedMap1.get((java.lang.Object) b57);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set62 = defaultedMap61.keySet();
        boolean b64 = defaultedMap61.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection65 = defaultedMap61.values();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) collection65);
        java.lang.Object obj67 = defaultedMap1.get((java.lang.Object) collection65);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte) 0 + "'", obj52.equals((byte) 0));
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(collection65);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (byte) 0 + "'", obj67.equals((byte) 0));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        java.lang.Object obj23 = defaultedMap6.get((java.lang.Object) defaultedMap18);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = defaultedMap25.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b30 = defaultedMap29.isEmpty();
        java.util.Set set31 = defaultedMap29.entrySet();
        boolean b32 = defaultedMap25.containsValue((java.lang.Object) set31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) (byte) 100);
        java.util.Set set37 = defaultedMap34.keySet();
        java.lang.Object obj38 = defaultedMap25.get((java.lang.Object) defaultedMap34);
        defaultedMap6.putAll((java.util.Map) defaultedMap34);
        java.lang.String str40 = defaultedMap34.toString();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 0 + "'", obj23.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (byte) 0 + "'", obj27.equals((byte) 0));
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte) 0 + "'", obj38.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "{}" + "'", str40.equals("{}"));
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        java.util.Set set10 = defaultedMap6.keySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        java.lang.Object obj25 = new java.lang.Object();
        boolean b26 = defaultedMap22.containsValue(obj25);
        defaultedMap1.putAll((java.util.Map) defaultedMap22);
        java.util.Collection collection28 = defaultedMap22.values();
        java.util.Set set29 = defaultedMap22.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set29);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.util.Set set6 = defaultedMap1.keySet();
        java.util.Set set7 = defaultedMap1.entrySet();
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        boolean b15 = defaultedMap12.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection16 = defaultedMap12.values();
        java.lang.String str17 = defaultedMap12.toString();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap19.isEmpty();
        java.lang.Object obj23 = defaultedMap19.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = defaultedMap25.remove((java.lang.Object) 1.0f);
        defaultedMap25.clear();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        boolean b39 = defaultedMap34.containsKey((java.lang.Object) 1);
        defaultedMap34.clear();
        java.lang.Object obj41 = defaultedMap25.put((java.lang.Object) defaultedMap30, (java.lang.Object) defaultedMap34);
        java.lang.Object obj42 = defaultedMap19.get((java.lang.Object) defaultedMap30);
        java.lang.Object obj44 = defaultedMap30.get((java.lang.Object) 100L);
        java.lang.Object obj45 = defaultedMap12.remove((java.lang.Object) defaultedMap30);
        boolean b46 = defaultedMap1.containsValue(obj45);
        defaultedMap1.clear();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "{}" + "'", str17.equals("{}"));
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 0 + "'", obj23.equals((byte) 0));
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (byte) 0 + "'", obj42.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte) 0 + "'", obj44.equals((byte) 0));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue(b46 == false);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.Factory factory4 = null;
        try {
            java.util.Map map5 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set5 = defaultedMap4.keySet();
        boolean b7 = defaultedMap4.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection8 = defaultedMap4.values();
        collections.Predicate predicate9 = null;
        collections.Predicate predicate10 = null;
        java.util.Map map11 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap4, predicate9, predicate10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = defaultedMap13.remove((java.lang.Object) 1.0f);
        defaultedMap13.clear();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = null;
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) 1, obj24);
        boolean b27 = defaultedMap22.containsKey((java.lang.Object) 1);
        defaultedMap22.clear();
        java.lang.Object obj29 = defaultedMap13.put((java.lang.Object) defaultedMap18, (java.lang.Object) defaultedMap22);
        java.lang.Object obj30 = null;
        boolean b31 = defaultedMap18.containsValue(obj30);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b34 = defaultedMap33.isEmpty();
        boolean b35 = defaultedMap33.isEmpty();
        boolean b37 = defaultedMap33.equals((java.lang.Object) 10);
        java.lang.Object obj38 = defaultedMap18.get((java.lang.Object) b37);
        java.util.Map map39 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap4, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate40 = null;
        collections.Predicate predicate41 = null;
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap4, predicate40, predicate41);
        defaultedMap4.clear();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.remove((java.lang.Object) 1.0f);
        java.lang.Object obj49 = defaultedMap45.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.remove((java.lang.Object) 1.0f);
        java.lang.Object obj55 = defaultedMap51.remove((java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap45.get((java.lang.Object) 'a');
        java.lang.String str57 = defaultedMap45.toString();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap59.keySet();
        java.util.Collection collection61 = defaultedMap59.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set64 = defaultedMap63.keySet();
        boolean b66 = defaultedMap63.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection67 = defaultedMap63.values();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) collection67);
        boolean b69 = defaultedMap68.isEmpty();
        boolean b70 = defaultedMap59.containsValue((java.lang.Object) defaultedMap68);
        boolean b71 = defaultedMap59.isEmpty();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap59);
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj77 = defaultedMap74.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap59.putAll((java.util.Map) defaultedMap74);
        java.lang.Object obj79 = defaultedMap45.get((java.lang.Object) defaultedMap59);
        boolean b80 = defaultedMap4.equals((java.lang.Object) defaultedMap59);
        java.lang.Object obj81 = defaultedMap1.get((java.lang.Object) defaultedMap59);
        java.util.Collection collection82 = defaultedMap1.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte) 0 + "'", obj38.equals((byte) 0));
        org.junit.Assert.assertNotNull(map39);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (byte) 0 + "'", obj56.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "{}" + "'", str57.equals("{}"));
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertNotNull(collection61);
        org.junit.Assert.assertNotNull(set64);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertNotNull(collection67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + obj79 + "' != '" + (byte) 0 + "'", obj79.equals((byte) 0));
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (byte) 0 + "'", obj81.equals((byte) 0));
        org.junit.Assert.assertNotNull(collection82);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.util.Set set4 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set7 = defaultedMap6.keySet();
        boolean b9 = defaultedMap6.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection10 = defaultedMap6.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap11.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        collections.Predicate predicate31 = null;
        collections.Predicate predicate32 = null;
        java.util.Map map33 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap14, predicate31, predicate32);
        java.lang.Object obj34 = defaultedMap11.get((java.lang.Object) predicate31);
        java.util.Set set35 = defaultedMap11.entrySet();
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap11);
        defaultedMap1.clear();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(map33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertNotNull(map36);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap7.isEmpty();
        boolean b9 = defaultedMap7.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) (byte) 100);
        int i27 = defaultedMap24.size();
        java.lang.Object obj28 = defaultedMap16.remove((java.lang.Object) defaultedMap24);
        boolean b29 = defaultedMap11.containsKey((java.lang.Object) defaultedMap16);
        java.lang.Object obj30 = defaultedMap7.remove((java.lang.Object) defaultedMap11);
        defaultedMap7.clear();
        java.util.Set set32 = defaultedMap7.entrySet();
        java.util.Map map33 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) set32);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNotNull(map33);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        boolean b11 = defaultedMap6.containsKey((java.lang.Object) 1);
        defaultedMap6.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) (byte) 100);
        int i17 = defaultedMap14.size();
        java.lang.Object obj18 = defaultedMap6.remove((java.lang.Object) defaultedMap14);
        boolean b19 = defaultedMap1.containsKey((java.lang.Object) defaultedMap6);
        collections.Factory factory20 = null;
        try {
            java.util.Map map21 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue(i17 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue(b19 == false);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        boolean b15 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.get((java.lang.Object) 0.0f);
        boolean b20 = defaultedMap17.isEmpty();
        java.lang.Object obj23 = defaultedMap17.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap17);
        java.util.Set set25 = defaultedMap17.entrySet();
        boolean b26 = defaultedMap1.equals((java.lang.Object) defaultedMap17);
        java.util.Set set27 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set30 = defaultedMap29.keySet();
        boolean b32 = defaultedMap29.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection33 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) collection33);
        boolean b35 = defaultedMap34.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = defaultedMap37.remove((java.lang.Object) 1.0f);
        defaultedMap37.clear();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = defaultedMap42.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj48 = null;
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) 1, obj48);
        boolean b51 = defaultedMap46.containsKey((java.lang.Object) 1);
        defaultedMap46.clear();
        java.lang.Object obj53 = defaultedMap37.put((java.lang.Object) defaultedMap42, (java.lang.Object) defaultedMap46);
        collections.Predicate predicate54 = null;
        collections.Predicate predicate55 = null;
        java.util.Map map56 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap37, predicate54, predicate55);
        java.lang.Object obj57 = defaultedMap34.get((java.lang.Object) predicate54);
        boolean b58 = defaultedMap34.isEmpty();
        java.util.Set set59 = defaultedMap34.keySet();
        boolean b60 = defaultedMap1.containsValue((java.lang.Object) set59);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(collection33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(map56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b60 == false);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        java.lang.Object obj25 = null;
        boolean b26 = defaultedMap12.containsValue(obj25);
        collections.Factory factory27 = null;
        try {
            java.util.Map map28 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap12, factory27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b26 == false);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        boolean b5 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b5 == false);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.get((java.lang.Object) 0.0f);
        boolean b11 = defaultedMap8.isEmpty();
        java.lang.Object obj14 = defaultedMap8.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b16 = defaultedMap1.equals((java.lang.Object) defaultedMap15);
        defaultedMap15.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        java.lang.String str24 = defaultedMap19.toString();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection30 = defaultedMap26.values();
        java.lang.String str31 = defaultedMap26.toString();
        collections.Predicate predicate32 = null;
        collections.Predicate predicate33 = null;
        java.util.Map map34 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap26, predicate32, predicate33);
        java.lang.Object obj35 = defaultedMap15.put((java.lang.Object) defaultedMap19, (java.lang.Object) map34);
        collections.Transformer transformer36 = null;
        try {
            java.util.Map map37 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, transformer36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "{}" + "'", str24.equals("{}"));
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "{}" + "'", str31.equals("{}"));
        org.junit.Assert.assertNotNull(map34);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        java.util.Set set10 = defaultedMap6.keySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        java.lang.Object obj13 = defaultedMap1.get((java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = null;
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) 1, obj17);
        defaultedMap15.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        java.lang.Object obj38 = null;
        boolean b39 = defaultedMap26.containsValue(obj38);
        java.util.Set set40 = defaultedMap26.entrySet();
        defaultedMap15.putAll((java.util.Map) defaultedMap26);
        java.lang.Object obj42 = defaultedMap1.remove((java.lang.Object) defaultedMap15);
        java.util.Set set43 = defaultedMap15.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (byte) 0 + "'", obj13.equals((byte) 0));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(set43);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        defaultedMap6.putAll((java.util.Map) defaultedMap8);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        boolean b25 = defaultedMap13.isEmpty();
        java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) b25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap28.isEmpty();
        java.lang.Object obj32 = defaultedMap28.get((java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap28.entrySet();
        boolean b34 = defaultedMap8.equals((java.lang.Object) defaultedMap28);
        collections.Transformer transformer35 = null;
        try {
            java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap28, transformer35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b34 == true);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        collections.Predicate predicate13 = null;
        collections.Predicate predicate14 = null;
        java.util.Map map15 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate13, predicate14);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(map15);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        int i12 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertTrue(i12 == 0);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b6 = defaultedMap5.isEmpty();
        java.util.Set set7 = defaultedMap5.entrySet();
        boolean b8 = defaultedMap1.containsValue((java.lang.Object) set7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        boolean b22 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        boolean b24 = defaultedMap23.isEmpty();
        java.util.Collection collection25 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        defaultedMap23.putAll((java.util.Map) defaultedMap27);
        java.util.Collection collection31 = defaultedMap23.values();
        java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) collection31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set35 = defaultedMap34.keySet();
        java.util.Collection collection36 = defaultedMap34.values();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set39 = defaultedMap38.keySet();
        boolean b41 = defaultedMap38.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection42 = defaultedMap38.values();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) collection42);
        boolean b44 = defaultedMap43.isEmpty();
        boolean b45 = defaultedMap34.containsValue((java.lang.Object) defaultedMap43);
        java.util.Map map46 = collections.map.DefaultedMap.decorate(map32, (java.lang.Object) defaultedMap43);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(map32);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertNotNull(collection36);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNotNull(map46);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        java.util.Collection collection21 = defaultedMap6.values();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set24 = defaultedMap23.keySet();
        java.util.Collection collection25 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap27.keySet();
        boolean b30 = defaultedMap27.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection31 = defaultedMap27.values();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) collection31);
        boolean b33 = defaultedMap32.isEmpty();
        boolean b34 = defaultedMap23.containsValue((java.lang.Object) defaultedMap32);
        int i35 = defaultedMap32.size();
        defaultedMap32.clear();
        java.lang.Object obj37 = defaultedMap6.get((java.lang.Object) defaultedMap32);
        collections.Predicate predicate38 = null;
        collections.Predicate predicate39 = null;
        java.util.Map map40 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap32, predicate38, predicate39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = defaultedMap42.remove((java.lang.Object) 1.0f);
        java.util.Set set45 = defaultedMap42.keySet();
        collections.Predicate predicate46 = null;
        collections.Predicate predicate47 = null;
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap42, predicate46, predicate47);
        boolean b49 = defaultedMap32.containsKey((java.lang.Object) map48);
        java.util.Map map51 = collections.map.DefaultedMap.decorate(map48, (java.lang.Object) (-1L));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (byte) 0 + "'", obj37.equals((byte) 0));
        org.junit.Assert.assertNotNull(map40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNotNull(map51);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) (byte) 100);
        int i29 = defaultedMap26.size();
        boolean b30 = defaultedMap12.equals((java.lang.Object) i29);
        java.lang.String str31 = defaultedMap12.toString();
        boolean b32 = defaultedMap12.isEmpty();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set35 = defaultedMap34.keySet();
        boolean b37 = defaultedMap34.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection38 = defaultedMap34.values();
        collections.Predicate predicate39 = null;
        collections.Predicate predicate40 = null;
        java.util.Map map41 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate39, predicate40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = defaultedMap43.remove((java.lang.Object) 1.0f);
        defaultedMap43.clear();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = defaultedMap48.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = null;
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) 1, obj54);
        boolean b57 = defaultedMap52.containsKey((java.lang.Object) 1);
        defaultedMap52.clear();
        java.lang.Object obj59 = defaultedMap43.put((java.lang.Object) defaultedMap48, (java.lang.Object) defaultedMap52);
        java.lang.Object obj60 = null;
        boolean b61 = defaultedMap48.containsValue(obj60);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b64 = defaultedMap63.isEmpty();
        boolean b65 = defaultedMap63.isEmpty();
        boolean b67 = defaultedMap63.equals((java.lang.Object) 10);
        java.lang.Object obj68 = defaultedMap48.get((java.lang.Object) b67);
        java.util.Map map69 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap34, (java.lang.Object) defaultedMap48);
        boolean b70 = defaultedMap34.isEmpty();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) b70);
        boolean b72 = defaultedMap12.containsKey((java.lang.Object) b70);
        collections.Predicate predicate73 = null;
        collections.Predicate predicate74 = null;
        java.util.Map map75 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap12, predicate73, predicate74);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "{}" + "'", str31.equals("{}"));
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNotNull(map41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertNotNull(map69);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(map75);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        int i5 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(i5 == 0);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        java.util.Set set35 = defaultedMap31.keySet();
        boolean b36 = defaultedMap6.containsValue((java.lang.Object) set35);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set39 = defaultedMap38.keySet();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection45 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) collection45);
        boolean b47 = defaultedMap46.isEmpty();
        java.lang.Object obj48 = defaultedMap38.get((java.lang.Object) defaultedMap46);
        java.lang.Object obj50 = defaultedMap38.get((java.lang.Object) 10.0f);
        java.util.Map map51 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, obj50);
        collections.Factory factory52 = null;
        try {
            java.util.Map map53 = collections.map.DefaultedMap.decorate(map51, factory52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (byte) 0 + "'", obj48.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (byte) 0 + "'", obj50.equals((byte) 0));
        org.junit.Assert.assertNotNull(map51);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj11 = defaultedMap1.put((java.lang.Object) collection9, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        java.util.Set set29 = defaultedMap24.keySet();
        java.util.Set set30 = defaultedMap24.entrySet();
        java.lang.Object obj31 = defaultedMap1.put((java.lang.Object) predicate21, (java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection34 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap33);
        java.lang.Object obj36 = defaultedMap1.get((java.lang.Object) defaultedMap33);
        java.util.Set set37 = defaultedMap33.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(collection34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + 0 + "'", obj36.equals(0));
        org.junit.Assert.assertNotNull(set37);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj7 = defaultedMap5.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        java.lang.Object obj15 = defaultedMap5.put((java.lang.Object) collection13, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        int i23 = defaultedMap22.size();
        collections.Predicate predicate24 = null;
        collections.Predicate predicate25 = null;
        java.util.Map map26 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap22, predicate24, predicate25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set29 = defaultedMap28.keySet();
        boolean b31 = defaultedMap28.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection32 = defaultedMap28.values();
        java.util.Set set33 = defaultedMap28.keySet();
        java.util.Set set34 = defaultedMap28.entrySet();
        java.lang.Object obj35 = defaultedMap5.put((java.lang.Object) predicate25, (java.lang.Object) defaultedMap28);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection38 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap37);
        java.lang.Object obj40 = defaultedMap5.get((java.lang.Object) defaultedMap37);
        defaultedMap1.putAll((java.util.Map) defaultedMap5);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + 0 + "'", obj40.equals(0));
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set5 = defaultedMap4.keySet();
        boolean b7 = defaultedMap4.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection8 = defaultedMap4.values();
        collections.Predicate predicate9 = null;
        collections.Predicate predicate10 = null;
        java.util.Map map11 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap4, predicate9, predicate10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = defaultedMap13.remove((java.lang.Object) 1.0f);
        defaultedMap13.clear();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = null;
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) 1, obj24);
        boolean b27 = defaultedMap22.containsKey((java.lang.Object) 1);
        defaultedMap22.clear();
        java.lang.Object obj29 = defaultedMap13.put((java.lang.Object) defaultedMap18, (java.lang.Object) defaultedMap22);
        java.lang.Object obj30 = null;
        boolean b31 = defaultedMap18.containsValue(obj30);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b34 = defaultedMap33.isEmpty();
        boolean b35 = defaultedMap33.isEmpty();
        boolean b37 = defaultedMap33.equals((java.lang.Object) 10);
        java.lang.Object obj38 = defaultedMap18.get((java.lang.Object) b37);
        java.util.Map map39 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap4, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate40 = null;
        collections.Predicate predicate41 = null;
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap4, predicate40, predicate41);
        defaultedMap4.clear();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.remove((java.lang.Object) 1.0f);
        java.lang.Object obj49 = defaultedMap45.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.remove((java.lang.Object) 1.0f);
        java.lang.Object obj55 = defaultedMap51.remove((java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap45.get((java.lang.Object) 'a');
        java.lang.String str57 = defaultedMap45.toString();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap59.keySet();
        java.util.Collection collection61 = defaultedMap59.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set64 = defaultedMap63.keySet();
        boolean b66 = defaultedMap63.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection67 = defaultedMap63.values();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) collection67);
        boolean b69 = defaultedMap68.isEmpty();
        boolean b70 = defaultedMap59.containsValue((java.lang.Object) defaultedMap68);
        boolean b71 = defaultedMap59.isEmpty();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap59);
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj77 = defaultedMap74.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap59.putAll((java.util.Map) defaultedMap74);
        java.lang.Object obj79 = defaultedMap45.get((java.lang.Object) defaultedMap59);
        boolean b80 = defaultedMap4.equals((java.lang.Object) defaultedMap59);
        java.lang.Object obj81 = defaultedMap1.get((java.lang.Object) defaultedMap59);
        java.util.Collection collection82 = defaultedMap59.values();
        java.util.Set set83 = defaultedMap59.keySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte) 0 + "'", obj38.equals((byte) 0));
        org.junit.Assert.assertNotNull(map39);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (byte) 0 + "'", obj56.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "{}" + "'", str57.equals("{}"));
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertNotNull(collection61);
        org.junit.Assert.assertNotNull(set64);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertNotNull(collection67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + obj79 + "' != '" + (byte) 0 + "'", obj79.equals((byte) 0));
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (byte) 0 + "'", obj81.equals((byte) 0));
        org.junit.Assert.assertNotNull(collection82);
        org.junit.Assert.assertNotNull(set83);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Factory factory8 = null;
        try {
            java.util.Map map9 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.String str10 = defaultedMap1.toString();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "{}" + "'", str10.equals("{}"));
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) (-1.0f));
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap(obj3);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + 0 + "'", obj3.equals(0));
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        boolean b7 = defaultedMap1.equals((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = null;
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) 1, obj11);
        java.lang.String str13 = defaultedMap9.toString();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b20 = defaultedMap19.isEmpty();
        java.util.Set set21 = defaultedMap19.entrySet();
        boolean b22 = defaultedMap15.containsValue((java.lang.Object) set21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        java.util.Collection collection26 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set29 = defaultedMap28.keySet();
        boolean b31 = defaultedMap28.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection32 = defaultedMap28.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) collection32);
        boolean b34 = defaultedMap33.isEmpty();
        boolean b35 = defaultedMap24.containsValue((java.lang.Object) defaultedMap33);
        boolean b36 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        boolean b38 = defaultedMap37.isEmpty();
        java.util.Collection collection39 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = defaultedMap41.remove((java.lang.Object) 1.0f);
        defaultedMap37.putAll((java.util.Map) defaultedMap41);
        java.util.Collection collection45 = defaultedMap37.values();
        java.util.Map map46 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, (java.lang.Object) collection45);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set49 = defaultedMap48.keySet();
        boolean b51 = defaultedMap48.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection52 = defaultedMap48.values();
        java.lang.String str53 = defaultedMap48.toString();
        collections.Predicate predicate54 = null;
        collections.Predicate predicate55 = null;
        java.util.Map map56 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate54, predicate55);
        java.util.Map map57 = collections.map.DefaultedMap.decorate(map46, (java.lang.Object) map56);
        java.util.Map map58 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, (java.lang.Object) map56);
        collections.Predicate predicate59 = null;
        collections.Predicate predicate60 = null;
        java.util.Map map61 = collections.map.PredicatedMap.decorate(map58, predicate59, predicate60);
        defaultedMap1.putAll(map58);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{1=null}" + "'", str13.equals("{1=null}"));
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte) 0 + "'", obj17.equals((byte) 0));
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(map46);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "{}" + "'", str53.equals("{}"));
        org.junit.Assert.assertNotNull(map56);
        org.junit.Assert.assertNotNull(map57);
        org.junit.Assert.assertNotNull(map58);
        org.junit.Assert.assertNotNull(map61);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) (byte) 100);
        int i12 = defaultedMap9.size();
        java.lang.Object obj13 = defaultedMap1.remove((java.lang.Object) defaultedMap9);
        collections.Transformer transformer14 = null;
        try {
            java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, transformer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = null;
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) 1, obj13);
        java.util.Set set15 = defaultedMap11.keySet();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) set15);
        java.util.Set set17 = defaultedMap16.entrySet();
        int i18 = defaultedMap16.size();
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = defaultedMap16.get((java.lang.Object) defaultedMap21);
        boolean b25 = defaultedMap1.containsValue(obj24);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue(b25 == false);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        int i7 = defaultedMap6.size();
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap6, predicate8, predicate9);
        collections.Predicate predicate11 = null;
        collections.Predicate predicate12 = null;
        java.util.Map map13 = collections.map.PredicatedMap.decorate(map10, predicate11, predicate12);
        collections.Predicate predicate14 = null;
        collections.Predicate predicate15 = null;
        java.util.Map map16 = collections.map.PredicatedMap.decorate(map10, predicate14, predicate15);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNotNull(map13);
        org.junit.Assert.assertNotNull(map16);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        collections.Predicate predicate37 = null;
        collections.Predicate predicate38 = null;
        java.util.Map map39 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate37, predicate38);
        collections.Transformer transformer40 = null;
        try {
            java.util.Map map41 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertNotNull(map39);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        boolean b8 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        boolean b14 = defaultedMap6.containsKey((java.lang.Object) 0.0f);
        java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap6);
        java.util.Collection collection16 = defaultedMap6.values();
        collections.Factory factory17 = null;
        try {
            java.util.Map map18 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(map15);
        org.junit.Assert.assertNotNull(collection16);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj11 = defaultedMap1.put((java.lang.Object) collection9, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        java.util.Set set29 = defaultedMap24.keySet();
        java.util.Set set30 = defaultedMap24.entrySet();
        java.lang.Object obj31 = defaultedMap1.put((java.lang.Object) predicate21, (java.lang.Object) defaultedMap24);
        defaultedMap24.clear();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set35 = defaultedMap34.keySet();
        java.lang.Object obj37 = defaultedMap34.get((java.lang.Object) 10L);
        collections.Predicate predicate38 = null;
        collections.Predicate predicate39 = null;
        java.util.Map map40 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate38, predicate39);
        java.lang.Object obj41 = defaultedMap24.get((java.lang.Object) defaultedMap34);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (byte) 0 + "'", obj37.equals((byte) 0));
        org.junit.Assert.assertNotNull(map40);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        boolean b42 = defaultedMap39.isEmpty();
        java.util.Set set43 = defaultedMap39.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(set43);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        java.util.Set set13 = defaultedMap10.keySet();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b16 = defaultedMap15.isEmpty();
        boolean b17 = defaultedMap15.isEmpty();
        java.lang.Object obj19 = defaultedMap15.get((java.lang.Object) 10.0d);
        java.util.Set set20 = defaultedMap15.entrySet();
        java.util.Map map21 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap10, (java.lang.Object) defaultedMap15);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(map21);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b6 = defaultedMap5.isEmpty();
        java.util.Set set7 = defaultedMap5.entrySet();
        boolean b8 = defaultedMap1.containsValue((java.lang.Object) set7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        boolean b22 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        boolean b24 = defaultedMap23.isEmpty();
        java.util.Collection collection25 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        defaultedMap23.putAll((java.util.Map) defaultedMap27);
        java.util.Collection collection31 = defaultedMap23.values();
        java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) collection31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set35 = defaultedMap34.keySet();
        boolean b37 = defaultedMap34.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection38 = defaultedMap34.values();
        java.lang.String str39 = defaultedMap34.toString();
        collections.Predicate predicate40 = null;
        collections.Predicate predicate41 = null;
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate40, predicate41);
        java.util.Map map43 = collections.map.DefaultedMap.decorate(map32, (java.lang.Object) map42);
        collections.Transformer transformer44 = null;
        try {
            java.util.Map map45 = collections.map.DefaultedMap.decorate(map42, transformer44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(map32);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "{}" + "'", str39.equals("{}"));
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNotNull(map43);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap21.isEmpty();
        boolean b25 = defaultedMap21.equals((java.lang.Object) 10);
        java.lang.Object obj26 = defaultedMap6.get((java.lang.Object) b25);
        java.util.Set set27 = defaultedMap6.keySet();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set30 = defaultedMap29.keySet();
        java.util.Collection collection31 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set34 = defaultedMap33.keySet();
        boolean b36 = defaultedMap33.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection37 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) collection37);
        boolean b39 = defaultedMap38.isEmpty();
        boolean b40 = defaultedMap29.containsValue((java.lang.Object) defaultedMap38);
        int i41 = defaultedMap38.size();
        defaultedMap38.clear();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set45 = defaultedMap44.keySet();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap47.keySet();
        boolean b50 = defaultedMap47.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection51 = defaultedMap47.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) collection51);
        boolean b53 = defaultedMap52.isEmpty();
        java.lang.Object obj54 = defaultedMap44.get((java.lang.Object) defaultedMap52);
        boolean b55 = defaultedMap38.containsValue((java.lang.Object) defaultedMap52);
        java.util.Collection collection56 = defaultedMap52.values();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap52);
        java.util.Set set58 = defaultedMap52.keySet();
        boolean b59 = defaultedMap6.containsValue((java.lang.Object) set58);
        boolean b60 = defaultedMap6.isEmpty();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte) 0 + "'", obj54.equals((byte) 0));
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNotNull(set58);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        defaultedMap6.putAll((java.util.Map) defaultedMap8);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        boolean b25 = defaultedMap13.isEmpty();
        java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) b25);
        int i27 = defaultedMap8.size();
        java.util.Set set28 = defaultedMap8.entrySet();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        java.lang.Object obj34 = defaultedMap30.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = defaultedMap36.remove((java.lang.Object) 1.0f);
        java.lang.Object obj40 = defaultedMap36.remove((java.lang.Object) 'a');
        java.lang.Object obj41 = defaultedMap30.get((java.lang.Object) 'a');
        defaultedMap30.clear();
        boolean b43 = defaultedMap30.isEmpty();
        int i44 = defaultedMap30.size();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set47 = defaultedMap46.keySet();
        boolean b49 = defaultedMap46.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection50 = defaultedMap46.values();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) collection50);
        boolean b52 = defaultedMap51.isEmpty();
        java.util.Set set53 = defaultedMap51.keySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap55.keySet();
        java.util.Collection collection57 = defaultedMap55.values();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap59.keySet();
        boolean b62 = defaultedMap59.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection63 = defaultedMap59.values();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) collection63);
        boolean b65 = defaultedMap64.isEmpty();
        boolean b66 = defaultedMap55.containsValue((java.lang.Object) defaultedMap64);
        int i67 = defaultedMap64.size();
        java.util.Set set68 = defaultedMap64.keySet();
        defaultedMap51.putAll((java.util.Map) defaultedMap64);
        java.lang.Object obj70 = defaultedMap30.get((java.lang.Object) defaultedMap51);
        java.util.Collection collection71 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj75 = null;
        java.lang.Object obj76 = defaultedMap73.put((java.lang.Object) 1, obj75);
        defaultedMap73.clear();
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap73);
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set81 = defaultedMap80.keySet();
        java.util.Collection collection82 = defaultedMap80.values();
        collections.map.DefaultedMap defaultedMap84 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set85 = defaultedMap84.keySet();
        boolean b87 = defaultedMap84.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection88 = defaultedMap84.values();
        collections.map.DefaultedMap defaultedMap89 = new collections.map.DefaultedMap((java.lang.Object) collection88);
        boolean b90 = defaultedMap89.isEmpty();
        boolean b91 = defaultedMap80.containsValue((java.lang.Object) defaultedMap89);
        int i92 = defaultedMap89.size();
        java.lang.Object obj93 = defaultedMap78.get((java.lang.Object) defaultedMap89);
        boolean b94 = defaultedMap30.containsValue(obj93);
        java.lang.Object obj95 = defaultedMap8.get(obj93);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertNotNull(collection57);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertNotNull(set68);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (byte) 0 + "'", obj70.equals((byte) 0));
        org.junit.Assert.assertNotNull(collection71);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(set81);
        org.junit.Assert.assertNotNull(collection82);
        org.junit.Assert.assertNotNull(set85);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertNotNull(collection88);
        org.junit.Assert.assertTrue(b90 == true);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(i92 == 0);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertTrue(b94 == false);
        org.junit.Assert.assertTrue("'" + obj95 + "' != '" + (byte) 0 + "'", obj95.equals((byte) 0));
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        java.util.Set set20 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) set20);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set24 = defaultedMap23.keySet();
        java.util.Collection collection25 = defaultedMap23.values();
        defaultedMap21.putAll((java.util.Map) defaultedMap23);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set29 = defaultedMap28.keySet();
        java.util.Collection collection30 = defaultedMap28.values();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set33 = defaultedMap32.keySet();
        boolean b35 = defaultedMap32.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection36 = defaultedMap32.values();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) collection36);
        boolean b38 = defaultedMap37.isEmpty();
        boolean b39 = defaultedMap28.containsValue((java.lang.Object) defaultedMap37);
        boolean b40 = defaultedMap28.isEmpty();
        java.util.Map map41 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap23, (java.lang.Object) b40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b44 = defaultedMap43.isEmpty();
        boolean b45 = defaultedMap43.isEmpty();
        java.lang.Object obj47 = defaultedMap43.get((java.lang.Object) 10.0d);
        java.util.Set set48 = defaultedMap43.entrySet();
        boolean b49 = defaultedMap23.equals((java.lang.Object) defaultedMap43);
        int i50 = defaultedMap23.size();
        java.lang.Object obj51 = defaultedMap14.get((java.lang.Object) defaultedMap23);
        collections.Transformer transformer52 = null;
        try {
            java.util.Map map53 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap14, transformer52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertNotNull(collection36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNotNull(map41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte) 0 + "'", obj47.equals((byte) 0));
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        java.lang.String str42 = defaultedMap39.toString();
        java.util.Collection collection43 = defaultedMap39.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "{}" + "'", str42.equals("{}"));
        org.junit.Assert.assertNotNull(collection43);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        boolean b37 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.get((java.lang.Object) 0.0f);
        boolean b42 = defaultedMap39.isEmpty();
        int i43 = defaultedMap39.size();
        defaultedMap1.putAll((java.util.Map) defaultedMap39);
        defaultedMap1.clear();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i43 == 0);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection23 = defaultedMap22.values();
        boolean b24 = defaultedMap6.containsValue((java.lang.Object) collection23);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) (byte) 100);
        int i29 = defaultedMap26.size();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = defaultedMap31.remove((java.lang.Object) 1.0f);
        java.lang.Object obj35 = defaultedMap31.remove((java.lang.Object) 'a');
        java.lang.Object obj36 = defaultedMap26.get((java.lang.Object) defaultedMap31);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set39 = defaultedMap38.keySet();
        boolean b41 = defaultedMap38.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection42 = defaultedMap38.values();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) collection42);
        int i44 = defaultedMap43.size();
        collections.Predicate predicate45 = null;
        collections.Predicate predicate46 = null;
        java.util.Map map47 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap43, predicate45, predicate46);
        java.lang.Object obj48 = defaultedMap31.get((java.lang.Object) defaultedMap43);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) 1, obj52);
        boolean b55 = defaultedMap50.containsKey((java.lang.Object) 1);
        java.lang.String str56 = defaultedMap50.toString();
        java.lang.Object obj57 = defaultedMap6.put((java.lang.Object) defaultedMap31, (java.lang.Object) str56);
        int i58 = defaultedMap31.size();
        collections.Transformer transformer59 = null;
        try {
            java.util.Map map60 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap31, transformer59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + 0 + "'", obj36.equals(0));
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertNotNull(map47);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (byte) 0 + "'", obj48.equals((byte) 0));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "{1=null}" + "'", str56.equals("{1=null}"));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue(i58 == 0);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        boolean b35 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        java.util.Collection collection39 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection45 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) collection45);
        boolean b47 = defaultedMap46.isEmpty();
        boolean b48 = defaultedMap37.containsValue((java.lang.Object) defaultedMap46);
        boolean b49 = defaultedMap37.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap37);
        boolean b51 = defaultedMap50.isEmpty();
        java.util.Collection collection52 = defaultedMap50.values();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = defaultedMap54.remove((java.lang.Object) 1.0f);
        defaultedMap50.putAll((java.util.Map) defaultedMap54);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        defaultedMap58.clear();
        java.util.Map map60 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap58);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.util.Map map63 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap62);
        defaultedMap62.clear();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(map60);
        org.junit.Assert.assertNotNull(map63);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        defaultedMap10.clear();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        boolean b8 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        boolean b14 = defaultedMap6.containsKey((java.lang.Object) 0.0f);
        java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap6);
        java.util.Collection collection16 = defaultedMap6.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection19 = defaultedMap18.values();
        boolean b20 = defaultedMap6.equals((java.lang.Object) defaultedMap18);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        java.lang.Object obj26 = defaultedMap22.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = defaultedMap28.remove((java.lang.Object) 1.0f);
        java.lang.Object obj32 = defaultedMap28.remove((java.lang.Object) 'a');
        java.lang.Object obj33 = defaultedMap22.get((java.lang.Object) 'a');
        defaultedMap22.clear();
        boolean b35 = defaultedMap22.isEmpty();
        java.util.Collection collection36 = defaultedMap22.values();
        boolean b37 = defaultedMap6.equals((java.lang.Object) collection36);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(map15);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(collection36);
        org.junit.Assert.assertTrue(b37 == false);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b6 = defaultedMap5.isEmpty();
        java.util.Set set7 = defaultedMap5.entrySet();
        boolean b8 = defaultedMap1.containsValue((java.lang.Object) set7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        boolean b22 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        boolean b24 = defaultedMap23.isEmpty();
        java.util.Collection collection25 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        defaultedMap23.putAll((java.util.Map) defaultedMap27);
        java.util.Collection collection31 = defaultedMap23.values();
        java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) collection31);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) collection31);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = null;
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) 1, obj38);
        java.util.Set set40 = defaultedMap36.keySet();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) set40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        java.util.Collection collection45 = defaultedMap43.values();
        defaultedMap41.putAll((java.util.Map) defaultedMap43);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set49 = defaultedMap48.keySet();
        java.util.Collection collection50 = defaultedMap48.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set53 = defaultedMap52.keySet();
        boolean b55 = defaultedMap52.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection56 = defaultedMap52.values();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) collection56);
        boolean b58 = defaultedMap57.isEmpty();
        boolean b59 = defaultedMap48.containsValue((java.lang.Object) defaultedMap57);
        boolean b60 = defaultedMap48.isEmpty();
        java.util.Map map61 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap43, (java.lang.Object) b60);
        java.lang.Object obj62 = defaultedMap33.put((java.lang.Object) "{1=null}", (java.lang.Object) defaultedMap43);
        java.lang.Object obj63 = null;
        boolean b64 = defaultedMap43.containsKey(obj63);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(map32);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(map61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue(b64 == false);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 0);
        java.util.Set set2 = defaultedMap1.entrySet();
        collections.Factory factory3 = null;
        try {
            java.util.Map map4 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        boolean b11 = defaultedMap6.containsKey((java.lang.Object) 1);
        java.lang.String str12 = defaultedMap6.toString();
        boolean b13 = defaultedMap1.containsValue((java.lang.Object) str12);
        java.lang.String str14 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "{1=null}" + "'", str12.equals("{1=null}"));
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "{1=null}" + "'", str14.equals("{1=null}"));
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        java.lang.Object obj25 = null;
        boolean b26 = defaultedMap12.containsValue(obj25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = defaultedMap28.remove((java.lang.Object) 1.0f);
        defaultedMap28.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = null;
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) 1, obj39);
        boolean b42 = defaultedMap37.containsKey((java.lang.Object) 1);
        defaultedMap37.clear();
        java.lang.Object obj44 = defaultedMap28.put((java.lang.Object) defaultedMap33, (java.lang.Object) defaultedMap37);
        defaultedMap12.putAll((java.util.Map) defaultedMap33);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b48 = defaultedMap47.isEmpty();
        boolean b49 = defaultedMap47.isEmpty();
        boolean b51 = defaultedMap47.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b54 = defaultedMap47.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set57 = defaultedMap56.keySet();
        java.util.Collection collection58 = defaultedMap56.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set61 = defaultedMap60.keySet();
        boolean b63 = defaultedMap60.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection64 = defaultedMap60.values();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) collection64);
        boolean b66 = defaultedMap65.isEmpty();
        boolean b67 = defaultedMap56.containsValue((java.lang.Object) defaultedMap65);
        boolean b68 = defaultedMap56.isEmpty();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap56);
        defaultedMap47.putAll((java.util.Map) defaultedMap56);
        java.util.Set set71 = defaultedMap56.entrySet();
        java.lang.Object obj72 = defaultedMap33.get((java.lang.Object) set71);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNotNull(set57);
        org.junit.Assert.assertNotNull(collection58);
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertNotNull(set71);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (byte) 0 + "'", obj72.equals((byte) 0));
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        java.util.Set set29 = defaultedMap15.entrySet();
        java.util.Collection collection30 = defaultedMap15.values();
        java.lang.Object obj31 = defaultedMap1.get((java.lang.Object) collection30);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b34 = defaultedMap33.isEmpty();
        boolean b35 = defaultedMap33.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = null;
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) 1, obj44);
        boolean b47 = defaultedMap42.containsKey((java.lang.Object) 1);
        defaultedMap42.clear();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj52 = defaultedMap50.remove((java.lang.Object) (byte) 100);
        int i53 = defaultedMap50.size();
        java.lang.Object obj54 = defaultedMap42.remove((java.lang.Object) defaultedMap50);
        boolean b55 = defaultedMap37.containsKey((java.lang.Object) defaultedMap42);
        java.lang.Object obj56 = defaultedMap33.remove((java.lang.Object) defaultedMap37);
        defaultedMap33.clear();
        java.util.Set set58 = defaultedMap33.entrySet();
        java.util.Map map59 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap33);
        java.util.Collection collection60 = defaultedMap33.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(set58);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNotNull(collection60);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        java.lang.String str7 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        java.lang.String str14 = defaultedMap9.toString();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b17 = defaultedMap16.isEmpty();
        boolean b18 = defaultedMap16.isEmpty();
        java.lang.Object obj20 = defaultedMap16.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        defaultedMap22.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        boolean b36 = defaultedMap31.containsKey((java.lang.Object) 1);
        defaultedMap31.clear();
        java.lang.Object obj38 = defaultedMap22.put((java.lang.Object) defaultedMap27, (java.lang.Object) defaultedMap31);
        java.lang.Object obj39 = defaultedMap16.get((java.lang.Object) defaultedMap27);
        java.lang.Object obj41 = defaultedMap27.get((java.lang.Object) 100L);
        java.lang.Object obj42 = defaultedMap9.remove((java.lang.Object) defaultedMap27);
        java.util.Map map43 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, obj42);
        collections.Predicate predicate44 = null;
        collections.Predicate predicate45 = null;
        java.util.Map map46 = collections.map.PredicatedMap.decorate(map43, predicate44, predicate45);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{1=null}" + "'", str7.equals("{1=null}"));
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "{}" + "'", str14.equals("{}"));
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (byte) 0 + "'", obj20.equals((byte) 0));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (byte) 0 + "'", obj39.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNotNull(map46);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        defaultedMap6.clear();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.get((java.lang.Object) 0.0f);
        boolean b25 = defaultedMap22.isEmpty();
        java.lang.Object obj28 = defaultedMap22.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate29 = null;
        collections.Predicate predicate30 = null;
        java.util.Map map31 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap22, predicate29, predicate30);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) 1, obj35);
        boolean b38 = defaultedMap33.containsKey((java.lang.Object) 1);
        java.util.Map map39 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap22, (java.lang.Object) defaultedMap33);
        boolean b40 = defaultedMap6.containsValue((java.lang.Object) map39);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(map31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(map39);
        org.junit.Assert.assertTrue(b40 == false);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        boolean b19 = defaultedMap6.equals((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        collections.Predicate predicate38 = null;
        collections.Predicate predicate39 = null;
        java.util.Map map40 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap21, predicate38, predicate39);
        collections.Predicate predicate41 = null;
        collections.Predicate predicate42 = null;
        java.util.Map map43 = collections.map.PredicatedMap.decorate(map40, predicate41, predicate42);
        boolean b44 = defaultedMap6.containsKey((java.lang.Object) predicate42);
        collections.Factory factory45 = null;
        try {
            java.util.Map map46 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, factory45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(map40);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertTrue(b44 == false);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        java.util.Set set8 = defaultedMap6.keySet();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        int i22 = defaultedMap19.size();
        java.util.Set set23 = defaultedMap19.keySet();
        defaultedMap6.putAll((java.util.Map) defaultedMap19);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        java.util.Set set32 = defaultedMap30.entrySet();
        boolean b33 = defaultedMap26.containsValue((java.lang.Object) set32);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set36 = defaultedMap35.keySet();
        java.util.Collection collection37 = defaultedMap35.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set40 = defaultedMap39.keySet();
        boolean b42 = defaultedMap39.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection43 = defaultedMap39.values();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) collection43);
        boolean b45 = defaultedMap44.isEmpty();
        boolean b46 = defaultedMap35.containsValue((java.lang.Object) defaultedMap44);
        boolean b47 = defaultedMap35.isEmpty();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap35);
        boolean b49 = defaultedMap48.isEmpty();
        java.util.Collection collection50 = defaultedMap48.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = defaultedMap52.remove((java.lang.Object) 1.0f);
        defaultedMap48.putAll((java.util.Map) defaultedMap52);
        java.util.Collection collection56 = defaultedMap48.values();
        java.util.Map map57 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap26, (java.lang.Object) collection56);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) collection56);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = null;
        java.lang.Object obj64 = defaultedMap61.put((java.lang.Object) 1, obj63);
        java.util.Set set65 = defaultedMap61.keySet();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) set65);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set69 = defaultedMap68.keySet();
        java.util.Collection collection70 = defaultedMap68.values();
        defaultedMap66.putAll((java.util.Map) defaultedMap68);
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set74 = defaultedMap73.keySet();
        java.util.Collection collection75 = defaultedMap73.values();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set78 = defaultedMap77.keySet();
        boolean b80 = defaultedMap77.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection81 = defaultedMap77.values();
        collections.map.DefaultedMap defaultedMap82 = new collections.map.DefaultedMap((java.lang.Object) collection81);
        boolean b83 = defaultedMap82.isEmpty();
        boolean b84 = defaultedMap73.containsValue((java.lang.Object) defaultedMap82);
        boolean b85 = defaultedMap73.isEmpty();
        java.util.Map map86 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap68, (java.lang.Object) b85);
        java.lang.Object obj87 = defaultedMap58.put((java.lang.Object) "{1=null}", (java.lang.Object) defaultedMap68);
        java.lang.Object obj88 = defaultedMap6.get((java.lang.Object) "{1=null}");
        int i89 = defaultedMap6.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (byte) 0 + "'", obj28.equals((byte) 0));
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(set36);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(collection43);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNotNull(map57);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertNotNull(set69);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertNotNull(set74);
        org.junit.Assert.assertNotNull(collection75);
        org.junit.Assert.assertNotNull(set78);
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertNotNull(collection81);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertNotNull(map86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertTrue(i89 == 0);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection23 = defaultedMap22.values();
        boolean b24 = defaultedMap6.containsValue((java.lang.Object) collection23);
        java.lang.String str25 = defaultedMap6.toString();
        int i26 = defaultedMap6.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "{}" + "'", str25.equals("{}"));
        org.junit.Assert.assertTrue(i26 == 0);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        java.util.Collection collection21 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set24 = defaultedMap23.keySet();
        boolean b26 = defaultedMap23.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection27 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) collection27);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap19.containsValue((java.lang.Object) defaultedMap28);
        boolean b31 = defaultedMap19.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap19);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap19.putAll((java.util.Map) defaultedMap34);
        java.lang.Object obj39 = defaultedMap6.remove((java.lang.Object) defaultedMap34);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        java.util.Collection collection43 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set46 = defaultedMap45.keySet();
        boolean b48 = defaultedMap45.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection49 = defaultedMap45.values();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) collection49);
        boolean b51 = defaultedMap50.isEmpty();
        boolean b52 = defaultedMap41.containsValue((java.lang.Object) defaultedMap50);
        boolean b53 = defaultedMap41.isEmpty();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap41);
        boolean b55 = defaultedMap54.isEmpty();
        java.util.Collection collection56 = defaultedMap54.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.remove((java.lang.Object) 1.0f);
        defaultedMap54.putAll((java.util.Map) defaultedMap58);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap54);
        defaultedMap62.clear();
        java.lang.Object obj64 = defaultedMap34.remove((java.lang.Object) defaultedMap62);
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj68 = defaultedMap66.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b71 = defaultedMap70.isEmpty();
        java.util.Set set72 = defaultedMap70.entrySet();
        boolean b73 = defaultedMap66.containsValue((java.lang.Object) set72);
        boolean b74 = defaultedMap34.containsValue((java.lang.Object) set72);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(collection27);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertNotNull(collection43);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNotNull(collection49);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertNotNull(set72);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b74 == false);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        boolean b30 = defaultedMap6.isEmpty();
        java.util.Set set31 = defaultedMap6.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(set31);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap14.putAll((java.util.Map) defaultedMap18);
        boolean b22 = defaultedMap18.isEmpty();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = defaultedMap24.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        java.util.Set set30 = defaultedMap28.entrySet();
        boolean b31 = defaultedMap24.containsValue((java.lang.Object) set30);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set34 = defaultedMap33.keySet();
        java.util.Collection collection35 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        boolean b40 = defaultedMap37.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection41 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) collection41);
        boolean b43 = defaultedMap42.isEmpty();
        boolean b44 = defaultedMap33.containsValue((java.lang.Object) defaultedMap42);
        boolean b45 = defaultedMap33.isEmpty();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap33);
        boolean b47 = defaultedMap46.isEmpty();
        java.util.Collection collection48 = defaultedMap46.values();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.remove((java.lang.Object) 1.0f);
        defaultedMap46.putAll((java.util.Map) defaultedMap50);
        java.util.Collection collection54 = defaultedMap46.values();
        java.util.Map map55 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap24, (java.lang.Object) collection54);
        boolean b56 = defaultedMap18.equals((java.lang.Object) map55);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = null;
        java.lang.Object obj61 = defaultedMap58.put((java.lang.Object) 1, obj60);
        java.util.Set set62 = defaultedMap58.keySet();
        int i63 = defaultedMap58.size();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj67 = defaultedMap65.remove((java.lang.Object) 1.0f);
        java.lang.Object obj69 = defaultedMap65.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj73 = defaultedMap71.remove((java.lang.Object) 1.0f);
        java.lang.Object obj75 = defaultedMap71.remove((java.lang.Object) 'a');
        java.lang.Object obj76 = defaultedMap65.get((java.lang.Object) 'a');
        boolean b77 = defaultedMap58.containsKey(obj76);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection80 = defaultedMap79.values();
        collections.map.DefaultedMap defaultedMap81 = new collections.map.DefaultedMap((java.lang.Object) collection80);
        java.lang.Object obj82 = defaultedMap58.remove((java.lang.Object) collection80);
        java.lang.Object obj83 = defaultedMap18.get(obj82);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertNotNull(collection35);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(collection41);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNotNull(collection48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(collection54);
        org.junit.Assert.assertNotNull(map55);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertTrue(i63 == 1);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + obj76 + "' != '" + (byte) 0 + "'", obj76.equals((byte) 0));
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertNotNull(collection80);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (byte) 0 + "'", obj83.equals((byte) 0));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        boolean b18 = defaultedMap1.containsValue((java.lang.Object) 0.0f);
        java.util.Set set19 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap21.keySet();
        boolean b24 = defaultedMap21.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection25 = defaultedMap21.values();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) collection25);
        boolean b27 = defaultedMap26.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.remove((java.lang.Object) 1.0f);
        defaultedMap29.clear();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = null;
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) 1, obj40);
        boolean b43 = defaultedMap38.containsKey((java.lang.Object) 1);
        defaultedMap38.clear();
        java.lang.Object obj45 = defaultedMap29.put((java.lang.Object) defaultedMap34, (java.lang.Object) defaultedMap38);
        collections.Predicate predicate46 = null;
        collections.Predicate predicate47 = null;
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap29, predicate46, predicate47);
        java.lang.Object obj49 = defaultedMap26.get((java.lang.Object) predicate46);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = null;
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) 1, obj53);
        java.util.Set set55 = defaultedMap51.keySet();
        boolean b56 = defaultedMap26.containsValue((java.lang.Object) set55);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.remove((java.lang.Object) 1.0f);
        defaultedMap58.clear();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj65 = defaultedMap63.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = defaultedMap67.put((java.lang.Object) 1, obj69);
        boolean b72 = defaultedMap67.containsKey((java.lang.Object) 1);
        defaultedMap67.clear();
        java.lang.Object obj74 = defaultedMap58.put((java.lang.Object) defaultedMap63, (java.lang.Object) defaultedMap67);
        java.lang.Object obj75 = null;
        boolean b76 = defaultedMap63.containsValue(obj75);
        java.util.Set set77 = defaultedMap63.entrySet();
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection80 = defaultedMap79.values();
        boolean b81 = defaultedMap63.containsValue((java.lang.Object) collection80);
        boolean b82 = defaultedMap26.containsValue((java.lang.Object) b81);
        boolean b83 = defaultedMap1.containsKey((java.lang.Object) b82);
        boolean b84 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertNotNull(set77);
        org.junit.Assert.assertNotNull(collection80);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == true);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        boolean b9 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection10 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b13 = defaultedMap12.isEmpty();
        boolean b14 = defaultedMap12.isEmpty();
        java.lang.Object obj16 = defaultedMap12.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap18.clear();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = defaultedMap23.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = null;
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) 1, obj29);
        boolean b32 = defaultedMap27.containsKey((java.lang.Object) 1);
        defaultedMap27.clear();
        java.lang.Object obj34 = defaultedMap18.put((java.lang.Object) defaultedMap23, (java.lang.Object) defaultedMap27);
        java.lang.Object obj35 = defaultedMap12.get((java.lang.Object) defaultedMap23);
        collections.Predicate predicate36 = null;
        collections.Predicate predicate37 = null;
        java.util.Map map38 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap12, predicate36, predicate37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap40.keySet();
        boolean b43 = defaultedMap40.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection44 = defaultedMap40.values();
        java.util.Set set45 = defaultedMap40.keySet();
        java.util.Set set46 = defaultedMap40.entrySet();
        collections.Predicate predicate47 = null;
        collections.Predicate predicate48 = null;
        java.util.Map map49 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap40, predicate47, predicate48);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set52 = defaultedMap51.keySet();
        boolean b54 = defaultedMap51.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection55 = defaultedMap51.values();
        java.lang.String str56 = defaultedMap51.toString();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap58.isEmpty();
        boolean b60 = defaultedMap58.isEmpty();
        java.lang.Object obj62 = defaultedMap58.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = defaultedMap64.remove((java.lang.Object) 1.0f);
        defaultedMap64.clear();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj71 = defaultedMap69.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj75 = null;
        java.lang.Object obj76 = defaultedMap73.put((java.lang.Object) 1, obj75);
        boolean b78 = defaultedMap73.containsKey((java.lang.Object) 1);
        defaultedMap73.clear();
        java.lang.Object obj80 = defaultedMap64.put((java.lang.Object) defaultedMap69, (java.lang.Object) defaultedMap73);
        java.lang.Object obj81 = defaultedMap58.get((java.lang.Object) defaultedMap69);
        java.lang.Object obj83 = defaultedMap69.get((java.lang.Object) 100L);
        java.lang.Object obj84 = defaultedMap51.remove((java.lang.Object) defaultedMap69);
        boolean b85 = defaultedMap40.containsValue(obj84);
        java.util.Map map86 = collections.map.DefaultedMap.decorate(map38, (java.lang.Object) defaultedMap40);
        java.lang.Object obj87 = defaultedMap1.get((java.lang.Object) defaultedMap40);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + (byte) 0 + "'", obj16.equals((byte) 0));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map38);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertNotNull(map49);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNotNull(collection55);
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "{}" + "'", str56.equals("{}"));
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue("'" + obj62 + "' != '" + (byte) 0 + "'", obj62.equals((byte) 0));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (byte) 0 + "'", obj81.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (byte) 0 + "'", obj83.equals((byte) 0));
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertNotNull(map86);
        org.junit.Assert.assertTrue("'" + obj87 + "' != '" + (byte) 0 + "'", obj87.equals((byte) 0));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection19 = defaultedMap18.values();
        java.lang.Object obj20 = defaultedMap14.get((java.lang.Object) collection19);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) (byte) 100);
        int i21 = defaultedMap18.size();
        java.lang.Object obj22 = defaultedMap10.remove((java.lang.Object) defaultedMap18);
        boolean b23 = defaultedMap5.containsKey((java.lang.Object) defaultedMap10);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) defaultedMap5);
        defaultedMap1.clear();
        java.util.Set set26 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = defaultedMap28.remove((java.lang.Object) 1.0f);
        defaultedMap28.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = null;
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) 1, obj39);
        boolean b42 = defaultedMap37.containsKey((java.lang.Object) 1);
        defaultedMap37.clear();
        java.lang.Object obj44 = defaultedMap28.put((java.lang.Object) defaultedMap33, (java.lang.Object) defaultedMap37);
        java.lang.Object obj45 = null;
        boolean b46 = defaultedMap33.containsValue(obj45);
        java.util.Set set47 = defaultedMap33.entrySet();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection50 = defaultedMap49.values();
        boolean b51 = defaultedMap33.containsValue((java.lang.Object) collection50);
        defaultedMap1.putAll((java.util.Map) defaultedMap33);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = defaultedMap54.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap58.isEmpty();
        java.util.Set set60 = defaultedMap58.entrySet();
        boolean b61 = defaultedMap54.containsValue((java.lang.Object) set60);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj65 = defaultedMap63.remove((java.lang.Object) (byte) 100);
        java.util.Set set66 = defaultedMap63.keySet();
        java.lang.Object obj67 = defaultedMap54.get((java.lang.Object) defaultedMap63);
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set70 = defaultedMap69.keySet();
        boolean b72 = defaultedMap69.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection73 = defaultedMap69.values();
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) collection73);
        int i75 = defaultedMap74.size();
        collections.Predicate predicate76 = null;
        collections.Predicate predicate77 = null;
        java.util.Map map78 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap74, predicate76, predicate77);
        boolean b79 = defaultedMap63.containsKey((java.lang.Object) map78);
        java.util.Set set80 = defaultedMap63.keySet();
        boolean b81 = defaultedMap33.containsKey((java.lang.Object) set80);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(set26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (byte) 0 + "'", obj56.equals((byte) 0));
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(set66);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (byte) 0 + "'", obj67.equals((byte) 0));
        org.junit.Assert.assertNotNull(set70);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(collection73);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertNotNull(map78);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertNotNull(set80);
        org.junit.Assert.assertTrue(b81 == false);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        java.lang.Object obj13 = new java.lang.Object();
        boolean b14 = defaultedMap10.containsValue(obj13);
        boolean b15 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        collections.Factory factory17 = null;
        try {
            java.util.Map map18 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap16, factory17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == true);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        java.lang.Object obj25 = null;
        boolean b26 = defaultedMap12.containsValue(obj25);
        java.util.Collection collection27 = defaultedMap12.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(collection27);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) collection9);
        int i11 = defaultedMap1.size();
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 0 + "'", obj10.equals(0));
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertNotNull(map14);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 10L);
        java.lang.String str4 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        java.util.Set set10 = defaultedMap6.keySet();
        int i11 = defaultedMap6.size();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        boolean b19 = defaultedMap18.isEmpty();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        collections.Predicate predicate38 = null;
        collections.Predicate predicate39 = null;
        java.util.Map map40 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap21, predicate38, predicate39);
        java.lang.Object obj41 = defaultedMap18.get((java.lang.Object) predicate38);
        boolean b42 = defaultedMap18.isEmpty();
        collections.Predicate predicate43 = null;
        collections.Predicate predicate44 = null;
        java.util.Map map45 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate43, predicate44);
        java.lang.Object obj46 = defaultedMap6.get((java.lang.Object) predicate43);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj50 = defaultedMap48.remove((java.lang.Object) (byte) 100);
        int i51 = defaultedMap48.size();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = defaultedMap53.remove((java.lang.Object) 1.0f);
        java.lang.Object obj57 = defaultedMap53.remove((java.lang.Object) 'a');
        java.lang.Object obj58 = defaultedMap48.get((java.lang.Object) defaultedMap53);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set61 = defaultedMap60.keySet();
        boolean b63 = defaultedMap60.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection64 = defaultedMap60.values();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) collection64);
        int i66 = defaultedMap65.size();
        collections.Predicate predicate67 = null;
        collections.Predicate predicate68 = null;
        java.util.Map map69 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap65, predicate67, predicate68);
        java.lang.Object obj70 = defaultedMap53.get((java.lang.Object) defaultedMap65);
        boolean b71 = defaultedMap6.containsValue((java.lang.Object) defaultedMap53);
        java.util.Set set72 = defaultedMap53.keySet();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap53);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj77 = null;
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) 1, obj77);
        defaultedMap75.clear();
        java.util.Set set80 = defaultedMap75.entrySet();
        collections.map.DefaultedMap defaultedMap82 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection83 = defaultedMap82.values();
        collections.map.DefaultedMap defaultedMap84 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap82);
        boolean b85 = defaultedMap75.containsKey((java.lang.Object) defaultedMap82);
        java.util.Map map86 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap53, (java.lang.Object) defaultedMap82);
        boolean b87 = defaultedMap1.containsKey((java.lang.Object) defaultedMap82);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}" + "'", str4.equals("{}"));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(i11 == 1);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(map40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(map45);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (byte) 0 + "'", obj46.equals((byte) 0));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + 0 + "'", obj58.equals(0));
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertNotNull(map69);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (byte) 0 + "'", obj70.equals((byte) 0));
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(set72);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(set80);
        org.junit.Assert.assertNotNull(collection83);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertNotNull(map86);
        org.junit.Assert.assertTrue(b87 == false);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        boolean b22 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        defaultedMap1.putAll((java.util.Map) defaultedMap10);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = null;
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) 1, obj28);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        boolean b36 = defaultedMap31.containsKey((java.lang.Object) 1);
        java.lang.String str37 = defaultedMap31.toString();
        boolean b38 = defaultedMap26.containsValue((java.lang.Object) str37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap40.keySet();
        java.lang.Object obj43 = defaultedMap40.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.remove((java.lang.Object) 1.0f);
        java.lang.Object obj49 = defaultedMap45.remove((java.lang.Object) 'a');
        defaultedMap40.putAll((java.util.Map) defaultedMap45);
        collections.Predicate predicate51 = null;
        collections.Predicate predicate52 = null;
        java.util.Map map53 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap40, predicate51, predicate52);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) "");
        boolean b56 = defaultedMap40.containsKey((java.lang.Object) defaultedMap55);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap58.isEmpty();
        boolean b60 = defaultedMap58.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = defaultedMap67.put((java.lang.Object) 1, obj69);
        boolean b72 = defaultedMap67.containsKey((java.lang.Object) 1);
        defaultedMap67.clear();
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj77 = defaultedMap75.remove((java.lang.Object) (byte) 100);
        int i78 = defaultedMap75.size();
        java.lang.Object obj79 = defaultedMap67.remove((java.lang.Object) defaultedMap75);
        boolean b80 = defaultedMap62.containsKey((java.lang.Object) defaultedMap67);
        java.lang.Object obj81 = defaultedMap58.remove((java.lang.Object) defaultedMap62);
        collections.map.DefaultedMap defaultedMap83 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj85 = defaultedMap83.remove((java.lang.Object) (byte) 100);
        java.lang.Object obj86 = defaultedMap58.get(obj85);
        java.lang.Object obj87 = defaultedMap55.remove((java.lang.Object) defaultedMap58);
        defaultedMap26.putAll((java.util.Map) defaultedMap58);
        boolean b89 = defaultedMap58.isEmpty();
        boolean b90 = defaultedMap10.containsValue((java.lang.Object) b89);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "{1=null}" + "'", str37.equals("{1=null}"));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 0 + "'", obj43.equals((byte) 0));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(map53);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + obj86 + "' != '" + (byte) 0 + "'", obj86.equals((byte) 0));
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(b90 == false);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        boolean b7 = defaultedMap1.equals((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        collections.Predicate predicate14 = null;
        collections.Predicate predicate15 = null;
        java.util.Map map16 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate14, predicate15);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap18.clear();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = defaultedMap23.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = null;
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) 1, obj29);
        boolean b32 = defaultedMap27.containsKey((java.lang.Object) 1);
        defaultedMap27.clear();
        java.lang.Object obj34 = defaultedMap18.put((java.lang.Object) defaultedMap23, (java.lang.Object) defaultedMap27);
        java.lang.Object obj35 = null;
        boolean b36 = defaultedMap23.containsValue(obj35);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap38.isEmpty();
        boolean b40 = defaultedMap38.isEmpty();
        boolean b42 = defaultedMap38.equals((java.lang.Object) 10);
        java.lang.Object obj43 = defaultedMap23.get((java.lang.Object) b42);
        java.util.Map map44 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, (java.lang.Object) defaultedMap23);
        collections.Predicate predicate45 = null;
        collections.Predicate predicate46 = null;
        java.util.Map map47 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate45, predicate46);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.remove((java.lang.Object) 1.0f);
        java.lang.Object obj54 = defaultedMap50.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj58 = defaultedMap56.remove((java.lang.Object) 1.0f);
        java.lang.Object obj60 = defaultedMap56.remove((java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap50.get((java.lang.Object) 'a');
        java.lang.String str62 = defaultedMap50.toString();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set65 = defaultedMap64.keySet();
        java.util.Collection collection66 = defaultedMap64.values();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set69 = defaultedMap68.keySet();
        boolean b71 = defaultedMap68.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection72 = defaultedMap68.values();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) collection72);
        boolean b74 = defaultedMap73.isEmpty();
        boolean b75 = defaultedMap64.containsValue((java.lang.Object) defaultedMap73);
        boolean b76 = defaultedMap64.isEmpty();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap64);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj82 = defaultedMap79.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap64.putAll((java.util.Map) defaultedMap79);
        java.lang.Object obj84 = defaultedMap50.get((java.lang.Object) defaultedMap64);
        boolean b85 = defaultedMap9.equals((java.lang.Object) defaultedMap64);
        java.util.Map map86 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap64);
        defaultedMap1.clear();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertNotNull(map16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 0 + "'", obj43.equals((byte) 0));
        org.junit.Assert.assertNotNull(map44);
        org.junit.Assert.assertNotNull(map47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (byte) 0 + "'", obj61.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "{}" + "'", str62.equals("{}"));
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertNotNull(collection66);
        org.junit.Assert.assertNotNull(set69);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(collection72);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + obj84 + "' != '" + (byte) 0 + "'", obj84.equals((byte) 0));
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertNotNull(map86);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj11 = defaultedMap1.put((java.lang.Object) collection9, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        java.util.Set set29 = defaultedMap24.keySet();
        java.util.Set set30 = defaultedMap24.entrySet();
        java.lang.Object obj31 = defaultedMap1.put((java.lang.Object) predicate21, (java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        java.lang.Object obj37 = defaultedMap33.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        java.lang.Object obj43 = defaultedMap39.remove((java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap33.get((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set47 = defaultedMap46.keySet();
        boolean b49 = defaultedMap46.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection50 = defaultedMap46.values();
        collections.Predicate predicate51 = null;
        collections.Predicate predicate52 = null;
        java.util.Map map53 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap46, predicate51, predicate52);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = defaultedMap55.remove((java.lang.Object) 1.0f);
        defaultedMap55.clear();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = defaultedMap60.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = null;
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) 1, obj66);
        boolean b69 = defaultedMap64.containsKey((java.lang.Object) 1);
        defaultedMap64.clear();
        java.lang.Object obj71 = defaultedMap55.put((java.lang.Object) defaultedMap60, (java.lang.Object) defaultedMap64);
        java.lang.Object obj72 = null;
        boolean b73 = defaultedMap60.containsValue(obj72);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b76 = defaultedMap75.isEmpty();
        boolean b77 = defaultedMap75.isEmpty();
        boolean b79 = defaultedMap75.equals((java.lang.Object) 10);
        java.lang.Object obj80 = defaultedMap60.get((java.lang.Object) b79);
        java.util.Map map81 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap46, (java.lang.Object) defaultedMap60);
        boolean b82 = defaultedMap46.isEmpty();
        boolean b83 = defaultedMap33.containsValue((java.lang.Object) b82);
        boolean b84 = defaultedMap1.containsValue((java.lang.Object) b82);
        collections.map.DefaultedMap defaultedMap86 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj88 = null;
        java.lang.Object obj89 = defaultedMap86.put((java.lang.Object) 1, obj88);
        java.util.Set set90 = defaultedMap86.keySet();
        java.lang.Object obj91 = defaultedMap1.get((java.lang.Object) set90);
        java.util.Map map92 = null;
        try {
            defaultedMap1.putAll(map92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte) 0 + "'", obj44.equals((byte) 0));
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertNotNull(map53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (byte) 0 + "'", obj80.equals((byte) 0));
        org.junit.Assert.assertNotNull(map81);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(set90);
        org.junit.Assert.assertTrue("'" + obj91 + "' != '" + 0 + "'", obj91.equals(0));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap12);
        boolean b25 = defaultedMap1.isEmpty();
        java.util.Collection collection26 = defaultedMap1.values();
        int i27 = defaultedMap1.size();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue(i27 == 0);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.get((java.lang.Object) 0.0f);
        boolean b11 = defaultedMap8.isEmpty();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b14 = defaultedMap13.isEmpty();
        boolean b15 = defaultedMap13.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        boolean b21 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Map map22 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) defaultedMap13);
        java.lang.Object obj23 = defaultedMap6.remove((java.lang.Object) defaultedMap8);
        java.util.Set set24 = defaultedMap8.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set24);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        java.util.Collection collection45 = defaultedMap43.values();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap47.keySet();
        boolean b50 = defaultedMap47.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection51 = defaultedMap47.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) collection51);
        boolean b53 = defaultedMap52.isEmpty();
        boolean b54 = defaultedMap43.containsValue((java.lang.Object) defaultedMap52);
        boolean b55 = defaultedMap43.isEmpty();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap43);
        boolean b57 = defaultedMap56.isEmpty();
        java.util.Collection collection58 = defaultedMap56.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set61 = defaultedMap60.keySet();
        boolean b63 = defaultedMap60.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection64 = defaultedMap60.values();
        java.lang.String str65 = defaultedMap60.toString();
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = defaultedMap67.get((java.lang.Object) 0.0f);
        boolean b70 = defaultedMap67.isEmpty();
        java.lang.Object obj73 = defaultedMap67.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap67);
        boolean b75 = defaultedMap60.equals((java.lang.Object) defaultedMap74);
        defaultedMap74.clear();
        java.util.Map map77 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap56, (java.lang.Object) defaultedMap74);
        java.lang.Object obj78 = defaultedMap6.get((java.lang.Object) defaultedMap74);
        int i79 = defaultedMap74.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(collection58);
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "{}" + "'", str65.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (byte) 0 + "'", obj69.equals((byte) 0));
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertNotNull(map77);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (-1L) + "'", obj78.equals((-1L)));
        org.junit.Assert.assertTrue(i79 == 0);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        java.util.Set set6 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection9 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b11 = defaultedMap1.containsKey((java.lang.Object) defaultedMap8);
        java.lang.Object obj13 = defaultedMap8.remove((java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b16 = defaultedMap15.isEmpty();
        boolean b17 = defaultedMap15.isEmpty();
        java.lang.Object obj19 = defaultedMap15.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap21.keySet();
        java.lang.Object obj24 = defaultedMap21.get((java.lang.Object) 10L);
        collections.Predicate predicate25 = null;
        collections.Predicate predicate26 = null;
        java.util.Map map27 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap21, predicate25, predicate26);
        java.lang.Object obj28 = defaultedMap15.get((java.lang.Object) predicate25);
        defaultedMap8.putAll((java.util.Map) defaultedMap15);
        collections.Predicate predicate30 = null;
        collections.Predicate predicate31 = null;
        java.util.Map map32 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap8, predicate30, predicate31);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNotNull(map27);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (byte) 0 + "'", obj28.equals((byte) 0));
        org.junit.Assert.assertNotNull(map32);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b7 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        java.util.Collection collection11 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        boolean b19 = defaultedMap18.isEmpty();
        boolean b20 = defaultedMap9.containsValue((java.lang.Object) defaultedMap18);
        boolean b21 = defaultedMap9.isEmpty();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        boolean b23 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = defaultedMap25.remove((java.lang.Object) 1.0f);
        defaultedMap25.clear();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        boolean b39 = defaultedMap34.containsKey((java.lang.Object) 1);
        defaultedMap34.clear();
        java.lang.Object obj41 = defaultedMap25.put((java.lang.Object) defaultedMap30, (java.lang.Object) defaultedMap34);
        java.lang.Object obj42 = null;
        boolean b43 = defaultedMap30.containsValue(obj42);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b46 = defaultedMap45.isEmpty();
        boolean b47 = defaultedMap45.isEmpty();
        boolean b49 = defaultedMap45.equals((java.lang.Object) 10);
        java.lang.Object obj50 = defaultedMap30.get((java.lang.Object) b49);
        java.util.Map map51 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap22, (java.lang.Object) b49);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) map51);
        java.lang.Object obj53 = defaultedMap1.get((java.lang.Object) map51);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (byte) 0 + "'", obj50.equals((byte) 0));
        org.junit.Assert.assertNotNull(map51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        int i5 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) 1, obj27);
        boolean b30 = defaultedMap25.containsKey((java.lang.Object) 1);
        defaultedMap25.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) (byte) 100);
        int i36 = defaultedMap33.size();
        java.lang.Object obj37 = defaultedMap25.remove((java.lang.Object) defaultedMap33);
        boolean b38 = defaultedMap12.containsValue(obj37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = null;
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) 1, obj42);
        java.util.Set set44 = defaultedMap40.keySet();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) set44);
        java.lang.Object obj47 = defaultedMap12.put((java.lang.Object) defaultedMap45, (java.lang.Object) (-1L));
        java.lang.String str48 = defaultedMap45.toString();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) 1, obj52);
        java.util.Set set54 = defaultedMap50.keySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) set54);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = defaultedMap57.get((java.lang.Object) 0.0f);
        boolean b60 = defaultedMap57.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b63 = defaultedMap62.isEmpty();
        boolean b64 = defaultedMap62.isEmpty();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set67 = defaultedMap66.keySet();
        boolean b69 = defaultedMap66.containsKey((java.lang.Object) 0.0f);
        boolean b70 = defaultedMap62.containsKey((java.lang.Object) 0.0f);
        java.util.Map map71 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap57, (java.lang.Object) defaultedMap62);
        java.lang.Object obj72 = defaultedMap55.remove((java.lang.Object) defaultedMap57);
        java.lang.Object obj73 = defaultedMap1.put((java.lang.Object) defaultedMap45, (java.lang.Object) defaultedMap57);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj77 = defaultedMap75.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b80 = defaultedMap79.isEmpty();
        java.util.Set set81 = defaultedMap79.entrySet();
        boolean b82 = defaultedMap75.containsValue((java.lang.Object) set81);
        collections.map.DefaultedMap defaultedMap84 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj86 = defaultedMap84.remove((java.lang.Object) (byte) 100);
        java.util.Set set87 = defaultedMap84.keySet();
        java.lang.Object obj88 = defaultedMap75.get((java.lang.Object) defaultedMap84);
        java.lang.Object obj89 = null;
        java.lang.Object obj90 = defaultedMap84.get(obj89);
        boolean b91 = defaultedMap1.equals((java.lang.Object) defaultedMap84);
        collections.map.DefaultedMap defaultedMap93 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b94 = defaultedMap93.isEmpty();
        java.util.Set set95 = defaultedMap93.entrySet();
        collections.map.DefaultedMap defaultedMap97 = new collections.map.DefaultedMap((java.lang.Object) 0);
        boolean b98 = defaultedMap93.equals((java.lang.Object) 0);
        boolean b99 = defaultedMap1.containsKey((java.lang.Object) b98);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "{}" + "'", str48.equals("{}"));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (byte) 0 + "'", obj59.equals((byte) 0));
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNotNull(map71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (byte) 0 + "'", obj77.equals((byte) 0));
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertNotNull(set81);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(set87);
        org.junit.Assert.assertTrue("'" + obj88 + "' != '" + (byte) 0 + "'", obj88.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj90 + "' != '" + 0 + "'", obj90.equals(0));
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertNotNull(set95);
        org.junit.Assert.assertTrue(b98 == false);
        org.junit.Assert.assertTrue(b99 == false);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        boolean b9 = defaultedMap1.containsKey((java.lang.Object) (-1.0d));
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set12 = defaultedMap11.keySet();
        boolean b14 = defaultedMap11.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection15 = defaultedMap11.values();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) collection15);
        boolean b17 = defaultedMap16.isEmpty();
        java.util.Set set18 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set21 = defaultedMap20.keySet();
        java.util.Collection collection22 = defaultedMap20.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) collection28);
        boolean b30 = defaultedMap29.isEmpty();
        boolean b31 = defaultedMap20.containsValue((java.lang.Object) defaultedMap29);
        int i32 = defaultedMap29.size();
        java.util.Set set33 = defaultedMap29.keySet();
        defaultedMap16.putAll((java.util.Map) defaultedMap29);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = defaultedMap36.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b41 = defaultedMap40.isEmpty();
        java.util.Set set42 = defaultedMap40.entrySet();
        boolean b43 = defaultedMap36.containsValue((java.lang.Object) set42);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set46 = defaultedMap45.keySet();
        java.util.Collection collection47 = defaultedMap45.values();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set50 = defaultedMap49.keySet();
        boolean b52 = defaultedMap49.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection53 = defaultedMap49.values();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) collection53);
        boolean b55 = defaultedMap54.isEmpty();
        boolean b56 = defaultedMap45.containsValue((java.lang.Object) defaultedMap54);
        boolean b57 = defaultedMap45.isEmpty();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap45);
        boolean b59 = defaultedMap58.isEmpty();
        java.util.Collection collection60 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj64 = defaultedMap62.remove((java.lang.Object) 1.0f);
        defaultedMap58.putAll((java.util.Map) defaultedMap62);
        java.util.Collection collection66 = defaultedMap58.values();
        java.util.Map map67 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap36, (java.lang.Object) collection66);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) collection66);
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj73 = null;
        java.lang.Object obj74 = defaultedMap71.put((java.lang.Object) 1, obj73);
        java.util.Set set75 = defaultedMap71.keySet();
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) set75);
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set79 = defaultedMap78.keySet();
        java.util.Collection collection80 = defaultedMap78.values();
        defaultedMap76.putAll((java.util.Map) defaultedMap78);
        collections.map.DefaultedMap defaultedMap83 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set84 = defaultedMap83.keySet();
        java.util.Collection collection85 = defaultedMap83.values();
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set88 = defaultedMap87.keySet();
        boolean b90 = defaultedMap87.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection91 = defaultedMap87.values();
        collections.map.DefaultedMap defaultedMap92 = new collections.map.DefaultedMap((java.lang.Object) collection91);
        boolean b93 = defaultedMap92.isEmpty();
        boolean b94 = defaultedMap83.containsValue((java.lang.Object) defaultedMap92);
        boolean b95 = defaultedMap83.isEmpty();
        java.util.Map map96 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap78, (java.lang.Object) b95);
        java.lang.Object obj97 = defaultedMap68.put((java.lang.Object) "{1=null}", (java.lang.Object) defaultedMap78);
        java.lang.Object obj98 = defaultedMap16.get((java.lang.Object) "{1=null}");
        defaultedMap1.putAll((java.util.Map) defaultedMap16);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNotNull(set12);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte) 0 + "'", obj38.equals((byte) 0));
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertNotNull(set50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(collection53);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNotNull(collection60);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(collection66);
        org.junit.Assert.assertNotNull(map67);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(set75);
        org.junit.Assert.assertNotNull(set79);
        org.junit.Assert.assertNotNull(collection80);
        org.junit.Assert.assertNotNull(set84);
        org.junit.Assert.assertNotNull(collection85);
        org.junit.Assert.assertNotNull(set88);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertNotNull(collection91);
        org.junit.Assert.assertTrue(b93 == true);
        org.junit.Assert.assertTrue(b94 == false);
        org.junit.Assert.assertTrue(b95 == true);
        org.junit.Assert.assertNotNull(map96);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        boolean b19 = defaultedMap6.equals((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = null;
        java.lang.Object obj24 = defaultedMap21.put((java.lang.Object) 1, obj23);
        boolean b26 = defaultedMap21.containsKey((java.lang.Object) 1);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj31 = defaultedMap29.remove((java.lang.Object) (byte) 100);
        int i32 = defaultedMap29.size();
        java.lang.Object obj33 = defaultedMap21.remove((java.lang.Object) defaultedMap29);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection36 = defaultedMap35.values();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap35);
        boolean b38 = defaultedMap21.containsValue((java.lang.Object) defaultedMap37);
        java.lang.Object obj39 = defaultedMap6.remove((java.lang.Object) defaultedMap37);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(collection36);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) (byte) 100);
        int i12 = defaultedMap9.size();
        java.lang.Object obj13 = defaultedMap1.remove((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection16 = defaultedMap15.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap15);
        boolean b18 = defaultedMap1.containsValue((java.lang.Object) defaultedMap17);
        java.util.Set set19 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.util.Set set4 = defaultedMap1.keySet();
        java.util.Set set5 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set8 = defaultedMap7.keySet();
        java.lang.Object obj10 = defaultedMap7.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        java.lang.Object obj16 = defaultedMap12.remove((java.lang.Object) 'a');
        defaultedMap7.putAll((java.util.Map) defaultedMap12);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap7, predicate18, predicate19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) "");
        boolean b23 = defaultedMap7.containsKey((java.lang.Object) defaultedMap22);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) b23);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        java.util.Collection collection14 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        boolean b19 = defaultedMap16.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection20 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) collection20);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap12.containsValue((java.lang.Object) defaultedMap21);
        boolean b24 = defaultedMap12.isEmpty();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap12);
        boolean b26 = defaultedMap25.isEmpty();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) defaultedMap25);
        java.util.Set set28 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.Factory factory30 = null;
        try {
            java.util.Map map31 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertNotNull(collection14);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(set28);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap12);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) (byte) 100);
        java.lang.Object obj30 = defaultedMap12.put((java.lang.Object) (byte) 100, (java.lang.Object) "");
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj34 = defaultedMap32.remove((java.lang.Object) (byte) 100);
        int i35 = defaultedMap32.size();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = defaultedMap37.remove((java.lang.Object) 1.0f);
        java.lang.Object obj41 = defaultedMap37.remove((java.lang.Object) 'a');
        java.lang.Object obj42 = defaultedMap32.get((java.lang.Object) defaultedMap37);
        defaultedMap12.putAll((java.util.Map) defaultedMap32);
        java.util.Set set44 = defaultedMap32.keySet();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + 0 + "'", obj42.equals(0));
        org.junit.Assert.assertNotNull(set44);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        java.util.Set set30 = defaultedMap24.keySet();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = defaultedMap32.remove((java.lang.Object) 1.0f);
        defaultedMap32.clear();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = defaultedMap37.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = null;
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) 1, obj43);
        boolean b46 = defaultedMap41.containsKey((java.lang.Object) 1);
        defaultedMap41.clear();
        java.lang.Object obj48 = defaultedMap32.put((java.lang.Object) defaultedMap37, (java.lang.Object) defaultedMap41);
        java.lang.Object obj49 = null;
        boolean b50 = defaultedMap37.containsValue(obj49);
        java.util.Set set51 = defaultedMap37.entrySet();
        java.util.Collection collection52 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set55 = defaultedMap54.keySet();
        java.util.Collection collection56 = defaultedMap54.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set59 = defaultedMap58.keySet();
        boolean b61 = defaultedMap58.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        boolean b64 = defaultedMap63.isEmpty();
        boolean b65 = defaultedMap54.containsValue((java.lang.Object) defaultedMap63);
        int i66 = defaultedMap63.size();
        defaultedMap63.clear();
        java.lang.Object obj68 = defaultedMap37.get((java.lang.Object) defaultedMap63);
        defaultedMap24.putAll((java.util.Map) defaultedMap63);
        int i70 = defaultedMap24.size();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj74 = defaultedMap72.get((java.lang.Object) 0.0f);
        boolean b75 = defaultedMap72.isEmpty();
        int i76 = defaultedMap72.size();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap72);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) 100.0f);
        java.util.Set set80 = defaultedMap79.entrySet();
        java.lang.Object obj81 = defaultedMap24.put((java.lang.Object) defaultedMap72, (java.lang.Object) set80);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (byte) 0 + "'", obj74.equals((byte) 0));
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertNotNull(set80);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set8 = defaultedMap7.keySet();
        java.lang.Object obj10 = defaultedMap7.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        java.lang.Object obj16 = defaultedMap12.remove((java.lang.Object) 'a');
        defaultedMap7.putAll((java.util.Map) defaultedMap12);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap7, predicate18, predicate19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) collection26);
        boolean b28 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        defaultedMap30.clear();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = defaultedMap35.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        boolean b44 = defaultedMap39.containsKey((java.lang.Object) 1);
        defaultedMap39.clear();
        java.lang.Object obj46 = defaultedMap30.put((java.lang.Object) defaultedMap35, (java.lang.Object) defaultedMap39);
        collections.Predicate predicate47 = null;
        collections.Predicate predicate48 = null;
        java.util.Map map49 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate47, predicate48);
        java.lang.Object obj50 = defaultedMap27.get((java.lang.Object) predicate47);
        java.util.Set set51 = defaultedMap27.entrySet();
        java.lang.Object obj52 = defaultedMap1.put((java.lang.Object) defaultedMap7, (java.lang.Object) defaultedMap27);
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap(obj52);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(map49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        java.util.Set set10 = defaultedMap6.keySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        java.lang.Object obj13 = defaultedMap1.get((java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = null;
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) 1, obj17);
        defaultedMap15.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        java.lang.Object obj38 = null;
        boolean b39 = defaultedMap26.containsValue(obj38);
        java.util.Set set40 = defaultedMap26.entrySet();
        defaultedMap15.putAll((java.util.Map) defaultedMap26);
        java.lang.Object obj42 = defaultedMap1.remove((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) 1, obj46);
        boolean b49 = defaultedMap44.containsKey((java.lang.Object) 1);
        int i50 = defaultedMap44.size();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set53 = defaultedMap52.keySet();
        boolean b55 = defaultedMap52.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection56 = defaultedMap52.values();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) collection56);
        boolean b58 = defaultedMap57.isEmpty();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = defaultedMap60.remove((java.lang.Object) 1.0f);
        defaultedMap60.clear();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj67 = defaultedMap65.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj71 = null;
        java.lang.Object obj72 = defaultedMap69.put((java.lang.Object) 1, obj71);
        boolean b74 = defaultedMap69.containsKey((java.lang.Object) 1);
        defaultedMap69.clear();
        java.lang.Object obj76 = defaultedMap60.put((java.lang.Object) defaultedMap65, (java.lang.Object) defaultedMap69);
        collections.Predicate predicate77 = null;
        collections.Predicate predicate78 = null;
        java.util.Map map79 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap60, predicate77, predicate78);
        java.lang.Object obj80 = defaultedMap57.get((java.lang.Object) predicate77);
        collections.map.DefaultedMap defaultedMap82 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj84 = null;
        java.lang.Object obj85 = defaultedMap82.put((java.lang.Object) 1, obj84);
        java.util.Set set86 = defaultedMap82.keySet();
        boolean b87 = defaultedMap57.containsValue((java.lang.Object) set86);
        collections.map.DefaultedMap defaultedMap89 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection90 = defaultedMap89.values();
        java.lang.Object obj91 = defaultedMap44.put((java.lang.Object) b87, (java.lang.Object) defaultedMap89);
        collections.map.DefaultedMap defaultedMap92 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap89);
        java.lang.Object obj93 = defaultedMap1.remove((java.lang.Object) defaultedMap89);
        java.util.Collection collection94 = defaultedMap89.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (byte) 0 + "'", obj13.equals((byte) 0));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 1);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(map79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(set86);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertNotNull(collection90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(collection94);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        boolean b18 = defaultedMap1.containsValue((java.lang.Object) 0.0f);
        java.util.Set set19 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap21.keySet();
        boolean b24 = defaultedMap21.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection25 = defaultedMap21.values();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) collection25);
        boolean b27 = defaultedMap26.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.remove((java.lang.Object) 1.0f);
        defaultedMap29.clear();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = null;
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) 1, obj40);
        boolean b43 = defaultedMap38.containsKey((java.lang.Object) 1);
        defaultedMap38.clear();
        java.lang.Object obj45 = defaultedMap29.put((java.lang.Object) defaultedMap34, (java.lang.Object) defaultedMap38);
        collections.Predicate predicate46 = null;
        collections.Predicate predicate47 = null;
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap29, predicate46, predicate47);
        java.lang.Object obj49 = defaultedMap26.get((java.lang.Object) predicate46);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = null;
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) 1, obj53);
        java.util.Set set55 = defaultedMap51.keySet();
        boolean b56 = defaultedMap26.containsValue((java.lang.Object) set55);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.remove((java.lang.Object) 1.0f);
        defaultedMap58.clear();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj65 = defaultedMap63.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = defaultedMap67.put((java.lang.Object) 1, obj69);
        boolean b72 = defaultedMap67.containsKey((java.lang.Object) 1);
        defaultedMap67.clear();
        java.lang.Object obj74 = defaultedMap58.put((java.lang.Object) defaultedMap63, (java.lang.Object) defaultedMap67);
        java.lang.Object obj75 = null;
        boolean b76 = defaultedMap63.containsValue(obj75);
        java.util.Set set77 = defaultedMap63.entrySet();
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection80 = defaultedMap79.values();
        boolean b81 = defaultedMap63.containsValue((java.lang.Object) collection80);
        boolean b82 = defaultedMap26.containsValue((java.lang.Object) b81);
        boolean b83 = defaultedMap1.containsKey((java.lang.Object) b82);
        collections.map.DefaultedMap defaultedMap84 = new collections.map.DefaultedMap((java.lang.Object) b83);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertNotNull(set77);
        org.junit.Assert.assertNotNull(collection80);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertTrue(b83 == false);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        java.util.Set set9 = defaultedMap8.entrySet();
        collections.Predicate predicate10 = null;
        collections.Predicate predicate11 = null;
        java.util.Map map12 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap8, predicate10, predicate11);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(map12);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b3 = defaultedMap1.isEmpty();
        int i4 = defaultedMap1.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(i4 == 0);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        java.util.Collection collection13 = defaultedMap1.values();
        java.lang.String str14 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "{}" + "'", str14.equals("{}"));
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        java.util.Collection collection13 = defaultedMap1.values();
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap16);
        java.util.Set set22 = defaultedMap16.keySet();
        boolean b23 = defaultedMap1.containsValue((java.lang.Object) set22);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b23 == false);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b6 = defaultedMap5.isEmpty();
        java.util.Set set7 = defaultedMap5.entrySet();
        boolean b8 = defaultedMap1.containsValue((java.lang.Object) set7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        boolean b22 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        boolean b24 = defaultedMap23.isEmpty();
        java.util.Collection collection25 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        defaultedMap23.putAll((java.util.Map) defaultedMap27);
        java.util.Collection collection31 = defaultedMap23.values();
        java.util.Map map32 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) collection31);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) collection31);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = null;
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) 1, obj38);
        java.util.Set set40 = defaultedMap36.keySet();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) set40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        java.util.Collection collection45 = defaultedMap43.values();
        defaultedMap41.putAll((java.util.Map) defaultedMap43);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set49 = defaultedMap48.keySet();
        java.util.Collection collection50 = defaultedMap48.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set53 = defaultedMap52.keySet();
        boolean b55 = defaultedMap52.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection56 = defaultedMap52.values();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) collection56);
        boolean b58 = defaultedMap57.isEmpty();
        boolean b59 = defaultedMap48.containsValue((java.lang.Object) defaultedMap57);
        boolean b60 = defaultedMap48.isEmpty();
        java.util.Map map61 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap43, (java.lang.Object) b60);
        java.lang.Object obj62 = defaultedMap33.put((java.lang.Object) "{1=null}", (java.lang.Object) defaultedMap43);
        java.util.Set set63 = defaultedMap33.keySet();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(map32);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(map61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(set63);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) b4);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap7.isEmpty();
        boolean b9 = defaultedMap7.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) (byte) 100);
        int i27 = defaultedMap24.size();
        java.lang.Object obj28 = defaultedMap16.remove((java.lang.Object) defaultedMap24);
        boolean b29 = defaultedMap11.containsKey((java.lang.Object) defaultedMap16);
        java.lang.Object obj30 = defaultedMap7.remove((java.lang.Object) defaultedMap11);
        defaultedMap7.clear();
        java.util.Set set32 = defaultedMap7.entrySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = null;
        boolean b52 = defaultedMap39.containsValue(obj51);
        java.util.Set set53 = defaultedMap39.entrySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection56 = defaultedMap55.values();
        boolean b57 = defaultedMap39.containsValue((java.lang.Object) collection56);
        defaultedMap7.putAll((java.util.Map) defaultedMap39);
        java.util.Map map59 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap5, (java.lang.Object) defaultedMap39);
        java.util.Set set60 = defaultedMap5.entrySet();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj64 = null;
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) 1, obj64);
        defaultedMap62.clear();
        java.util.Set set67 = defaultedMap62.entrySet();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection70 = defaultedMap69.values();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap69);
        boolean b72 = defaultedMap62.containsKey((java.lang.Object) defaultedMap69);
        collections.Predicate predicate73 = null;
        collections.Predicate predicate74 = null;
        java.util.Map map75 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap69, predicate73, predicate74);
        java.lang.Object obj76 = defaultedMap5.remove((java.lang.Object) map75);
        boolean b77 = defaultedMap5.isEmpty();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(map75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue(b77 == true);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.util.Set set4 = defaultedMap1.keySet();
        collections.Predicate predicate5 = null;
        collections.Predicate predicate6 = null;
        java.util.Map map7 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate5, predicate6);
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        java.lang.String str13 = defaultedMap9.toString();
        java.util.Set set14 = defaultedMap9.entrySet();
        java.lang.Object obj15 = defaultedMap1.get((java.lang.Object) set14);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertNotNull(map7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte) 0 + "'", obj15.equals((byte) 0));
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        boolean b15 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.get((java.lang.Object) 0.0f);
        boolean b20 = defaultedMap17.isEmpty();
        java.lang.Object obj23 = defaultedMap17.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap17);
        java.util.Set set25 = defaultedMap17.entrySet();
        boolean b26 = defaultedMap1.equals((java.lang.Object) defaultedMap17);
        java.util.Set set27 = defaultedMap17.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(set27);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.Factory factory6 = null;
        try {
            java.util.Map map7 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        java.util.Set set10 = defaultedMap6.keySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        java.lang.Object obj25 = new java.lang.Object();
        boolean b26 = defaultedMap22.containsValue(obj25);
        defaultedMap1.putAll((java.util.Map) defaultedMap22);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set30 = defaultedMap29.keySet();
        boolean b32 = defaultedMap29.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection33 = defaultedMap29.values();
        java.lang.String str34 = defaultedMap29.toString();
        collections.Predicate predicate35 = null;
        collections.Predicate predicate36 = null;
        java.util.Map map37 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap29, predicate35, predicate36);
        java.util.Collection collection38 = defaultedMap29.values();
        java.util.Map map39 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) collection38);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(collection33);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "{}" + "'", str34.equals("{}"));
        org.junit.Assert.assertNotNull(map37);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNotNull(map39);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap14.putAll((java.util.Map) defaultedMap18);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set24 = defaultedMap23.keySet();
        boolean b26 = defaultedMap23.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection27 = defaultedMap23.values();
        java.lang.String str28 = defaultedMap23.toString();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.get((java.lang.Object) 0.0f);
        boolean b33 = defaultedMap30.isEmpty();
        java.lang.Object obj36 = defaultedMap30.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap30);
        boolean b38 = defaultedMap23.equals((java.lang.Object) defaultedMap37);
        defaultedMap37.clear();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection45 = defaultedMap41.values();
        java.lang.String str46 = defaultedMap41.toString();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set49 = defaultedMap48.keySet();
        boolean b51 = defaultedMap48.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection52 = defaultedMap48.values();
        java.lang.String str53 = defaultedMap48.toString();
        collections.Predicate predicate54 = null;
        collections.Predicate predicate55 = null;
        java.util.Map map56 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate54, predicate55);
        java.lang.Object obj57 = defaultedMap37.put((java.lang.Object) defaultedMap41, (java.lang.Object) map56);
        defaultedMap14.putAll(map56);
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap14);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(collection27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "{}" + "'", str28.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "{}" + "'", str46.equals("{}"));
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "{}" + "'", str53.equals("{}"));
        org.junit.Assert.assertNotNull(map56);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        int i6 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        boolean b11 = defaultedMap8.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection12 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) collection12);
        boolean b14 = defaultedMap13.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.remove((java.lang.Object) 1.0f);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) 1, obj27);
        boolean b30 = defaultedMap25.containsKey((java.lang.Object) 1);
        defaultedMap25.clear();
        java.lang.Object obj32 = defaultedMap16.put((java.lang.Object) defaultedMap21, (java.lang.Object) defaultedMap25);
        collections.Predicate predicate33 = null;
        collections.Predicate predicate34 = null;
        java.util.Map map35 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap16, predicate33, predicate34);
        java.lang.Object obj36 = defaultedMap13.get((java.lang.Object) predicate33);
        boolean b37 = defaultedMap13.isEmpty();
        collections.Predicate predicate38 = null;
        collections.Predicate predicate39 = null;
        java.util.Map map40 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap13, predicate38, predicate39);
        java.lang.Object obj41 = defaultedMap1.get((java.lang.Object) predicate38);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj45 = defaultedMap43.remove((java.lang.Object) (byte) 100);
        int i46 = defaultedMap43.size();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = defaultedMap48.remove((java.lang.Object) 1.0f);
        java.lang.Object obj52 = defaultedMap48.remove((java.lang.Object) 'a');
        java.lang.Object obj53 = defaultedMap43.get((java.lang.Object) defaultedMap48);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap55.keySet();
        boolean b58 = defaultedMap55.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection59 = defaultedMap55.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) collection59);
        int i61 = defaultedMap60.size();
        collections.Predicate predicate62 = null;
        collections.Predicate predicate63 = null;
        java.util.Map map64 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap60, predicate62, predicate63);
        java.lang.Object obj65 = defaultedMap48.get((java.lang.Object) defaultedMap60);
        boolean b66 = defaultedMap1.containsValue((java.lang.Object) defaultedMap48);
        collections.Predicate predicate67 = null;
        collections.Predicate predicate68 = null;
        java.util.Map map69 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate67, predicate68);
        collections.Factory factory70 = null;
        try {
            java.util.Map map71 = collections.map.DefaultedMap.decorate(map69, factory70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(map35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(map40);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + 0 + "'", obj53.equals(0));
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertNotNull(map64);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (byte) 0 + "'", obj65.equals((byte) 0));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertNotNull(map69);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        java.util.Set set7 = defaultedMap6.entrySet();
        int i8 = defaultedMap6.size();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        java.util.Set set14 = defaultedMap10.keySet();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) set14);
        java.util.Set set16 = defaultedMap15.entrySet();
        int i17 = defaultedMap15.size();
        defaultedMap15.clear();
        java.lang.Object obj19 = defaultedMap6.get((java.lang.Object) defaultedMap15);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertTrue(i17 == 0);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        java.util.Set set7 = defaultedMap6.entrySet();
        int i8 = defaultedMap6.size();
        int i9 = defaultedMap6.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        boolean b7 = defaultedMap1.equals((java.lang.Object) (byte) 0);
        java.lang.String str8 = defaultedMap1.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "{}" + "'", str8.equals("{}"));
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.get((java.lang.Object) 0.0f);
        boolean b11 = defaultedMap8.isEmpty();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b14 = defaultedMap13.isEmpty();
        boolean b15 = defaultedMap13.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        boolean b21 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Map map22 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) defaultedMap13);
        java.lang.Object obj23 = defaultedMap6.remove((java.lang.Object) defaultedMap8);
        collections.Transformer transformer24 = null;
        try {
            java.util.Map map25 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, transformer24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        java.util.Map map0 = null;
        collections.Transformer transformer1 = null;
        try {
            java.util.Map map2 = collections.map.DefaultedMap.decorate(map0, transformer1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap12.remove(obj25);
        java.util.Collection collection27 = defaultedMap12.values();
        boolean b28 = defaultedMap12.isEmpty();
        defaultedMap12.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(collection27);
        org.junit.Assert.assertTrue(b28 == true);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        java.util.Set set30 = defaultedMap24.keySet();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = defaultedMap32.remove((java.lang.Object) 1.0f);
        defaultedMap32.clear();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = defaultedMap37.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = null;
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) 1, obj43);
        boolean b46 = defaultedMap41.containsKey((java.lang.Object) 1);
        defaultedMap41.clear();
        java.lang.Object obj48 = defaultedMap32.put((java.lang.Object) defaultedMap37, (java.lang.Object) defaultedMap41);
        java.lang.Object obj49 = null;
        boolean b50 = defaultedMap37.containsValue(obj49);
        java.util.Set set51 = defaultedMap37.entrySet();
        java.util.Collection collection52 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set55 = defaultedMap54.keySet();
        java.util.Collection collection56 = defaultedMap54.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set59 = defaultedMap58.keySet();
        boolean b61 = defaultedMap58.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        boolean b64 = defaultedMap63.isEmpty();
        boolean b65 = defaultedMap54.containsValue((java.lang.Object) defaultedMap63);
        int i66 = defaultedMap63.size();
        defaultedMap63.clear();
        java.lang.Object obj68 = defaultedMap37.get((java.lang.Object) defaultedMap63);
        defaultedMap24.putAll((java.util.Map) defaultedMap63);
        int i70 = defaultedMap24.size();
        java.util.Collection collection71 = defaultedMap24.values();
        collections.Predicate predicate72 = null;
        collections.Predicate predicate73 = null;
        java.util.Map map74 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap24, predicate72, predicate73);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertNotNull(collection71);
        org.junit.Assert.assertNotNull(map74);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.util.Set set4 = defaultedMap1.keySet();
        int i5 = defaultedMap1.size();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        boolean b11 = defaultedMap8.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection12 = defaultedMap8.values();
        java.lang.String str13 = defaultedMap8.toString();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b16 = defaultedMap15.isEmpty();
        boolean b17 = defaultedMap15.isEmpty();
        java.lang.Object obj19 = defaultedMap15.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        java.lang.Object obj38 = defaultedMap15.get((java.lang.Object) defaultedMap26);
        java.lang.Object obj40 = defaultedMap26.get((java.lang.Object) 100L);
        java.lang.Object obj41 = defaultedMap8.remove((java.lang.Object) defaultedMap26);
        boolean b42 = defaultedMap8.isEmpty();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set45 = defaultedMap44.keySet();
        boolean b47 = defaultedMap44.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection48 = defaultedMap44.values();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) collection48);
        boolean b50 = defaultedMap49.isEmpty();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = defaultedMap52.remove((java.lang.Object) 1.0f);
        defaultedMap52.clear();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = defaultedMap57.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = null;
        java.lang.Object obj64 = defaultedMap61.put((java.lang.Object) 1, obj63);
        boolean b66 = defaultedMap61.containsKey((java.lang.Object) 1);
        defaultedMap61.clear();
        java.lang.Object obj68 = defaultedMap52.put((java.lang.Object) defaultedMap57, (java.lang.Object) defaultedMap61);
        collections.Predicate predicate69 = null;
        collections.Predicate predicate70 = null;
        java.util.Map map71 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap52, predicate69, predicate70);
        java.lang.Object obj72 = defaultedMap49.get((java.lang.Object) predicate69);
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj76 = null;
        java.lang.Object obj77 = defaultedMap74.put((java.lang.Object) 1, obj76);
        java.util.Set set78 = defaultedMap74.keySet();
        boolean b79 = defaultedMap49.containsValue((java.lang.Object) set78);
        boolean b80 = defaultedMap8.equals((java.lang.Object) defaultedMap49);
        defaultedMap49.clear();
        boolean b82 = defaultedMap1.containsKey((java.lang.Object) defaultedMap49);
        java.util.Set set83 = defaultedMap49.entrySet();
        collections.map.DefaultedMap defaultedMap85 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj87 = defaultedMap85.get((java.lang.Object) 0.0f);
        boolean b88 = defaultedMap85.isEmpty();
        int i89 = defaultedMap85.size();
        collections.map.DefaultedMap defaultedMap90 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap85);
        java.util.Set set91 = defaultedMap85.keySet();
        java.lang.Object obj92 = defaultedMap49.get((java.lang.Object) set91);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte) 0 + "'", obj38.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (byte) 0 + "'", obj40.equals((byte) 0));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNotNull(collection48);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(map71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(set78);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNotNull(set83);
        org.junit.Assert.assertTrue("'" + obj87 + "' != '" + (byte) 0 + "'", obj87.equals((byte) 0));
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertNotNull(set91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        java.util.Set set9 = defaultedMap8.entrySet();
        java.util.Collection collection10 = defaultedMap8.values();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        java.util.Collection collection45 = defaultedMap43.values();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap47.keySet();
        boolean b50 = defaultedMap47.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection51 = defaultedMap47.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) collection51);
        boolean b53 = defaultedMap52.isEmpty();
        boolean b54 = defaultedMap43.containsValue((java.lang.Object) defaultedMap52);
        boolean b55 = defaultedMap43.isEmpty();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap43);
        boolean b57 = defaultedMap56.isEmpty();
        java.util.Collection collection58 = defaultedMap56.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = defaultedMap60.remove((java.lang.Object) 1.0f);
        defaultedMap56.putAll((java.util.Map) defaultedMap60);
        java.util.Collection collection64 = defaultedMap56.values();
        java.util.Map map65 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, (java.lang.Object) collection64);
        java.lang.String str66 = defaultedMap6.toString();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(collection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertNotNull(map65);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "{{}=-1}" + "'", str66.equals("{{}=-1}"));
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        java.util.Set set8 = defaultedMap6.keySet();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        int i22 = defaultedMap19.size();
        java.util.Set set23 = defaultedMap19.keySet();
        defaultedMap6.putAll((java.util.Map) defaultedMap19);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection30 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) collection30);
        int i32 = defaultedMap31.size();
        collections.Predicate predicate33 = null;
        collections.Predicate predicate34 = null;
        java.util.Map map35 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap31, predicate33, predicate34);
        collections.Predicate predicate36 = null;
        collections.Predicate predicate37 = null;
        java.util.Map map38 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap31, predicate36, predicate37);
        defaultedMap19.putAll((java.util.Map) defaultedMap31);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = defaultedMap41.remove((java.lang.Object) 1.0f);
        defaultedMap41.clear();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj48 = defaultedMap46.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) 1, obj52);
        boolean b55 = defaultedMap50.containsKey((java.lang.Object) 1);
        defaultedMap50.clear();
        java.lang.Object obj57 = defaultedMap41.put((java.lang.Object) defaultedMap46, (java.lang.Object) defaultedMap50);
        java.lang.Object obj58 = defaultedMap31.remove(obj57);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertNotNull(map35);
        org.junit.Assert.assertNotNull(map38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        java.util.Set set10 = defaultedMap6.keySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        java.lang.Object obj13 = defaultedMap1.get((java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = null;
        java.lang.Object obj18 = defaultedMap15.put((java.lang.Object) 1, obj17);
        defaultedMap15.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        java.lang.Object obj38 = null;
        boolean b39 = defaultedMap26.containsValue(obj38);
        java.util.Set set40 = defaultedMap26.entrySet();
        defaultedMap15.putAll((java.util.Map) defaultedMap26);
        java.lang.Object obj42 = defaultedMap1.remove((java.lang.Object) defaultedMap15);
        collections.Transformer transformer43 = null;
        try {
            java.util.Map map44 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, transformer43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (byte) 0 + "'", obj13.equals((byte) 0));
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set5 = defaultedMap4.keySet();
        boolean b7 = defaultedMap4.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection8 = defaultedMap4.values();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) collection8);
        boolean b10 = defaultedMap9.isEmpty();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap9);
        boolean b12 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertTrue(b12 == true);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        boolean b8 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        boolean b14 = defaultedMap6.containsKey((java.lang.Object) 0.0f);
        java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap6);
        java.util.Collection collection16 = defaultedMap6.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection19 = defaultedMap18.values();
        boolean b20 = defaultedMap6.equals((java.lang.Object) defaultedMap18);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b27 = defaultedMap26.isEmpty();
        java.util.Set set28 = defaultedMap26.entrySet();
        boolean b29 = defaultedMap22.containsValue((java.lang.Object) set28);
        java.lang.Object obj30 = defaultedMap18.get((java.lang.Object) b29);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(map15);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (byte) 0 + "'", obj30.equals((byte) 0));
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        boolean b8 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        boolean b14 = defaultedMap6.containsKey((java.lang.Object) 0.0f);
        java.util.Map map15 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap6);
        java.lang.String str16 = defaultedMap6.toString();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(map15);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "{}" + "'", str16.equals("{}"));
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set4 = defaultedMap3.keySet();
        java.util.Collection collection5 = defaultedMap3.values();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set8 = defaultedMap7.keySet();
        boolean b10 = defaultedMap7.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection11 = defaultedMap7.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) collection11);
        boolean b13 = defaultedMap12.isEmpty();
        boolean b14 = defaultedMap3.containsValue((java.lang.Object) defaultedMap12);
        boolean b15 = defaultedMap3.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap3);
        boolean b17 = defaultedMap16.isEmpty();
        java.util.Collection collection18 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj22 = defaultedMap20.remove((java.lang.Object) 1.0f);
        defaultedMap16.putAll((java.util.Map) defaultedMap20);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap16);
        defaultedMap24.clear();
        defaultedMap1.putAll((java.util.Map) defaultedMap24);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        java.util.Set set24 = defaultedMap22.keySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        java.util.Collection collection28 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap30.keySet();
        boolean b33 = defaultedMap30.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection34 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) collection34);
        boolean b36 = defaultedMap35.isEmpty();
        boolean b37 = defaultedMap26.containsValue((java.lang.Object) defaultedMap35);
        int i38 = defaultedMap35.size();
        java.util.Set set39 = defaultedMap35.keySet();
        defaultedMap22.putAll((java.util.Map) defaultedMap35);
        java.lang.Object obj41 = defaultedMap1.get((java.lang.Object) defaultedMap22);
        java.util.Set set42 = defaultedMap22.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(collection34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNotNull(set42);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj11 = defaultedMap1.put((java.lang.Object) collection9, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        java.util.Set set29 = defaultedMap24.keySet();
        java.util.Set set30 = defaultedMap24.entrySet();
        java.lang.Object obj31 = defaultedMap1.put((java.lang.Object) predicate21, (java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        java.lang.Object obj37 = defaultedMap33.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        java.lang.Object obj43 = defaultedMap39.remove((java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap33.get((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set47 = defaultedMap46.keySet();
        boolean b49 = defaultedMap46.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection50 = defaultedMap46.values();
        collections.Predicate predicate51 = null;
        collections.Predicate predicate52 = null;
        java.util.Map map53 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap46, predicate51, predicate52);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = defaultedMap55.remove((java.lang.Object) 1.0f);
        defaultedMap55.clear();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = defaultedMap60.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = null;
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) 1, obj66);
        boolean b69 = defaultedMap64.containsKey((java.lang.Object) 1);
        defaultedMap64.clear();
        java.lang.Object obj71 = defaultedMap55.put((java.lang.Object) defaultedMap60, (java.lang.Object) defaultedMap64);
        java.lang.Object obj72 = null;
        boolean b73 = defaultedMap60.containsValue(obj72);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b76 = defaultedMap75.isEmpty();
        boolean b77 = defaultedMap75.isEmpty();
        boolean b79 = defaultedMap75.equals((java.lang.Object) 10);
        java.lang.Object obj80 = defaultedMap60.get((java.lang.Object) b79);
        java.util.Map map81 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap46, (java.lang.Object) defaultedMap60);
        boolean b82 = defaultedMap46.isEmpty();
        boolean b83 = defaultedMap33.containsValue((java.lang.Object) b82);
        boolean b84 = defaultedMap1.containsValue((java.lang.Object) b82);
        collections.Predicate predicate85 = null;
        collections.Predicate predicate86 = null;
        java.util.Map map87 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate85, predicate86);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte) 0 + "'", obj44.equals((byte) 0));
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertNotNull(map53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (byte) 0 + "'", obj80.equals((byte) 0));
        org.junit.Assert.assertNotNull(map81);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertNotNull(map87);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.get((java.lang.Object) 0.0f);
        boolean b11 = defaultedMap8.isEmpty();
        java.lang.Object obj14 = defaultedMap8.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b16 = defaultedMap1.equals((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.get((java.lang.Object) 0.0f);
        boolean b21 = defaultedMap18.isEmpty();
        int i22 = defaultedMap18.size();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap18);
        java.util.Set set24 = defaultedMap18.keySet();
        boolean b25 = defaultedMap15.containsValue((java.lang.Object) set24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection28 = defaultedMap27.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) collection28);
        boolean b30 = defaultedMap15.containsValue((java.lang.Object) defaultedMap29);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = defaultedMap32.remove((java.lang.Object) 1.0f);
        java.lang.Object obj36 = defaultedMap32.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = defaultedMap38.remove((java.lang.Object) 1.0f);
        java.lang.Object obj42 = defaultedMap38.remove((java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap32.get((java.lang.Object) 'a');
        defaultedMap32.clear();
        boolean b45 = defaultedMap32.isEmpty();
        defaultedMap32.clear();
        defaultedMap32.clear();
        boolean b48 = defaultedMap15.containsValue((java.lang.Object) defaultedMap32);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set51 = defaultedMap50.keySet();
        java.lang.Object obj53 = defaultedMap50.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = defaultedMap55.remove((java.lang.Object) 1.0f);
        java.lang.Object obj59 = defaultedMap55.remove((java.lang.Object) 'a');
        defaultedMap50.putAll((java.util.Map) defaultedMap55);
        collections.Predicate predicate61 = null;
        collections.Predicate predicate62 = null;
        java.util.Map map63 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap50, predicate61, predicate62);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.String str66 = defaultedMap65.toString();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj70 = defaultedMap68.remove((java.lang.Object) 1.0f);
        defaultedMap68.clear();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj75 = defaultedMap73.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj79 = null;
        java.lang.Object obj80 = defaultedMap77.put((java.lang.Object) 1, obj79);
        boolean b82 = defaultedMap77.containsKey((java.lang.Object) 1);
        defaultedMap77.clear();
        java.lang.Object obj84 = defaultedMap68.put((java.lang.Object) defaultedMap73, (java.lang.Object) defaultedMap77);
        collections.Predicate predicate85 = null;
        collections.Predicate predicate86 = null;
        java.util.Map map87 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap68, predicate85, predicate86);
        collections.Predicate predicate88 = null;
        collections.Predicate predicate89 = null;
        java.util.Map map90 = collections.map.PredicatedMap.decorate(map87, predicate88, predicate89);
        boolean b91 = defaultedMap65.containsKey((java.lang.Object) map87);
        boolean b92 = defaultedMap50.containsValue((java.lang.Object) map87);
        defaultedMap32.putAll(map87);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (byte) 0 + "'", obj20.equals((byte) 0));
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 0 + "'", obj43.equals((byte) 0));
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(map63);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "{}" + "'", str66.equals("{}"));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(map87);
        org.junit.Assert.assertNotNull(map90);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(b92 == false);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        java.lang.String str22 = defaultedMap17.toString();
        collections.Predicate predicate23 = null;
        collections.Predicate predicate24 = null;
        java.util.Map map25 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate23, predicate24);
        boolean b26 = defaultedMap1.containsValue((java.lang.Object) defaultedMap17);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = defaultedMap28.remove((java.lang.Object) 1.0f);
        defaultedMap17.putAll((java.util.Map) defaultedMap28);
        collections.Factory factory32 = null;
        try {
            java.util.Map map33 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap17, factory32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{}" + "'", str22.equals("{}"));
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        collections.Transformer transformer13 = null;
        try {
            java.util.Map map14 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        boolean b18 = defaultedMap1.containsValue((java.lang.Object) 0.0f);
        int i19 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i19 == 0);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        java.lang.Object obj38 = null;
        boolean b39 = defaultedMap26.containsValue(obj38);
        java.util.Set set40 = defaultedMap26.entrySet();
        java.lang.Object obj41 = defaultedMap19.remove((java.lang.Object) set40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b44 = defaultedMap43.isEmpty();
        boolean b45 = defaultedMap43.isEmpty();
        java.lang.Object obj46 = defaultedMap10.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap43);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b49 = defaultedMap48.isEmpty();
        java.util.Map map50 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap43, (java.lang.Object) b49);
        java.util.Collection collection51 = defaultedMap43.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertNotNull(collection51);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap14.putAll((java.util.Map) defaultedMap18);
        boolean b22 = defaultedMap18.isEmpty();
        java.lang.String str23 = defaultedMap18.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{}" + "'", str23.equals("{}"));
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        java.util.Set set3 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) 0);
        boolean b6 = defaultedMap1.equals((java.lang.Object) 0);
        java.lang.String str7 = defaultedMap1.toString();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertNotNull(set3);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{}" + "'", str7.equals("{}"));
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap12);
        boolean b25 = defaultedMap1.isEmpty();
        java.util.Collection collection26 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = null;
        java.lang.Object obj31 = defaultedMap28.put((java.lang.Object) 1, obj30);
        defaultedMap28.clear();
        java.util.Set set33 = defaultedMap28.entrySet();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection36 = defaultedMap35.values();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap35);
        boolean b38 = defaultedMap28.containsKey((java.lang.Object) defaultedMap35);
        java.lang.Object obj40 = defaultedMap35.remove((java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b43 = defaultedMap42.isEmpty();
        boolean b44 = defaultedMap42.isEmpty();
        java.lang.Object obj46 = defaultedMap42.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set49 = defaultedMap48.keySet();
        java.lang.Object obj51 = defaultedMap48.get((java.lang.Object) 10L);
        collections.Predicate predicate52 = null;
        collections.Predicate predicate53 = null;
        java.util.Map map54 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap48, predicate52, predicate53);
        java.lang.Object obj55 = defaultedMap42.get((java.lang.Object) predicate52);
        defaultedMap35.putAll((java.util.Map) defaultedMap42);
        java.util.Map map57 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap42);
        int i58 = defaultedMap42.size();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNotNull(collection36);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (byte) 0 + "'", obj46.equals((byte) 0));
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (byte) 0 + "'", obj51.equals((byte) 0));
        org.junit.Assert.assertNotNull(map54);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (byte) 0 + "'", obj55.equals((byte) 0));
        org.junit.Assert.assertNotNull(map57);
        org.junit.Assert.assertTrue(i58 == 0);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        java.util.Collection collection14 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        boolean b19 = defaultedMap16.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection20 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) collection20);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap12.containsValue((java.lang.Object) defaultedMap21);
        boolean b24 = defaultedMap12.isEmpty();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap12);
        boolean b26 = defaultedMap25.isEmpty();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) defaultedMap25);
        java.util.Set set28 = defaultedMap1.keySet();
        defaultedMap1.clear();
        collections.Transformer transformer30 = null;
        try {
            java.util.Map map31 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertNotNull(collection14);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(set28);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap14.putAll((java.util.Map) defaultedMap18);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap14);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = defaultedMap24.get((java.lang.Object) 0.0f);
        boolean b27 = defaultedMap24.isEmpty();
        java.util.Set set28 = defaultedMap24.entrySet();
        java.lang.Object obj29 = defaultedMap22.get((java.lang.Object) defaultedMap24);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.Predicate predicate5 = null;
        collections.Predicate predicate6 = null;
        java.util.Map map7 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate5, predicate6);
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        boolean b15 = defaultedMap9.equals((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.Predicate predicate22 = null;
        collections.Predicate predicate23 = null;
        java.util.Map map24 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate22, predicate23);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        defaultedMap26.clear();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = defaultedMap31.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = null;
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) 1, obj37);
        boolean b40 = defaultedMap35.containsKey((java.lang.Object) 1);
        defaultedMap35.clear();
        java.lang.Object obj42 = defaultedMap26.put((java.lang.Object) defaultedMap31, (java.lang.Object) defaultedMap35);
        java.lang.Object obj43 = null;
        boolean b44 = defaultedMap31.containsValue(obj43);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b47 = defaultedMap46.isEmpty();
        boolean b48 = defaultedMap46.isEmpty();
        boolean b50 = defaultedMap46.equals((java.lang.Object) 10);
        java.lang.Object obj51 = defaultedMap31.get((java.lang.Object) b50);
        java.util.Map map52 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap17, (java.lang.Object) defaultedMap31);
        collections.Predicate predicate53 = null;
        collections.Predicate predicate54 = null;
        java.util.Map map55 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate53, predicate54);
        defaultedMap17.clear();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.remove((java.lang.Object) 1.0f);
        java.lang.Object obj62 = defaultedMap58.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = defaultedMap64.remove((java.lang.Object) 1.0f);
        java.lang.Object obj68 = defaultedMap64.remove((java.lang.Object) 'a');
        java.lang.Object obj69 = defaultedMap58.get((java.lang.Object) 'a');
        java.lang.String str70 = defaultedMap58.toString();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set73 = defaultedMap72.keySet();
        java.util.Collection collection74 = defaultedMap72.values();
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set77 = defaultedMap76.keySet();
        boolean b79 = defaultedMap76.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection80 = defaultedMap76.values();
        collections.map.DefaultedMap defaultedMap81 = new collections.map.DefaultedMap((java.lang.Object) collection80);
        boolean b82 = defaultedMap81.isEmpty();
        boolean b83 = defaultedMap72.containsValue((java.lang.Object) defaultedMap81);
        boolean b84 = defaultedMap72.isEmpty();
        collections.map.DefaultedMap defaultedMap85 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap72);
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj90 = defaultedMap87.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap72.putAll((java.util.Map) defaultedMap87);
        java.lang.Object obj92 = defaultedMap58.get((java.lang.Object) defaultedMap72);
        boolean b93 = defaultedMap17.equals((java.lang.Object) defaultedMap72);
        java.util.Map map94 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, (java.lang.Object) defaultedMap72);
        collections.map.DefaultedMap defaultedMap95 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap9);
        boolean b96 = defaultedMap1.containsKey((java.lang.Object) defaultedMap9);
        java.lang.String str97 = defaultedMap9.toString();
        java.lang.String str98 = defaultedMap9.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNotNull(map7);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertNotNull(map24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (byte) 0 + "'", obj51.equals((byte) 0));
        org.junit.Assert.assertNotNull(map52);
        org.junit.Assert.assertNotNull(map55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + obj69 + "' != '" + (byte) 0 + "'", obj69.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "{}" + "'", str70.equals("{}"));
        org.junit.Assert.assertNotNull(set73);
        org.junit.Assert.assertNotNull(collection74);
        org.junit.Assert.assertNotNull(set77);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertNotNull(collection80);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + obj92 + "' != '" + (byte) 0 + "'", obj92.equals((byte) 0));
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertNotNull(map94);
        org.junit.Assert.assertTrue(b96 == false);
        org.junit.Assert.assertTrue("'" + str97 + "' != '" + "{}" + "'", str97.equals("{}"));
        org.junit.Assert.assertTrue("'" + str98 + "' != '" + "{}" + "'", str98.equals("{}"));
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj11 = defaultedMap1.put((java.lang.Object) collection9, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        java.util.Set set29 = defaultedMap24.keySet();
        java.util.Set set30 = defaultedMap24.entrySet();
        java.lang.Object obj31 = defaultedMap1.put((java.lang.Object) predicate21, (java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        java.lang.Object obj37 = defaultedMap33.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        java.lang.Object obj43 = defaultedMap39.remove((java.lang.Object) 'a');
        java.lang.Object obj44 = defaultedMap33.get((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set47 = defaultedMap46.keySet();
        boolean b49 = defaultedMap46.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection50 = defaultedMap46.values();
        collections.Predicate predicate51 = null;
        collections.Predicate predicate52 = null;
        java.util.Map map53 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap46, predicate51, predicate52);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = defaultedMap55.remove((java.lang.Object) 1.0f);
        defaultedMap55.clear();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = defaultedMap60.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = null;
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) 1, obj66);
        boolean b69 = defaultedMap64.containsKey((java.lang.Object) 1);
        defaultedMap64.clear();
        java.lang.Object obj71 = defaultedMap55.put((java.lang.Object) defaultedMap60, (java.lang.Object) defaultedMap64);
        java.lang.Object obj72 = null;
        boolean b73 = defaultedMap60.containsValue(obj72);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b76 = defaultedMap75.isEmpty();
        boolean b77 = defaultedMap75.isEmpty();
        boolean b79 = defaultedMap75.equals((java.lang.Object) 10);
        java.lang.Object obj80 = defaultedMap60.get((java.lang.Object) b79);
        java.util.Map map81 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap46, (java.lang.Object) defaultedMap60);
        boolean b82 = defaultedMap46.isEmpty();
        boolean b83 = defaultedMap33.containsValue((java.lang.Object) b82);
        boolean b84 = defaultedMap1.containsValue((java.lang.Object) b82);
        java.util.Set set85 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte) 0 + "'", obj44.equals((byte) 0));
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertNotNull(map53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (byte) 0 + "'", obj80.equals((byte) 0));
        org.junit.Assert.assertNotNull(map81);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertNotNull(set85);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.util.Set set5 = defaultedMap1.entrySet();
        collections.Factory factory6 = null;
        try {
            java.util.Map map7 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNotNull(set5);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        java.util.Set set13 = defaultedMap10.keySet();
        java.util.Collection collection14 = defaultedMap10.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertNotNull(collection14);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        boolean b37 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) b37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = null;
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) 1, obj42);
        java.util.Set set44 = defaultedMap40.keySet();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj48 = defaultedMap46.remove((java.lang.Object) 1.0f);
        defaultedMap46.clear();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = null;
        java.lang.Object obj58 = defaultedMap55.put((java.lang.Object) 1, obj57);
        boolean b60 = defaultedMap55.containsKey((java.lang.Object) 1);
        defaultedMap55.clear();
        java.lang.Object obj62 = defaultedMap46.put((java.lang.Object) defaultedMap51, (java.lang.Object) defaultedMap55);
        defaultedMap40.putAll((java.util.Map) defaultedMap51);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj67 = defaultedMap65.remove((java.lang.Object) (byte) 100);
        int i68 = defaultedMap65.size();
        boolean b69 = defaultedMap51.equals((java.lang.Object) i68);
        java.lang.String str70 = defaultedMap51.toString();
        boolean b71 = defaultedMap51.isEmpty();
        int i72 = defaultedMap51.size();
        java.lang.Object obj73 = defaultedMap38.get((java.lang.Object) i72);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "{}" + "'", str70.equals("{}"));
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + true + "'", obj73.equals(true));
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection2 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap3 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        java.util.Collection collection4 = defaultedMap1.values();
        org.junit.Assert.assertNotNull(collection2);
        org.junit.Assert.assertNotNull(collection4);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        java.util.Collection collection13 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        boolean b18 = defaultedMap15.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection19 = defaultedMap15.values();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap15, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) 1.0f);
        defaultedMap24.clear();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) 1, obj35);
        boolean b38 = defaultedMap33.containsKey((java.lang.Object) 1);
        defaultedMap33.clear();
        java.lang.Object obj40 = defaultedMap24.put((java.lang.Object) defaultedMap29, (java.lang.Object) defaultedMap33);
        java.lang.Object obj41 = null;
        boolean b42 = defaultedMap29.containsValue(obj41);
        java.util.Set set43 = defaultedMap29.entrySet();
        java.util.Collection collection44 = defaultedMap29.values();
        java.lang.Object obj45 = defaultedMap15.get((java.lang.Object) collection44);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b48 = defaultedMap47.isEmpty();
        boolean b49 = defaultedMap47.isEmpty();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj54 = defaultedMap51.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj58 = null;
        java.lang.Object obj59 = defaultedMap56.put((java.lang.Object) 1, obj58);
        boolean b61 = defaultedMap56.containsKey((java.lang.Object) 1);
        defaultedMap56.clear();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj66 = defaultedMap64.remove((java.lang.Object) (byte) 100);
        int i67 = defaultedMap64.size();
        java.lang.Object obj68 = defaultedMap56.remove((java.lang.Object) defaultedMap64);
        boolean b69 = defaultedMap51.containsKey((java.lang.Object) defaultedMap56);
        java.lang.Object obj70 = defaultedMap47.remove((java.lang.Object) defaultedMap51);
        defaultedMap47.clear();
        java.util.Set set72 = defaultedMap47.entrySet();
        java.util.Map map73 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, (java.lang.Object) defaultedMap47);
        boolean b74 = defaultedMap1.containsValue((java.lang.Object) defaultedMap15);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (byte) 0 + "'", obj45.equals((byte) 0));
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(set72);
        org.junit.Assert.assertNotNull(map73);
        org.junit.Assert.assertTrue(b74 == false);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj10 = null;
        boolean b11 = defaultedMap1.containsValue(obj10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        boolean b18 = defaultedMap13.containsKey((java.lang.Object) 1);
        java.lang.String str19 = defaultedMap13.toString();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap21.keySet();
        boolean b24 = defaultedMap21.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection25 = defaultedMap21.values();
        java.lang.String str26 = defaultedMap21.toString();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap28.isEmpty();
        java.lang.Object obj32 = defaultedMap28.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = defaultedMap28.get((java.lang.Object) defaultedMap39);
        java.lang.Object obj53 = defaultedMap39.get((java.lang.Object) 100L);
        java.lang.Object obj54 = defaultedMap21.remove((java.lang.Object) defaultedMap39);
        java.util.Map map55 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap13, obj54);
        boolean b56 = defaultedMap1.equals((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.remove((java.lang.Object) 1.0f);
        defaultedMap58.clear();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj65 = defaultedMap63.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = defaultedMap67.put((java.lang.Object) 1, obj69);
        boolean b72 = defaultedMap67.containsKey((java.lang.Object) 1);
        defaultedMap67.clear();
        java.lang.Object obj74 = defaultedMap58.put((java.lang.Object) defaultedMap63, (java.lang.Object) defaultedMap67);
        java.lang.Object obj75 = null;
        boolean b76 = defaultedMap63.containsValue(obj75);
        java.util.Set set77 = defaultedMap63.entrySet();
        java.util.Collection collection78 = defaultedMap63.values();
        int i79 = defaultedMap63.size();
        defaultedMap13.putAll((java.util.Map) defaultedMap63);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "{1=null}" + "'", str19.equals("{1=null}"));
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{}" + "'", str26.equals("{}"));
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (byte) 0 + "'", obj51.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(map55);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertNotNull(set77);
        org.junit.Assert.assertNotNull(collection78);
        org.junit.Assert.assertTrue(i79 == 0);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        java.util.Set set7 = defaultedMap6.entrySet();
        java.util.Set set8 = defaultedMap6.entrySet();
        java.util.Collection collection9 = defaultedMap6.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertNotNull(collection9);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        java.lang.Object obj25 = null;
        boolean b26 = defaultedMap12.containsValue(obj25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = defaultedMap28.remove((java.lang.Object) 1.0f);
        defaultedMap28.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = null;
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) 1, obj39);
        boolean b42 = defaultedMap37.containsKey((java.lang.Object) 1);
        defaultedMap37.clear();
        java.lang.Object obj44 = defaultedMap28.put((java.lang.Object) defaultedMap33, (java.lang.Object) defaultedMap37);
        defaultedMap12.putAll((java.util.Map) defaultedMap33);
        java.util.Collection collection46 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        boolean b52 = defaultedMap33.equals((java.lang.Object) '4');
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(collection46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue(b52 == false);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        java.util.Collection collection21 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set24 = defaultedMap23.keySet();
        boolean b26 = defaultedMap23.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection27 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) collection27);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap19.containsValue((java.lang.Object) defaultedMap28);
        int i31 = defaultedMap28.size();
        defaultedMap28.clear();
        boolean b33 = defaultedMap28.isEmpty();
        boolean b34 = defaultedMap6.equals((java.lang.Object) b33);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(collection27);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(b34 == false);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap18.keySet();
        boolean b21 = defaultedMap18.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection22 = defaultedMap18.values();
        java.lang.String str23 = defaultedMap18.toString();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = defaultedMap25.get((java.lang.Object) 0.0f);
        boolean b28 = defaultedMap25.isEmpty();
        java.lang.Object obj31 = defaultedMap25.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap25);
        boolean b33 = defaultedMap18.equals((java.lang.Object) defaultedMap32);
        defaultedMap32.clear();
        java.util.Map map35 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap14, (java.lang.Object) defaultedMap32);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = null;
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) 1, obj40);
        java.util.Set set42 = defaultedMap38.keySet();
        int i43 = defaultedMap38.size();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set46 = defaultedMap45.keySet();
        boolean b48 = defaultedMap45.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection49 = defaultedMap45.values();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) collection49);
        boolean b51 = defaultedMap50.isEmpty();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = defaultedMap53.remove((java.lang.Object) 1.0f);
        defaultedMap53.clear();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj64 = null;
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) 1, obj64);
        boolean b67 = defaultedMap62.containsKey((java.lang.Object) 1);
        defaultedMap62.clear();
        java.lang.Object obj69 = defaultedMap53.put((java.lang.Object) defaultedMap58, (java.lang.Object) defaultedMap62);
        collections.Predicate predicate70 = null;
        collections.Predicate predicate71 = null;
        java.util.Map map72 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap53, predicate70, predicate71);
        java.lang.Object obj73 = defaultedMap50.get((java.lang.Object) predicate70);
        boolean b74 = defaultedMap50.isEmpty();
        collections.Predicate predicate75 = null;
        collections.Predicate predicate76 = null;
        java.util.Map map77 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap50, predicate75, predicate76);
        java.lang.Object obj78 = defaultedMap38.get((java.lang.Object) predicate75);
        java.lang.Object obj79 = defaultedMap32.put((java.lang.Object) 1.0d, (java.lang.Object) predicate75);
        collections.map.DefaultedMap defaultedMap81 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set82 = defaultedMap81.keySet();
        boolean b84 = defaultedMap81.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection85 = defaultedMap81.values();
        java.lang.String str86 = defaultedMap81.toString();
        collections.Predicate predicate87 = null;
        collections.Predicate predicate88 = null;
        java.util.Map map89 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap81, predicate87, predicate88);
        collections.map.DefaultedMap defaultedMap90 = new collections.map.DefaultedMap((java.lang.Object) map89);
        boolean b91 = defaultedMap32.containsKey((java.lang.Object) defaultedMap90);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "{}" + "'", str23.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (byte) 0 + "'", obj27.equals((byte) 0));
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNotNull(map35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(i43 == 1);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNotNull(collection49);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(map72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertNotNull(map77);
        org.junit.Assert.assertTrue("'" + obj78 + "' != '" + (byte) 0 + "'", obj78.equals((byte) 0));
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(set82);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertNotNull(collection85);
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "{}" + "'", str86.equals("{}"));
        org.junit.Assert.assertNotNull(map89);
        org.junit.Assert.assertTrue(b91 == false);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.lang.String str5 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (short) 0);
        java.lang.Object obj8 = defaultedMap1.get((java.lang.Object) (short) 0);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{1=null}" + "'", str5.equals("{1=null}"));
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (byte) 0 + "'", obj8.equals((byte) 0));
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        collections.Predicate predicate37 = null;
        collections.Predicate predicate38 = null;
        java.util.Map map39 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate37, predicate38);
        defaultedMap1.clear();
        defaultedMap1.clear();
        collections.Predicate predicate42 = null;
        collections.Predicate predicate43 = null;
        java.util.Map map44 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate42, predicate43);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertNotNull(map39);
        org.junit.Assert.assertNotNull(map44);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.lang.String str5 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b12 = defaultedMap11.isEmpty();
        java.util.Set set13 = defaultedMap11.entrySet();
        boolean b14 = defaultedMap7.containsValue((java.lang.Object) set13);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        java.util.Collection collection18 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set21 = defaultedMap20.keySet();
        boolean b23 = defaultedMap20.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection24 = defaultedMap20.values();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) collection24);
        boolean b26 = defaultedMap25.isEmpty();
        boolean b27 = defaultedMap16.containsValue((java.lang.Object) defaultedMap25);
        boolean b28 = defaultedMap16.isEmpty();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap16);
        boolean b30 = defaultedMap29.isEmpty();
        java.util.Collection collection31 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        defaultedMap29.putAll((java.util.Map) defaultedMap33);
        java.util.Collection collection37 = defaultedMap29.values();
        java.util.Map map38 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap7, (java.lang.Object) collection37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap40.keySet();
        boolean b43 = defaultedMap40.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection44 = defaultedMap40.values();
        java.lang.String str45 = defaultedMap40.toString();
        collections.Predicate predicate46 = null;
        collections.Predicate predicate47 = null;
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap40, predicate46, predicate47);
        java.util.Map map49 = collections.map.DefaultedMap.decorate(map38, (java.lang.Object) map48);
        java.util.Map map50 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) map48);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = defaultedMap52.get((java.lang.Object) 0.0f);
        boolean b55 = defaultedMap52.isEmpty();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b58 = defaultedMap57.isEmpty();
        boolean b59 = defaultedMap57.isEmpty();
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set62 = defaultedMap61.keySet();
        boolean b64 = defaultedMap61.containsKey((java.lang.Object) 0.0f);
        boolean b65 = defaultedMap57.containsKey((java.lang.Object) 0.0f);
        java.util.Map map66 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap52, (java.lang.Object) defaultedMap57);
        java.util.Collection collection67 = defaultedMap57.values();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection70 = defaultedMap69.values();
        boolean b71 = defaultedMap57.equals((java.lang.Object) defaultedMap69);
        java.util.Set set72 = defaultedMap69.entrySet();
        java.lang.Object obj73 = defaultedMap1.get((java.lang.Object) defaultedMap69);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{1=null}" + "'", str5.equals("{1=null}"));
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + (byte) 0 + "'", obj9.equals((byte) 0));
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertNotNull(map38);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "{}" + "'", str45.equals("{}"));
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNotNull(map49);
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte) 0 + "'", obj54.equals((byte) 0));
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertNotNull(map66);
        org.junit.Assert.assertNotNull(collection67);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertNotNull(set72);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (byte) 0 + "'", obj73.equals((byte) 0));
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        java.util.Set set35 = defaultedMap31.keySet();
        boolean b36 = defaultedMap6.containsValue((java.lang.Object) set35);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set39 = defaultedMap38.keySet();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection45 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) collection45);
        boolean b47 = defaultedMap46.isEmpty();
        java.lang.Object obj48 = defaultedMap38.get((java.lang.Object) defaultedMap46);
        java.lang.Object obj50 = defaultedMap38.get((java.lang.Object) 10.0f);
        java.util.Map map51 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, obj50);
        java.util.Set set52 = defaultedMap6.entrySet();
        int i53 = defaultedMap6.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + (byte) 0 + "'", obj48.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj50 + "' != '" + (byte) 0 + "'", obj50.equals((byte) 0));
        org.junit.Assert.assertNotNull(map51);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertTrue(i53 == 0);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.get((java.lang.Object) 0.0f);
        boolean b11 = defaultedMap8.isEmpty();
        java.lang.Object obj14 = defaultedMap8.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b16 = defaultedMap1.equals((java.lang.Object) defaultedMap15);
        java.lang.String str17 = defaultedMap1.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "{}" + "'", str17.equals("{}"));
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        java.util.Set set35 = defaultedMap19.entrySet();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = null;
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) 1, obj39);
        defaultedMap37.clear();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap37);
        int i43 = defaultedMap42.size();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set46 = defaultedMap45.keySet();
        java.util.Collection collection47 = defaultedMap45.values();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set50 = defaultedMap49.keySet();
        boolean b52 = defaultedMap49.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection53 = defaultedMap49.values();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) collection53);
        boolean b55 = defaultedMap54.isEmpty();
        boolean b56 = defaultedMap45.containsValue((java.lang.Object) defaultedMap54);
        java.lang.Object obj57 = new java.lang.Object();
        boolean b58 = defaultedMap54.containsValue(obj57);
        boolean b59 = defaultedMap54.isEmpty();
        defaultedMap42.putAll((java.util.Map) defaultedMap54);
        java.lang.Object obj61 = defaultedMap19.remove((java.lang.Object) defaultedMap54);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertNotNull(set50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(collection53);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj11 = defaultedMap1.put((java.lang.Object) collection9, (java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        java.util.Set set29 = defaultedMap24.keySet();
        java.util.Set set30 = defaultedMap24.entrySet();
        java.lang.Object obj31 = defaultedMap1.put((java.lang.Object) predicate21, (java.lang.Object) defaultedMap24);
        java.util.Set set32 = defaultedMap24.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(set32);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.get((java.lang.Object) 0.0f);
        boolean b11 = defaultedMap8.isEmpty();
        java.lang.Object obj14 = defaultedMap8.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b16 = defaultedMap1.equals((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.get((java.lang.Object) 0.0f);
        boolean b21 = defaultedMap18.isEmpty();
        int i22 = defaultedMap18.size();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap18);
        java.util.Set set24 = defaultedMap18.keySet();
        boolean b25 = defaultedMap15.containsValue((java.lang.Object) set24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap27.keySet();
        boolean b30 = defaultedMap27.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection31 = defaultedMap27.values();
        java.util.Set set32 = defaultedMap27.keySet();
        java.util.Set set33 = defaultedMap27.entrySet();
        java.lang.Object obj34 = defaultedMap15.get((java.lang.Object) defaultedMap27);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = defaultedMap36.remove((java.lang.Object) 1.0f);
        defaultedMap36.clear();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = defaultedMap41.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = null;
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) 1, obj47);
        boolean b50 = defaultedMap45.containsKey((java.lang.Object) 1);
        defaultedMap45.clear();
        java.lang.Object obj52 = defaultedMap36.put((java.lang.Object) defaultedMap41, (java.lang.Object) defaultedMap45);
        java.lang.Object obj53 = null;
        boolean b54 = defaultedMap41.containsValue(obj53);
        java.util.Set set55 = defaultedMap41.entrySet();
        java.util.Collection collection56 = defaultedMap41.values();
        int i57 = defaultedMap41.size();
        boolean b58 = defaultedMap27.containsKey((java.lang.Object) defaultedMap41);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (byte) 0 + "'", obj20.equals((byte) 0));
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == false);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        java.util.Collection collection14 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        boolean b19 = defaultedMap16.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection20 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) collection20);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap12.containsValue((java.lang.Object) defaultedMap21);
        boolean b24 = defaultedMap12.isEmpty();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap12);
        boolean b26 = defaultedMap25.isEmpty();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) defaultedMap25);
        java.util.Set set28 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) set28);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertNotNull(collection14);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(set28);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) collection9);
        java.util.Collection collection11 = defaultedMap1.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 0 + "'", obj10.equals(0));
        org.junit.Assert.assertNotNull(collection11);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj3 = null;
        boolean b4 = defaultedMap1.containsKey(obj3);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        int i7 = defaultedMap6.size();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = null;
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) 1, obj11);
        java.util.Set set13 = defaultedMap9.keySet();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) set13);
        java.util.Set set15 = defaultedMap14.entrySet();
        int i16 = defaultedMap14.size();
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = defaultedMap14.get((java.lang.Object) defaultedMap19);
        defaultedMap6.putAll((java.util.Map) defaultedMap19);
        java.lang.String str24 = defaultedMap19.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "{}" + "'", str24.equals("{}"));
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj8 = defaultedMap5.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) (byte) 100);
        int i21 = defaultedMap18.size();
        java.lang.Object obj22 = defaultedMap10.remove((java.lang.Object) defaultedMap18);
        boolean b23 = defaultedMap5.containsKey((java.lang.Object) defaultedMap10);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) defaultedMap5);
        defaultedMap1.clear();
        java.lang.String str26 = defaultedMap1.toString();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{}" + "'", str26.equals("{}"));
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        java.lang.String str5 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) 1, obj27);
        boolean b30 = defaultedMap25.containsKey((java.lang.Object) 1);
        defaultedMap25.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) (byte) 100);
        int i36 = defaultedMap33.size();
        java.lang.Object obj37 = defaultedMap25.remove((java.lang.Object) defaultedMap33);
        boolean b38 = defaultedMap12.containsValue(obj37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) 100.0f);
        java.util.Set set41 = defaultedMap40.entrySet();
        java.util.Map map42 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap12, (java.lang.Object) defaultedMap40);
        java.lang.Object obj43 = defaultedMap1.get((java.lang.Object) defaultedMap40);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{}" + "'", str5.equals("{}"));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 0 + "'", obj43.equals((byte) 0));
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        java.lang.Object obj10 = null;
        boolean b11 = defaultedMap1.containsValue(obj10);
        int i12 = defaultedMap1.size();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 0);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        boolean b11 = defaultedMap8.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection12 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) collection12);
        boolean b14 = defaultedMap13.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.remove((java.lang.Object) 1.0f);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) 1, obj27);
        boolean b30 = defaultedMap25.containsKey((java.lang.Object) 1);
        defaultedMap25.clear();
        java.lang.Object obj32 = defaultedMap16.put((java.lang.Object) defaultedMap21, (java.lang.Object) defaultedMap25);
        collections.Predicate predicate33 = null;
        collections.Predicate predicate34 = null;
        java.util.Map map35 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap16, predicate33, predicate34);
        java.lang.Object obj36 = defaultedMap13.get((java.lang.Object) predicate33);
        java.lang.Object obj37 = defaultedMap1.remove((java.lang.Object) defaultedMap13);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(map35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        defaultedMap6.clear();
        collections.Transformer transformer8 = null;
        try {
            java.util.Map map9 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, transformer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        int i5 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        boolean b15 = defaultedMap12.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection16 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) collection16);
        boolean b18 = defaultedMap17.isEmpty();
        boolean b19 = defaultedMap8.containsValue((java.lang.Object) defaultedMap17);
        int i20 = defaultedMap17.size();
        defaultedMap17.clear();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set24 = defaultedMap23.keySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection30 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) collection30);
        boolean b32 = defaultedMap31.isEmpty();
        java.lang.Object obj33 = defaultedMap23.get((java.lang.Object) defaultedMap31);
        boolean b34 = defaultedMap17.containsValue((java.lang.Object) defaultedMap31);
        java.util.Collection collection35 = defaultedMap31.values();
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap31);
        java.util.Set set37 = defaultedMap31.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        defaultedMap39.clear();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = defaultedMap44.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = null;
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) 1, obj50);
        boolean b53 = defaultedMap48.containsKey((java.lang.Object) 1);
        defaultedMap48.clear();
        java.lang.Object obj55 = defaultedMap39.put((java.lang.Object) defaultedMap44, (java.lang.Object) defaultedMap48);
        java.lang.Object obj56 = null;
        boolean b57 = defaultedMap44.containsValue(obj56);
        java.util.Set set58 = defaultedMap44.entrySet();
        java.util.Collection collection59 = defaultedMap44.values();
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set62 = defaultedMap61.keySet();
        java.util.Collection collection63 = defaultedMap61.values();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set66 = defaultedMap65.keySet();
        boolean b68 = defaultedMap65.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection69 = defaultedMap65.values();
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) collection69);
        boolean b71 = defaultedMap70.isEmpty();
        boolean b72 = defaultedMap61.containsValue((java.lang.Object) defaultedMap70);
        int i73 = defaultedMap70.size();
        defaultedMap70.clear();
        java.lang.Object obj75 = defaultedMap44.get((java.lang.Object) defaultedMap70);
        defaultedMap31.putAll((java.util.Map) defaultedMap70);
        int i77 = defaultedMap31.size();
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set80 = defaultedMap79.keySet();
        java.util.Collection collection81 = defaultedMap79.values();
        collections.map.DefaultedMap defaultedMap83 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set84 = defaultedMap83.keySet();
        boolean b86 = defaultedMap83.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection87 = defaultedMap83.values();
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) collection87);
        boolean b89 = defaultedMap88.isEmpty();
        boolean b90 = defaultedMap79.containsValue((java.lang.Object) defaultedMap88);
        boolean b91 = defaultedMap79.isEmpty();
        collections.map.DefaultedMap defaultedMap92 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap79);
        boolean b93 = defaultedMap92.isEmpty();
        java.util.Collection collection94 = defaultedMap92.values();
        java.util.Map map95 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap31, (java.lang.Object) defaultedMap92);
        boolean b96 = defaultedMap1.equals((java.lang.Object) defaultedMap92);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(collection35);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(set58);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertNotNull(set66);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNotNull(collection69);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + (byte) 0 + "'", obj75.equals((byte) 0));
        org.junit.Assert.assertTrue(i77 == 0);
        org.junit.Assert.assertNotNull(set80);
        org.junit.Assert.assertNotNull(collection81);
        org.junit.Assert.assertNotNull(set84);
        org.junit.Assert.assertTrue(b86 == false);
        org.junit.Assert.assertNotNull(collection87);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(b91 == true);
        org.junit.Assert.assertTrue(b93 == true);
        org.junit.Assert.assertNotNull(collection94);
        org.junit.Assert.assertNotNull(map95);
        org.junit.Assert.assertTrue(b96 == true);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.util.Set set6 = defaultedMap1.entrySet();
        java.lang.Object obj7 = null;
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = null;
        java.lang.Object obj12 = defaultedMap9.put((java.lang.Object) 1, obj11);
        boolean b14 = defaultedMap9.containsKey((java.lang.Object) 1);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection18 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap9.containsValue((java.lang.Object) defaultedMap19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        java.util.Collection collection24 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection30 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) collection30);
        boolean b32 = defaultedMap31.isEmpty();
        boolean b33 = defaultedMap22.containsValue((java.lang.Object) defaultedMap31);
        int i34 = defaultedMap31.size();
        java.util.Set set35 = defaultedMap31.keySet();
        java.lang.Object obj36 = defaultedMap9.get((java.lang.Object) set35);
        java.lang.Object obj37 = defaultedMap1.put(obj7, (java.lang.Object) set35);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + (byte) 0 + "'", obj36.equals((byte) 0));
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.String str18 = defaultedMap6.toString();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b21 = defaultedMap20.isEmpty();
        boolean b22 = defaultedMap20.isEmpty();
        java.lang.Object obj24 = defaultedMap20.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        defaultedMap26.clear();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = defaultedMap31.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = null;
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) 1, obj37);
        boolean b40 = defaultedMap35.containsKey((java.lang.Object) 1);
        defaultedMap35.clear();
        java.lang.Object obj42 = defaultedMap26.put((java.lang.Object) defaultedMap31, (java.lang.Object) defaultedMap35);
        java.lang.Object obj43 = defaultedMap20.get((java.lang.Object) defaultedMap31);
        boolean b44 = defaultedMap20.isEmpty();
        boolean b45 = defaultedMap6.equals((java.lang.Object) b44);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "{}" + "'", str18.equals("{}"));
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 0 + "'", obj43.equals((byte) 0));
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == false);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        java.lang.String str13 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        java.util.Collection collection17 = defaultedMap15.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        boolean b26 = defaultedMap15.containsValue((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap15.isEmpty();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap15.putAll((java.util.Map) defaultedMap30);
        java.lang.Object obj35 = defaultedMap1.get((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        boolean b40 = defaultedMap37.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection41 = defaultedMap37.values();
        java.lang.String str42 = defaultedMap37.toString();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = defaultedMap44.get((java.lang.Object) 0.0f);
        boolean b47 = defaultedMap44.isEmpty();
        java.lang.Object obj50 = defaultedMap44.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap44);
        boolean b52 = defaultedMap37.equals((java.lang.Object) defaultedMap51);
        defaultedMap51.clear();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap55.keySet();
        boolean b58 = defaultedMap55.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection59 = defaultedMap55.values();
        java.lang.String str60 = defaultedMap55.toString();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set63 = defaultedMap62.keySet();
        boolean b65 = defaultedMap62.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection66 = defaultedMap62.values();
        java.lang.String str67 = defaultedMap62.toString();
        collections.Predicate predicate68 = null;
        collections.Predicate predicate69 = null;
        java.util.Map map70 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap62, predicate68, predicate69);
        java.lang.Object obj71 = defaultedMap51.put((java.lang.Object) defaultedMap55, (java.lang.Object) map70);
        boolean b72 = defaultedMap1.containsValue((java.lang.Object) defaultedMap55);
        collections.Predicate predicate73 = null;
        collections.Predicate predicate74 = null;
        java.util.Map map75 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate73, predicate74);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(collection41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "{}" + "'", str42.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj46 + "' != '" + (byte) 0 + "'", obj46.equals((byte) 0));
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "{}" + "'", str60.equals("{}"));
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertNotNull(collection66);
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "{}" + "'", str67.equals("{}"));
        org.junit.Assert.assertNotNull(map70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(map75);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj50 = defaultedMap48.remove((java.lang.Object) (byte) 100);
        int i51 = defaultedMap48.size();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = defaultedMap53.remove((java.lang.Object) 1.0f);
        java.lang.Object obj57 = defaultedMap53.remove((java.lang.Object) 'a');
        java.lang.Object obj58 = defaultedMap48.get((java.lang.Object) defaultedMap53);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set61 = defaultedMap60.keySet();
        boolean b63 = defaultedMap60.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection64 = defaultedMap60.values();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) collection64);
        int i66 = defaultedMap65.size();
        collections.Predicate predicate67 = null;
        collections.Predicate predicate68 = null;
        java.util.Map map69 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap65, predicate67, predicate68);
        java.lang.Object obj70 = defaultedMap53.get((java.lang.Object) defaultedMap65);
        java.lang.Object obj71 = null;
        boolean b72 = defaultedMap53.equals(obj71);
        java.util.Set set73 = defaultedMap53.entrySet();
        java.lang.Object obj74 = defaultedMap43.get((java.lang.Object) set73);
        java.util.Set set75 = defaultedMap43.entrySet();
        boolean b76 = defaultedMap6.containsValue((java.lang.Object) defaultedMap43);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + 0 + "'", obj58.equals(0));
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertNotNull(map69);
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (byte) 0 + "'", obj70.equals((byte) 0));
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(set73);
        org.junit.Assert.assertTrue("'" + obj74 + "' != '" + (byte) 0 + "'", obj74.equals((byte) 0));
        org.junit.Assert.assertNotNull(set75);
        org.junit.Assert.assertTrue(b76 == false);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        int i6 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.remove((java.lang.Object) 1.0f);
        java.lang.Object obj12 = defaultedMap8.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        java.lang.Object obj18 = defaultedMap14.remove((java.lang.Object) 'a');
        java.lang.Object obj19 = defaultedMap8.get((java.lang.Object) 'a');
        boolean b20 = defaultedMap1.containsKey(obj19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) (byte) 100);
        int i25 = defaultedMap22.size();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        java.lang.Object obj31 = defaultedMap27.remove((java.lang.Object) 'a');
        java.lang.Object obj32 = defaultedMap22.get((java.lang.Object) defaultedMap27);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set35 = defaultedMap34.keySet();
        boolean b37 = defaultedMap34.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection38 = defaultedMap34.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) collection38);
        int i40 = defaultedMap39.size();
        collections.Predicate predicate41 = null;
        collections.Predicate predicate42 = null;
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap39, predicate41, predicate42);
        java.lang.Object obj44 = defaultedMap27.get((java.lang.Object) defaultedMap39);
        java.lang.Object obj45 = null;
        boolean b46 = defaultedMap27.equals(obj45);
        defaultedMap1.putAll((java.util.Map) defaultedMap27);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set50 = defaultedMap49.keySet();
        java.util.Collection collection51 = defaultedMap49.values();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set54 = defaultedMap53.keySet();
        boolean b56 = defaultedMap53.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection57 = defaultedMap53.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) collection57);
        boolean b59 = defaultedMap58.isEmpty();
        boolean b60 = defaultedMap49.containsValue((java.lang.Object) defaultedMap58);
        boolean b61 = defaultedMap1.containsValue((java.lang.Object) defaultedMap49);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + 0 + "'", obj32.equals(0));
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte) 0 + "'", obj44.equals((byte) 0));
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(set50);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNotNull(collection57);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == false);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        boolean b35 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj38 = defaultedMap1.remove((java.lang.Object) defaultedMap37);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.util.Set set6 = defaultedMap1.keySet();
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (short) -1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = defaultedMap11.remove((java.lang.Object) 1.0f);
        defaultedMap11.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj22 = null;
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) 1, obj22);
        boolean b25 = defaultedMap20.containsKey((java.lang.Object) 1);
        defaultedMap20.clear();
        java.lang.Object obj27 = defaultedMap11.put((java.lang.Object) defaultedMap16, (java.lang.Object) defaultedMap20);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set30 = defaultedMap29.keySet();
        java.util.Collection collection31 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set34 = defaultedMap33.keySet();
        boolean b36 = defaultedMap33.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection37 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) collection37);
        boolean b39 = defaultedMap38.isEmpty();
        boolean b40 = defaultedMap29.containsValue((java.lang.Object) defaultedMap38);
        boolean b41 = defaultedMap29.isEmpty();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap29.putAll((java.util.Map) defaultedMap44);
        java.lang.Object obj49 = defaultedMap16.remove((java.lang.Object) defaultedMap44);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set52 = defaultedMap51.keySet();
        java.util.Collection collection53 = defaultedMap51.values();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap55.keySet();
        boolean b58 = defaultedMap55.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection59 = defaultedMap55.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) collection59);
        boolean b61 = defaultedMap60.isEmpty();
        boolean b62 = defaultedMap51.containsValue((java.lang.Object) defaultedMap60);
        boolean b63 = defaultedMap51.isEmpty();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap51);
        boolean b65 = defaultedMap64.isEmpty();
        java.util.Collection collection66 = defaultedMap64.values();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj70 = defaultedMap68.remove((java.lang.Object) 1.0f);
        defaultedMap64.putAll((java.util.Map) defaultedMap68);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap64);
        defaultedMap72.clear();
        java.lang.Object obj74 = defaultedMap44.remove((java.lang.Object) defaultedMap72);
        java.util.Collection collection75 = defaultedMap72.values();
        boolean b76 = defaultedMap1.equals((java.lang.Object) collection75);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertNotNull(collection53);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertNotNull(collection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(collection75);
        org.junit.Assert.assertTrue(b76 == false);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.util.Set set6 = defaultedMap1.keySet();
        java.util.Set set7 = defaultedMap1.entrySet();
        defaultedMap1.clear();
        java.lang.String str9 = defaultedMap1.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "{}" + "'", str9.equals("{}"));
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        defaultedMap6.putAll((java.util.Map) defaultedMap8);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        boolean b25 = defaultedMap13.isEmpty();
        java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) b25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap28.isEmpty();
        java.lang.Object obj32 = defaultedMap28.get((java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap28.entrySet();
        boolean b34 = defaultedMap8.equals((java.lang.Object) defaultedMap28);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj38 = defaultedMap36.remove((java.lang.Object) (byte) 100);
        java.util.Set set39 = defaultedMap36.entrySet();
        boolean b40 = defaultedMap36.isEmpty();
        java.util.Map map41 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap28, (java.lang.Object) b40);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNotNull(map41);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        boolean b35 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        java.util.Collection collection39 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection45 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) collection45);
        boolean b47 = defaultedMap46.isEmpty();
        boolean b48 = defaultedMap37.containsValue((java.lang.Object) defaultedMap46);
        boolean b49 = defaultedMap37.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap37);
        boolean b51 = defaultedMap50.isEmpty();
        java.util.Collection collection52 = defaultedMap50.values();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = defaultedMap54.remove((java.lang.Object) 1.0f);
        defaultedMap50.putAll((java.util.Map) defaultedMap54);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        defaultedMap58.clear();
        java.util.Map map60 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap58);
        java.util.Collection collection61 = defaultedMap1.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(map60);
        org.junit.Assert.assertNotNull(collection61);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        boolean b37 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set40 = defaultedMap39.keySet();
        boolean b42 = defaultedMap39.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection43 = defaultedMap39.values();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) collection43);
        int i45 = defaultedMap44.size();
        collections.Predicate predicate46 = null;
        collections.Predicate predicate47 = null;
        java.util.Map map48 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap44, predicate46, predicate47);
        collections.Predicate predicate49 = null;
        collections.Predicate predicate50 = null;
        java.util.Map map51 = collections.map.PredicatedMap.decorate(map48, predicate49, predicate50);
        boolean b52 = defaultedMap1.equals((java.lang.Object) predicate50);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(collection43);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNotNull(map51);
        org.junit.Assert.assertTrue(b52 == false);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        int i7 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) collection13);
        boolean b15 = defaultedMap14.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.remove((java.lang.Object) 1.0f);
        defaultedMap17.clear();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = null;
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) 1, obj28);
        boolean b31 = defaultedMap26.containsKey((java.lang.Object) 1);
        defaultedMap26.clear();
        java.lang.Object obj33 = defaultedMap17.put((java.lang.Object) defaultedMap22, (java.lang.Object) defaultedMap26);
        collections.Predicate predicate34 = null;
        collections.Predicate predicate35 = null;
        java.util.Map map36 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate34, predicate35);
        java.lang.Object obj37 = defaultedMap14.get((java.lang.Object) predicate34);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        java.util.Set set43 = defaultedMap39.keySet();
        boolean b44 = defaultedMap14.containsValue((java.lang.Object) set43);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection47 = defaultedMap46.values();
        java.lang.Object obj48 = defaultedMap1.put((java.lang.Object) b44, (java.lang.Object) defaultedMap46);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) 1, obj52);
        java.util.Set set54 = defaultedMap50.keySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) set54);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set58 = defaultedMap57.keySet();
        java.util.Collection collection59 = defaultedMap57.values();
        defaultedMap55.putAll((java.util.Map) defaultedMap57);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set63 = defaultedMap62.keySet();
        java.util.Collection collection64 = defaultedMap62.values();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set67 = defaultedMap66.keySet();
        boolean b69 = defaultedMap66.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection70 = defaultedMap66.values();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) collection70);
        boolean b72 = defaultedMap71.isEmpty();
        boolean b73 = defaultedMap62.containsValue((java.lang.Object) defaultedMap71);
        int i74 = defaultedMap71.size();
        defaultedMap71.clear();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set78 = defaultedMap77.keySet();
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set81 = defaultedMap80.keySet();
        boolean b83 = defaultedMap80.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection84 = defaultedMap80.values();
        collections.map.DefaultedMap defaultedMap85 = new collections.map.DefaultedMap((java.lang.Object) collection84);
        boolean b86 = defaultedMap85.isEmpty();
        java.lang.Object obj87 = defaultedMap77.get((java.lang.Object) defaultedMap85);
        boolean b88 = defaultedMap71.containsValue((java.lang.Object) defaultedMap85);
        java.util.Collection collection89 = defaultedMap85.values();
        collections.map.DefaultedMap defaultedMap90 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap85);
        java.util.Set set91 = defaultedMap85.keySet();
        boolean b92 = defaultedMap55.equals((java.lang.Object) set91);
        boolean b93 = defaultedMap1.containsKey((java.lang.Object) set91);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(i7 == 1);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertNotNull(set58);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertNotNull(set78);
        org.junit.Assert.assertNotNull(set81);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertNotNull(collection84);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue("'" + obj87 + "' != '" + (byte) 0 + "'", obj87.equals((byte) 0));
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertNotNull(collection89);
        org.junit.Assert.assertNotNull(set91);
        org.junit.Assert.assertTrue(b92 == false);
        org.junit.Assert.assertTrue(b93 == false);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        boolean b18 = defaultedMap1.containsValue((java.lang.Object) 0.0f);
        java.util.Set set19 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) (byte) 100);
        int i12 = defaultedMap9.size();
        java.lang.Object obj13 = defaultedMap1.remove((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        java.util.Collection collection17 = defaultedMap15.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        boolean b26 = defaultedMap15.containsValue((java.lang.Object) defaultedMap24);
        int i27 = defaultedMap24.size();
        defaultedMap24.clear();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap30.keySet();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set34 = defaultedMap33.keySet();
        boolean b36 = defaultedMap33.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection37 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) collection37);
        boolean b39 = defaultedMap38.isEmpty();
        java.lang.Object obj40 = defaultedMap30.get((java.lang.Object) defaultedMap38);
        boolean b41 = defaultedMap24.containsValue((java.lang.Object) defaultedMap38);
        java.util.Collection collection42 = defaultedMap38.values();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap38);
        java.util.Set set44 = defaultedMap38.keySet();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj48 = defaultedMap46.remove((java.lang.Object) 1.0f);
        defaultedMap46.clear();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = null;
        java.lang.Object obj58 = defaultedMap55.put((java.lang.Object) 1, obj57);
        boolean b60 = defaultedMap55.containsKey((java.lang.Object) 1);
        defaultedMap55.clear();
        java.lang.Object obj62 = defaultedMap46.put((java.lang.Object) defaultedMap51, (java.lang.Object) defaultedMap55);
        java.lang.Object obj63 = null;
        boolean b64 = defaultedMap51.containsValue(obj63);
        java.util.Set set65 = defaultedMap51.entrySet();
        java.util.Collection collection66 = defaultedMap51.values();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set69 = defaultedMap68.keySet();
        java.util.Collection collection70 = defaultedMap68.values();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set73 = defaultedMap72.keySet();
        boolean b75 = defaultedMap72.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection76 = defaultedMap72.values();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) collection76);
        boolean b78 = defaultedMap77.isEmpty();
        boolean b79 = defaultedMap68.containsValue((java.lang.Object) defaultedMap77);
        int i80 = defaultedMap77.size();
        defaultedMap77.clear();
        java.lang.Object obj82 = defaultedMap51.get((java.lang.Object) defaultedMap77);
        defaultedMap38.putAll((java.util.Map) defaultedMap77);
        boolean b84 = defaultedMap1.containsValue((java.lang.Object) defaultedMap77);
        defaultedMap1.clear();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (byte) 0 + "'", obj40.equals((byte) 0));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertNotNull(collection66);
        org.junit.Assert.assertNotNull(set69);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertNotNull(set73);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertNotNull(collection76);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(i80 == 0);
        org.junit.Assert.assertTrue("'" + obj82 + "' != '" + (byte) 0 + "'", obj82.equals((byte) 0));
        org.junit.Assert.assertTrue(b84 == false);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        java.util.Set set4 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.get((java.lang.Object) 0.0f);
        boolean b9 = defaultedMap6.isEmpty();
        java.lang.Object obj12 = defaultedMap6.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate13 = null;
        collections.Predicate predicate14 = null;
        java.util.Map map15 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap6, predicate13, predicate14);
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        java.util.Collection collection19 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap21.keySet();
        boolean b24 = defaultedMap21.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection25 = defaultedMap21.values();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) collection25);
        boolean b27 = defaultedMap26.isEmpty();
        boolean b28 = defaultedMap17.containsValue((java.lang.Object) defaultedMap26);
        boolean b29 = defaultedMap17.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap17);
        boolean b31 = defaultedMap30.isEmpty();
        java.lang.Object obj32 = defaultedMap6.remove((java.lang.Object) defaultedMap30);
        java.util.Set set33 = defaultedMap6.keySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap6);
        defaultedMap1.putAll((java.util.Map) defaultedMap34);
        java.util.Set set36 = defaultedMap34.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (byte) 0 + "'", obj8.equals((byte) 0));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(map15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNotNull(set36);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        java.util.Set set30 = defaultedMap24.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set30);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        collections.Factory factory15 = null;
        try {
            java.util.Map map16 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        java.lang.String str22 = defaultedMap17.toString();
        collections.Predicate predicate23 = null;
        collections.Predicate predicate24 = null;
        java.util.Map map25 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate23, predicate24);
        boolean b26 = defaultedMap1.containsValue((java.lang.Object) defaultedMap17);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = null;
        java.lang.Object obj31 = defaultedMap28.put((java.lang.Object) 1, obj30);
        defaultedMap28.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap28);
        boolean b34 = defaultedMap17.equals((java.lang.Object) defaultedMap28);
        int i35 = defaultedMap28.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{}" + "'", str22.equals("{}"));
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 0);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set8 = defaultedMap7.keySet();
        java.lang.Object obj10 = defaultedMap7.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        java.lang.Object obj16 = defaultedMap12.remove((java.lang.Object) 'a');
        defaultedMap7.putAll((java.util.Map) defaultedMap12);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap7, predicate18, predicate19);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) collection26);
        boolean b28 = defaultedMap27.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = defaultedMap30.remove((java.lang.Object) 1.0f);
        defaultedMap30.clear();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = defaultedMap35.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = null;
        java.lang.Object obj42 = defaultedMap39.put((java.lang.Object) 1, obj41);
        boolean b44 = defaultedMap39.containsKey((java.lang.Object) 1);
        defaultedMap39.clear();
        java.lang.Object obj46 = defaultedMap30.put((java.lang.Object) defaultedMap35, (java.lang.Object) defaultedMap39);
        collections.Predicate predicate47 = null;
        collections.Predicate predicate48 = null;
        java.util.Map map49 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap30, predicate47, predicate48);
        java.lang.Object obj50 = defaultedMap27.get((java.lang.Object) predicate47);
        java.util.Set set51 = defaultedMap27.entrySet();
        java.lang.Object obj52 = defaultedMap1.put((java.lang.Object) defaultedMap7, (java.lang.Object) defaultedMap27);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set55 = defaultedMap54.keySet();
        java.lang.Object obj57 = defaultedMap54.get((java.lang.Object) 10L);
        boolean b58 = defaultedMap54.isEmpty();
        java.lang.Object obj59 = defaultedMap27.get((java.lang.Object) defaultedMap54);
        collections.Transformer transformer60 = null;
        try {
            java.util.Map map61 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap27, transformer60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(map49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + (byte) 0 + "'", obj57.equals((byte) 0));
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap21.isEmpty();
        boolean b25 = defaultedMap21.equals((java.lang.Object) 10);
        java.lang.Object obj26 = defaultedMap6.get((java.lang.Object) b25);
        java.lang.Object obj28 = defaultedMap6.get((java.lang.Object) 0L);
        java.lang.Object obj29 = null;
        java.lang.Object obj30 = defaultedMap6.get(obj29);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (byte) 0 + "'", obj28.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (byte) 0 + "'", obj30.equals((byte) 0));
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        java.util.Set set24 = defaultedMap22.keySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        java.util.Collection collection28 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap30.keySet();
        boolean b33 = defaultedMap30.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection34 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) collection34);
        boolean b36 = defaultedMap35.isEmpty();
        boolean b37 = defaultedMap26.containsValue((java.lang.Object) defaultedMap35);
        int i38 = defaultedMap35.size();
        java.util.Set set39 = defaultedMap35.keySet();
        defaultedMap22.putAll((java.util.Map) defaultedMap35);
        java.lang.Object obj41 = defaultedMap1.get((java.lang.Object) defaultedMap22);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        boolean b46 = defaultedMap43.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection47 = defaultedMap43.values();
        collections.Predicate predicate48 = null;
        collections.Predicate predicate49 = null;
        java.util.Map map50 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap43, predicate48, predicate49);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = defaultedMap52.remove((java.lang.Object) 1.0f);
        defaultedMap52.clear();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = defaultedMap57.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = null;
        java.lang.Object obj64 = defaultedMap61.put((java.lang.Object) 1, obj63);
        boolean b66 = defaultedMap61.containsKey((java.lang.Object) 1);
        defaultedMap61.clear();
        java.lang.Object obj68 = defaultedMap52.put((java.lang.Object) defaultedMap57, (java.lang.Object) defaultedMap61);
        java.lang.Object obj69 = null;
        boolean b70 = defaultedMap57.containsValue(obj69);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b73 = defaultedMap72.isEmpty();
        boolean b74 = defaultedMap72.isEmpty();
        boolean b76 = defaultedMap72.equals((java.lang.Object) 10);
        java.lang.Object obj77 = defaultedMap57.get((java.lang.Object) b76);
        java.util.Map map78 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap43, (java.lang.Object) defaultedMap57);
        collections.Predicate predicate79 = null;
        collections.Predicate predicate80 = null;
        java.util.Map map81 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap43, predicate79, predicate80);
        defaultedMap43.clear();
        defaultedMap1.putAll((java.util.Map) defaultedMap43);
        java.util.Set set84 = defaultedMap43.keySet();
        collections.map.DefaultedMap defaultedMap85 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap43);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(collection34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (byte) 0 + "'", obj77.equals((byte) 0));
        org.junit.Assert.assertNotNull(map78);
        org.junit.Assert.assertNotNull(map81);
        org.junit.Assert.assertNotNull(set84);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        java.lang.String str13 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        boolean b18 = defaultedMap15.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection19 = defaultedMap15.values();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap15, predicate20, predicate21);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) 1.0f);
        defaultedMap24.clear();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) 1, obj35);
        boolean b38 = defaultedMap33.containsKey((java.lang.Object) 1);
        defaultedMap33.clear();
        java.lang.Object obj40 = defaultedMap24.put((java.lang.Object) defaultedMap29, (java.lang.Object) defaultedMap33);
        java.lang.Object obj41 = null;
        boolean b42 = defaultedMap29.containsValue(obj41);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b45 = defaultedMap44.isEmpty();
        boolean b46 = defaultedMap44.isEmpty();
        boolean b48 = defaultedMap44.equals((java.lang.Object) 10);
        java.lang.Object obj49 = defaultedMap29.get((java.lang.Object) b48);
        java.util.Map map50 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, (java.lang.Object) defaultedMap29);
        java.lang.Object obj51 = defaultedMap1.get((java.lang.Object) defaultedMap29);
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set54 = defaultedMap53.keySet();
        boolean b56 = defaultedMap53.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = null;
        java.lang.Object obj61 = defaultedMap58.put((java.lang.Object) 1, obj60);
        java.util.Set set62 = defaultedMap58.keySet();
        java.lang.Object obj63 = defaultedMap53.get((java.lang.Object) defaultedMap58);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set66 = defaultedMap65.keySet();
        java.util.Collection collection67 = defaultedMap65.values();
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set70 = defaultedMap69.keySet();
        boolean b72 = defaultedMap69.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection73 = defaultedMap69.values();
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) collection73);
        boolean b75 = defaultedMap74.isEmpty();
        boolean b76 = defaultedMap65.containsValue((java.lang.Object) defaultedMap74);
        java.lang.Object obj77 = new java.lang.Object();
        boolean b78 = defaultedMap74.containsValue(obj77);
        defaultedMap53.putAll((java.util.Map) defaultedMap74);
        java.lang.Object obj80 = defaultedMap29.get((java.lang.Object) defaultedMap74);
        defaultedMap74.clear();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (byte) 0 + "'", obj49.equals((byte) 0));
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (byte) 0 + "'", obj51.equals((byte) 0));
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (byte) 0 + "'", obj63.equals((byte) 0));
        org.junit.Assert.assertNotNull(set66);
        org.junit.Assert.assertNotNull(collection67);
        org.junit.Assert.assertNotNull(set70);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(collection73);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (byte) 0 + "'", obj80.equals((byte) 0));
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        int i6 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.String str9 = defaultedMap8.toString();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = defaultedMap11.remove((java.lang.Object) 1.0f);
        defaultedMap11.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj22 = null;
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) 1, obj22);
        boolean b25 = defaultedMap20.containsKey((java.lang.Object) 1);
        defaultedMap20.clear();
        java.lang.Object obj27 = defaultedMap11.put((java.lang.Object) defaultedMap16, (java.lang.Object) defaultedMap20);
        collections.Predicate predicate28 = null;
        collections.Predicate predicate29 = null;
        java.util.Map map30 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap11, predicate28, predicate29);
        collections.Predicate predicate31 = null;
        collections.Predicate predicate32 = null;
        java.util.Map map33 = collections.map.PredicatedMap.decorate(map30, predicate31, predicate32);
        boolean b34 = defaultedMap8.containsKey((java.lang.Object) map30);
        defaultedMap1.putAll((java.util.Map) defaultedMap8);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap37.isEmpty();
        boolean b39 = defaultedMap37.isEmpty();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        boolean b45 = defaultedMap37.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection46 = defaultedMap37.values();
        boolean b47 = defaultedMap1.containsValue((java.lang.Object) collection46);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "{}" + "'", str9.equals("{}"));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(map30);
        org.junit.Assert.assertNotNull(map33);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNotNull(collection46);
        org.junit.Assert.assertTrue(b47 == false);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) (byte) 100);
        int i29 = defaultedMap26.size();
        boolean b30 = defaultedMap12.equals((java.lang.Object) i29);
        java.lang.String str31 = defaultedMap12.toString();
        boolean b32 = defaultedMap12.isEmpty();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set35 = defaultedMap34.keySet();
        boolean b37 = defaultedMap34.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection38 = defaultedMap34.values();
        collections.Predicate predicate39 = null;
        collections.Predicate predicate40 = null;
        java.util.Map map41 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap34, predicate39, predicate40);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = defaultedMap43.remove((java.lang.Object) 1.0f);
        defaultedMap43.clear();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = defaultedMap48.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = null;
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) 1, obj54);
        boolean b57 = defaultedMap52.containsKey((java.lang.Object) 1);
        defaultedMap52.clear();
        java.lang.Object obj59 = defaultedMap43.put((java.lang.Object) defaultedMap48, (java.lang.Object) defaultedMap52);
        java.lang.Object obj60 = null;
        boolean b61 = defaultedMap48.containsValue(obj60);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b64 = defaultedMap63.isEmpty();
        boolean b65 = defaultedMap63.isEmpty();
        boolean b67 = defaultedMap63.equals((java.lang.Object) 10);
        java.lang.Object obj68 = defaultedMap48.get((java.lang.Object) b67);
        java.util.Map map69 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap34, (java.lang.Object) defaultedMap48);
        boolean b70 = defaultedMap34.isEmpty();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) b70);
        boolean b72 = defaultedMap12.containsKey((java.lang.Object) b70);
        int i73 = defaultedMap12.size();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "{}" + "'", str31.equals("{}"));
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertNotNull(map41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertNotNull(map69);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(i73 == 0);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.String str4 = defaultedMap1.toString();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "{}" + "'", str4.equals("{}"));
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap12);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = null;
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) 1, obj28);
        defaultedMap26.clear();
        java.util.Set set31 = defaultedMap26.entrySet();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection34 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap33);
        boolean b36 = defaultedMap26.containsKey((java.lang.Object) defaultedMap33);
        collections.Predicate predicate37 = null;
        collections.Predicate predicate38 = null;
        java.util.Map map39 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap33, predicate37, predicate38);
        boolean b40 = defaultedMap12.containsKey((java.lang.Object) map39);
        int i41 = defaultedMap12.size();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertNotNull(collection34);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(map39);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(i41 == 0);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        java.lang.String str13 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        java.util.Collection collection17 = defaultedMap15.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        boolean b26 = defaultedMap15.containsValue((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap15.isEmpty();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap15.putAll((java.util.Map) defaultedMap30);
        java.lang.Object obj35 = defaultedMap1.get((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = defaultedMap37.remove((java.lang.Object) 1.0f);
        defaultedMap37.clear();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = defaultedMap42.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj48 = null;
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) 1, obj48);
        boolean b51 = defaultedMap46.containsKey((java.lang.Object) 1);
        defaultedMap46.clear();
        java.lang.Object obj53 = defaultedMap37.put((java.lang.Object) defaultedMap42, (java.lang.Object) defaultedMap46);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = null;
        java.lang.Object obj58 = defaultedMap55.put((java.lang.Object) 1, obj57);
        boolean b60 = defaultedMap55.containsKey((java.lang.Object) 1);
        defaultedMap55.clear();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj65 = defaultedMap63.remove((java.lang.Object) (byte) 100);
        int i66 = defaultedMap63.size();
        java.lang.Object obj67 = defaultedMap55.remove((java.lang.Object) defaultedMap63);
        boolean b68 = defaultedMap42.containsValue(obj67);
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj72 = null;
        java.lang.Object obj73 = defaultedMap70.put((java.lang.Object) 1, obj72);
        java.util.Set set74 = defaultedMap70.keySet();
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) set74);
        java.lang.Object obj77 = defaultedMap42.put((java.lang.Object) defaultedMap75, (java.lang.Object) (-1L));
        java.util.Map map78 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap75);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(set74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(map78);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) (byte) 100);
        int i29 = defaultedMap26.size();
        boolean b30 = defaultedMap12.equals((java.lang.Object) i29);
        collections.Predicate predicate31 = null;
        collections.Predicate predicate32 = null;
        java.util.Map map33 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap12, predicate31, predicate32);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(map33);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        boolean b15 = defaultedMap12.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection16 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) collection16);
        boolean b18 = defaultedMap17.isEmpty();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj22 = defaultedMap20.remove((java.lang.Object) 1.0f);
        defaultedMap20.clear();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = defaultedMap25.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = null;
        java.lang.Object obj32 = defaultedMap29.put((java.lang.Object) 1, obj31);
        boolean b34 = defaultedMap29.containsKey((java.lang.Object) 1);
        defaultedMap29.clear();
        java.lang.Object obj36 = defaultedMap20.put((java.lang.Object) defaultedMap25, (java.lang.Object) defaultedMap29);
        collections.Predicate predicate37 = null;
        collections.Predicate predicate38 = null;
        java.util.Map map39 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap20, predicate37, predicate38);
        java.lang.Object obj40 = defaultedMap17.get((java.lang.Object) predicate37);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = null;
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) 1, obj44);
        java.util.Set set46 = defaultedMap42.keySet();
        boolean b47 = defaultedMap17.containsValue((java.lang.Object) set46);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        java.lang.Object obj53 = defaultedMap17.remove((java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = null;
        java.lang.Object obj58 = defaultedMap55.put((java.lang.Object) 1, obj57);
        boolean b60 = defaultedMap55.containsKey((java.lang.Object) 1);
        defaultedMap55.clear();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj65 = defaultedMap63.remove((java.lang.Object) (byte) 100);
        int i66 = defaultedMap63.size();
        java.lang.Object obj67 = defaultedMap55.remove((java.lang.Object) defaultedMap63);
        boolean b68 = defaultedMap17.containsValue((java.lang.Object) defaultedMap63);
        java.lang.Object obj69 = defaultedMap1.put((java.lang.Object) 'a', (java.lang.Object) defaultedMap17);
        boolean b70 = defaultedMap17.isEmpty();
        collections.Predicate predicate71 = null;
        collections.Predicate predicate72 = null;
        java.util.Map map73 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap17, predicate71, predicate72);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(map39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertNotNull(map73);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (-1));
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = null;
        java.lang.Object obj17 = defaultedMap14.put((java.lang.Object) 1, obj16);
        java.util.Set set18 = defaultedMap14.keySet();
        int i19 = defaultedMap14.size();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.String str22 = defaultedMap21.toString();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) 1.0f);
        defaultedMap24.clear();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = null;
        java.lang.Object obj36 = defaultedMap33.put((java.lang.Object) 1, obj35);
        boolean b38 = defaultedMap33.containsKey((java.lang.Object) 1);
        defaultedMap33.clear();
        java.lang.Object obj40 = defaultedMap24.put((java.lang.Object) defaultedMap29, (java.lang.Object) defaultedMap33);
        collections.Predicate predicate41 = null;
        collections.Predicate predicate42 = null;
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap24, predicate41, predicate42);
        collections.Predicate predicate44 = null;
        collections.Predicate predicate45 = null;
        java.util.Map map46 = collections.map.PredicatedMap.decorate(map43, predicate44, predicate45);
        boolean b47 = defaultedMap21.containsKey((java.lang.Object) map43);
        defaultedMap14.putAll((java.util.Map) defaultedMap21);
        boolean b49 = defaultedMap11.equals((java.lang.Object) defaultedMap14);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.get((java.lang.Object) 0.0f);
        boolean b54 = defaultedMap51.isEmpty();
        java.lang.Object obj57 = defaultedMap51.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate58 = null;
        collections.Predicate predicate59 = null;
        java.util.Map map60 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap51, predicate58, predicate59);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set63 = defaultedMap62.keySet();
        java.util.Collection collection64 = defaultedMap62.values();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set67 = defaultedMap66.keySet();
        boolean b69 = defaultedMap66.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection70 = defaultedMap66.values();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) collection70);
        boolean b72 = defaultedMap71.isEmpty();
        boolean b73 = defaultedMap62.containsValue((java.lang.Object) defaultedMap71);
        boolean b74 = defaultedMap62.isEmpty();
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap62);
        boolean b76 = defaultedMap75.isEmpty();
        java.lang.Object obj77 = defaultedMap51.remove((java.lang.Object) defaultedMap75);
        java.util.Set set78 = defaultedMap51.keySet();
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap51);
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap51);
        boolean b81 = defaultedMap11.containsKey((java.lang.Object) defaultedMap80);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(i19 == 1);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "{}" + "'", str22.equals("{}"));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertNotNull(map46);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(map60);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(set78);
        org.junit.Assert.assertTrue(b81 == false);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        int i5 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) 1, obj27);
        boolean b30 = defaultedMap25.containsKey((java.lang.Object) 1);
        defaultedMap25.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) (byte) 100);
        int i36 = defaultedMap33.size();
        java.lang.Object obj37 = defaultedMap25.remove((java.lang.Object) defaultedMap33);
        boolean b38 = defaultedMap12.containsValue(obj37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = null;
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) 1, obj42);
        java.util.Set set44 = defaultedMap40.keySet();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) set44);
        java.lang.Object obj47 = defaultedMap12.put((java.lang.Object) defaultedMap45, (java.lang.Object) (-1L));
        java.lang.String str48 = defaultedMap45.toString();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) 1, obj52);
        java.util.Set set54 = defaultedMap50.keySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) set54);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = defaultedMap57.get((java.lang.Object) 0.0f);
        boolean b60 = defaultedMap57.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b63 = defaultedMap62.isEmpty();
        boolean b64 = defaultedMap62.isEmpty();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set67 = defaultedMap66.keySet();
        boolean b69 = defaultedMap66.containsKey((java.lang.Object) 0.0f);
        boolean b70 = defaultedMap62.containsKey((java.lang.Object) 0.0f);
        java.util.Map map71 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap57, (java.lang.Object) defaultedMap62);
        java.lang.Object obj72 = defaultedMap55.remove((java.lang.Object) defaultedMap57);
        java.lang.Object obj73 = defaultedMap1.put((java.lang.Object) defaultedMap45, (java.lang.Object) defaultedMap57);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj77 = defaultedMap75.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b80 = defaultedMap79.isEmpty();
        java.util.Set set81 = defaultedMap79.entrySet();
        boolean b82 = defaultedMap75.containsValue((java.lang.Object) set81);
        collections.map.DefaultedMap defaultedMap84 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj86 = defaultedMap84.remove((java.lang.Object) (byte) 100);
        java.util.Set set87 = defaultedMap84.keySet();
        java.lang.Object obj88 = defaultedMap75.get((java.lang.Object) defaultedMap84);
        java.lang.Object obj89 = null;
        java.lang.Object obj90 = defaultedMap84.get(obj89);
        boolean b91 = defaultedMap1.equals((java.lang.Object) defaultedMap84);
        collections.Predicate predicate92 = null;
        collections.Predicate predicate93 = null;
        java.util.Map map94 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap84, predicate92, predicate93);
        collections.Transformer transformer95 = null;
        try {
            java.util.Map map96 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap84, transformer95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "{}" + "'", str48.equals("{}"));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (byte) 0 + "'", obj59.equals((byte) 0));
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNotNull(map71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (byte) 0 + "'", obj77.equals((byte) 0));
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertNotNull(set81);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(set87);
        org.junit.Assert.assertTrue("'" + obj88 + "' != '" + (byte) 0 + "'", obj88.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj90 + "' != '" + 0 + "'", obj90.equals(0));
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertNotNull(map94);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        java.util.Set set6 = defaultedMap1.entrySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set6);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) ' ');
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        java.util.Set set30 = defaultedMap6.entrySet();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b33 = defaultedMap32.isEmpty();
        java.util.Set set34 = defaultedMap32.entrySet();
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) 0);
        boolean b37 = defaultedMap32.equals((java.lang.Object) 0);
        boolean b38 = defaultedMap6.containsKey((java.lang.Object) 0);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b41 = defaultedMap40.isEmpty();
        boolean b42 = defaultedMap40.isEmpty();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj51 = null;
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) 1, obj51);
        boolean b54 = defaultedMap49.containsKey((java.lang.Object) 1);
        defaultedMap49.clear();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj59 = defaultedMap57.remove((java.lang.Object) (byte) 100);
        int i60 = defaultedMap57.size();
        java.lang.Object obj61 = defaultedMap49.remove((java.lang.Object) defaultedMap57);
        boolean b62 = defaultedMap44.containsKey((java.lang.Object) defaultedMap49);
        java.lang.Object obj63 = defaultedMap40.remove((java.lang.Object) defaultedMap44);
        defaultedMap40.clear();
        java.util.Set set65 = defaultedMap40.entrySet();
        boolean b66 = defaultedMap6.containsValue((java.lang.Object) defaultedMap40);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) b66);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertTrue(b66 == false);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        int i25 = defaultedMap22.size();
        java.util.Set set26 = defaultedMap22.keySet();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set29 = defaultedMap28.keySet();
        java.util.Collection collection30 = defaultedMap28.values();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set33 = defaultedMap32.keySet();
        boolean b35 = defaultedMap32.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection36 = defaultedMap32.values();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) collection36);
        boolean b38 = defaultedMap37.isEmpty();
        boolean b39 = defaultedMap28.containsValue((java.lang.Object) defaultedMap37);
        java.lang.Object obj40 = new java.lang.Object();
        boolean b41 = defaultedMap37.containsValue(obj40);
        boolean b42 = defaultedMap22.containsValue(obj40);
        java.lang.Object obj43 = defaultedMap1.get(obj40);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b50 = defaultedMap49.isEmpty();
        java.util.Set set51 = defaultedMap49.entrySet();
        boolean b52 = defaultedMap45.containsValue((java.lang.Object) set51);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set55 = defaultedMap54.keySet();
        java.util.Collection collection56 = defaultedMap54.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set59 = defaultedMap58.keySet();
        boolean b61 = defaultedMap58.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        boolean b64 = defaultedMap63.isEmpty();
        boolean b65 = defaultedMap54.containsValue((java.lang.Object) defaultedMap63);
        boolean b66 = defaultedMap54.isEmpty();
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap54);
        boolean b68 = defaultedMap67.isEmpty();
        java.util.Collection collection69 = defaultedMap67.values();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj73 = defaultedMap71.remove((java.lang.Object) 1.0f);
        defaultedMap67.putAll((java.util.Map) defaultedMap71);
        java.util.Collection collection75 = defaultedMap67.values();
        java.util.Map map76 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap45, (java.lang.Object) collection75);
        boolean b77 = defaultedMap1.containsKey((java.lang.Object) defaultedMap45);
        java.lang.Object obj78 = null;
        java.util.Map map79 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, obj78);
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap(obj78);
        defaultedMap80.clear();
        java.util.Set set82 = defaultedMap80.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(set26);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertNotNull(collection36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + 0 + "'", obj43.equals(0));
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte) 0 + "'", obj47.equals((byte) 0));
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertNotNull(collection69);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(collection75);
        org.junit.Assert.assertNotNull(map76);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertNotNull(map79);
        org.junit.Assert.assertNotNull(set82);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        defaultedMap1.clear();
        java.util.Set set16 = defaultedMap1.entrySet();
        boolean b17 = defaultedMap1.isEmpty();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertTrue(b17 == true);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        boolean b7 = defaultedMap1.equals((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        collections.Predicate predicate14 = null;
        collections.Predicate predicate15 = null;
        java.util.Map map16 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate14, predicate15);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap18.clear();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = defaultedMap23.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = null;
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) 1, obj29);
        boolean b32 = defaultedMap27.containsKey((java.lang.Object) 1);
        defaultedMap27.clear();
        java.lang.Object obj34 = defaultedMap18.put((java.lang.Object) defaultedMap23, (java.lang.Object) defaultedMap27);
        java.lang.Object obj35 = null;
        boolean b36 = defaultedMap23.containsValue(obj35);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap38.isEmpty();
        boolean b40 = defaultedMap38.isEmpty();
        boolean b42 = defaultedMap38.equals((java.lang.Object) 10);
        java.lang.Object obj43 = defaultedMap23.get((java.lang.Object) b42);
        java.util.Map map44 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, (java.lang.Object) defaultedMap23);
        collections.Predicate predicate45 = null;
        collections.Predicate predicate46 = null;
        java.util.Map map47 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate45, predicate46);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.remove((java.lang.Object) 1.0f);
        java.lang.Object obj54 = defaultedMap50.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj58 = defaultedMap56.remove((java.lang.Object) 1.0f);
        java.lang.Object obj60 = defaultedMap56.remove((java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap50.get((java.lang.Object) 'a');
        java.lang.String str62 = defaultedMap50.toString();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set65 = defaultedMap64.keySet();
        java.util.Collection collection66 = defaultedMap64.values();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set69 = defaultedMap68.keySet();
        boolean b71 = defaultedMap68.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection72 = defaultedMap68.values();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) collection72);
        boolean b74 = defaultedMap73.isEmpty();
        boolean b75 = defaultedMap64.containsValue((java.lang.Object) defaultedMap73);
        boolean b76 = defaultedMap64.isEmpty();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap64);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj82 = defaultedMap79.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap64.putAll((java.util.Map) defaultedMap79);
        java.lang.Object obj84 = defaultedMap50.get((java.lang.Object) defaultedMap64);
        boolean b85 = defaultedMap9.equals((java.lang.Object) defaultedMap64);
        java.util.Map map86 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap64);
        collections.map.DefaultedMap defaultedMap87 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        int i88 = defaultedMap87.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertNotNull(map16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 0 + "'", obj43.equals((byte) 0));
        org.junit.Assert.assertNotNull(map44);
        org.junit.Assert.assertNotNull(map47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (byte) 0 + "'", obj61.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "{}" + "'", str62.equals("{}"));
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertNotNull(collection66);
        org.junit.Assert.assertNotNull(set69);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(collection72);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + obj84 + "' != '" + (byte) 0 + "'", obj84.equals((byte) 0));
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertNotNull(map86);
        org.junit.Assert.assertTrue(i88 == 0);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = null;
        boolean b32 = defaultedMap19.containsValue(obj31);
        java.util.Set set33 = defaultedMap19.entrySet();
        java.util.Collection collection34 = defaultedMap19.values();
        java.lang.Object obj35 = defaultedMap1.get((java.lang.Object) defaultedMap19);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertNotNull(collection34);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        boolean b30 = defaultedMap6.isEmpty();
        collections.Predicate predicate31 = null;
        collections.Predicate predicate32 = null;
        java.util.Map map33 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap6, predicate31, predicate32);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set36 = defaultedMap35.keySet();
        java.util.Collection collection37 = defaultedMap35.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set40 = defaultedMap39.keySet();
        boolean b42 = defaultedMap39.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection43 = defaultedMap39.values();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) collection43);
        boolean b45 = defaultedMap44.isEmpty();
        boolean b46 = defaultedMap35.containsValue((java.lang.Object) defaultedMap44);
        java.lang.Object obj47 = new java.lang.Object();
        boolean b48 = defaultedMap44.containsValue(obj47);
        boolean b49 = defaultedMap44.isEmpty();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap44);
        collections.Predicate predicate51 = null;
        collections.Predicate predicate52 = null;
        java.util.Map map53 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap50, predicate51, predicate52);
        boolean b54 = defaultedMap6.containsKey((java.lang.Object) defaultedMap50);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(map33);
        org.junit.Assert.assertNotNull(set36);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(collection43);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertNotNull(map53);
        org.junit.Assert.assertTrue(b54 == false);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set7 = defaultedMap6.keySet();
        java.util.Collection collection8 = defaultedMap6.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection14 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) collection14);
        boolean b16 = defaultedMap15.isEmpty();
        boolean b17 = defaultedMap6.containsValue((java.lang.Object) defaultedMap15);
        boolean b18 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap6);
        boolean b20 = defaultedMap19.isEmpty();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        defaultedMap22.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        boolean b36 = defaultedMap31.containsKey((java.lang.Object) 1);
        defaultedMap31.clear();
        java.lang.Object obj38 = defaultedMap22.put((java.lang.Object) defaultedMap27, (java.lang.Object) defaultedMap31);
        java.lang.Object obj39 = null;
        boolean b40 = defaultedMap27.containsValue(obj39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b43 = defaultedMap42.isEmpty();
        boolean b44 = defaultedMap42.isEmpty();
        boolean b46 = defaultedMap42.equals((java.lang.Object) 10);
        java.lang.Object obj47 = defaultedMap27.get((java.lang.Object) b46);
        java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap19, (java.lang.Object) b46);
        java.lang.Object obj49 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        int i50 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = defaultedMap52.remove((java.lang.Object) 1.0f);
        defaultedMap52.clear();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = defaultedMap57.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = null;
        java.lang.Object obj64 = defaultedMap61.put((java.lang.Object) 1, obj63);
        boolean b66 = defaultedMap61.containsKey((java.lang.Object) 1);
        defaultedMap61.clear();
        java.lang.Object obj68 = defaultedMap52.put((java.lang.Object) defaultedMap57, (java.lang.Object) defaultedMap61);
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj72 = null;
        java.lang.Object obj73 = defaultedMap70.put((java.lang.Object) 1, obj72);
        boolean b75 = defaultedMap70.containsKey((java.lang.Object) 1);
        defaultedMap70.clear();
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj80 = defaultedMap78.remove((java.lang.Object) (byte) 100);
        int i81 = defaultedMap78.size();
        java.lang.Object obj82 = defaultedMap70.remove((java.lang.Object) defaultedMap78);
        boolean b83 = defaultedMap57.containsValue(obj82);
        boolean b84 = defaultedMap1.containsKey(obj82);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(collection14);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte) 0 + "'", obj47.equals((byte) 0));
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue(i50 == 1);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == false);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        boolean b35 = defaultedMap1.isEmpty();
        java.util.Set set36 = defaultedMap1.entrySet();
        java.lang.Object obj37 = null;
        boolean b38 = defaultedMap1.equals(obj37);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) b38);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(set36);
        org.junit.Assert.assertTrue(b38 == false);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        java.util.Set set30 = defaultedMap24.keySet();
        defaultedMap24.clear();
        java.lang.Object obj32 = null;
        boolean b33 = defaultedMap24.equals(obj32);
        boolean b34 = defaultedMap24.isEmpty();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == true);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        java.lang.Object obj23 = defaultedMap6.get((java.lang.Object) defaultedMap18);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = defaultedMap25.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b30 = defaultedMap29.isEmpty();
        java.util.Set set31 = defaultedMap29.entrySet();
        boolean b32 = defaultedMap25.containsValue((java.lang.Object) set31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) (byte) 100);
        java.util.Set set37 = defaultedMap34.keySet();
        java.lang.Object obj38 = defaultedMap25.get((java.lang.Object) defaultedMap34);
        defaultedMap6.putAll((java.util.Map) defaultedMap34);
        boolean b40 = defaultedMap6.isEmpty();
        defaultedMap6.clear();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 0 + "'", obj23.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + (byte) 0 + "'", obj27.equals((byte) 0));
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte) 0 + "'", obj38.equals((byte) 0));
        org.junit.Assert.assertTrue(b40 == true);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        java.util.Collection collection21 = defaultedMap6.values();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set24 = defaultedMap23.keySet();
        java.util.Collection collection25 = defaultedMap23.values();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set28 = defaultedMap27.keySet();
        boolean b30 = defaultedMap27.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection31 = defaultedMap27.values();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) collection31);
        boolean b33 = defaultedMap32.isEmpty();
        boolean b34 = defaultedMap23.containsValue((java.lang.Object) defaultedMap32);
        int i35 = defaultedMap32.size();
        defaultedMap32.clear();
        java.lang.Object obj37 = defaultedMap6.get((java.lang.Object) defaultedMap32);
        collections.Predicate predicate38 = null;
        collections.Predicate predicate39 = null;
        java.util.Map map40 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap32, predicate38, predicate39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = defaultedMap42.get((java.lang.Object) 0.0f);
        boolean b45 = defaultedMap42.isEmpty();
        java.util.Set set46 = defaultedMap42.entrySet();
        java.lang.Object obj47 = defaultedMap32.get((java.lang.Object) defaultedMap42);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(collection31);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (byte) 0 + "'", obj37.equals((byte) 0));
        org.junit.Assert.assertNotNull(map40);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte) 0 + "'", obj44.equals((byte) 0));
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(set46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection11 = defaultedMap10.values();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) collection11);
        java.util.Collection collection13 = defaultedMap1.values();
        boolean b14 = defaultedMap1.isEmpty();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue(b14 == false);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap12.remove(obj25);
        java.util.Collection collection27 = defaultedMap12.values();
        boolean b28 = defaultedMap12.isEmpty();
        java.util.Set set29 = defaultedMap12.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(collection27);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(set29);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap12);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        defaultedMap26.clear();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = defaultedMap31.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = null;
        java.lang.Object obj38 = defaultedMap35.put((java.lang.Object) 1, obj37);
        boolean b40 = defaultedMap35.containsKey((java.lang.Object) 1);
        defaultedMap35.clear();
        java.lang.Object obj42 = defaultedMap26.put((java.lang.Object) defaultedMap31, (java.lang.Object) defaultedMap35);
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = null;
        java.lang.Object obj47 = defaultedMap44.put((java.lang.Object) 1, obj46);
        boolean b49 = defaultedMap44.containsKey((java.lang.Object) 1);
        defaultedMap44.clear();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj54 = defaultedMap52.remove((java.lang.Object) (byte) 100);
        int i55 = defaultedMap52.size();
        java.lang.Object obj56 = defaultedMap44.remove((java.lang.Object) defaultedMap52);
        boolean b57 = defaultedMap31.containsValue(obj56);
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj61 = null;
        java.lang.Object obj62 = defaultedMap59.put((java.lang.Object) 1, obj61);
        java.util.Set set63 = defaultedMap59.keySet();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) set63);
        java.lang.Object obj66 = defaultedMap31.put((java.lang.Object) defaultedMap64, (java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set69 = defaultedMap68.keySet();
        java.util.Collection collection70 = defaultedMap68.values();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set73 = defaultedMap72.keySet();
        boolean b75 = defaultedMap72.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection76 = defaultedMap72.values();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) collection76);
        boolean b78 = defaultedMap77.isEmpty();
        boolean b79 = defaultedMap68.containsValue((java.lang.Object) defaultedMap77);
        boolean b80 = defaultedMap68.isEmpty();
        collections.map.DefaultedMap defaultedMap81 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap68);
        boolean b82 = defaultedMap81.isEmpty();
        java.util.Collection collection83 = defaultedMap81.values();
        collections.map.DefaultedMap defaultedMap85 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj87 = defaultedMap85.remove((java.lang.Object) 1.0f);
        defaultedMap81.putAll((java.util.Map) defaultedMap85);
        java.util.Collection collection89 = defaultedMap81.values();
        java.util.Map map90 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap31, (java.lang.Object) collection89);
        java.util.Set set91 = defaultedMap31.keySet();
        boolean b92 = defaultedMap1.containsValue((java.lang.Object) defaultedMap31);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(set69);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertNotNull(set73);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertNotNull(collection76);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertNotNull(collection83);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(collection89);
        org.junit.Assert.assertNotNull(map90);
        org.junit.Assert.assertNotNull(set91);
        org.junit.Assert.assertTrue(b92 == false);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        int i5 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) 1, obj27);
        boolean b30 = defaultedMap25.containsKey((java.lang.Object) 1);
        defaultedMap25.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) (byte) 100);
        int i36 = defaultedMap33.size();
        java.lang.Object obj37 = defaultedMap25.remove((java.lang.Object) defaultedMap33);
        boolean b38 = defaultedMap12.containsValue(obj37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = null;
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) 1, obj42);
        java.util.Set set44 = defaultedMap40.keySet();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) set44);
        java.lang.Object obj47 = defaultedMap12.put((java.lang.Object) defaultedMap45, (java.lang.Object) (-1L));
        java.lang.String str48 = defaultedMap45.toString();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) 1, obj52);
        java.util.Set set54 = defaultedMap50.keySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) set54);
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = defaultedMap57.get((java.lang.Object) 0.0f);
        boolean b60 = defaultedMap57.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b63 = defaultedMap62.isEmpty();
        boolean b64 = defaultedMap62.isEmpty();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set67 = defaultedMap66.keySet();
        boolean b69 = defaultedMap66.containsKey((java.lang.Object) 0.0f);
        boolean b70 = defaultedMap62.containsKey((java.lang.Object) 0.0f);
        java.util.Map map71 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap57, (java.lang.Object) defaultedMap62);
        java.lang.Object obj72 = defaultedMap55.remove((java.lang.Object) defaultedMap57);
        java.lang.Object obj73 = defaultedMap1.put((java.lang.Object) defaultedMap45, (java.lang.Object) defaultedMap57);
        collections.Transformer transformer74 = null;
        try {
            java.util.Map map75 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap45, transformer74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "{}" + "'", str48.equals("{}"));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue("'" + obj59 + "' != '" + (byte) 0 + "'", obj59.equals((byte) 0));
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNotNull(map71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        boolean b35 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj38 = defaultedMap1.remove((java.lang.Object) defaultedMap37);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = null;
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) 1, obj42);
        java.util.Set set44 = defaultedMap40.keySet();
        int i45 = defaultedMap40.size();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj49 = defaultedMap47.remove((java.lang.Object) 1.0f);
        java.lang.Object obj51 = defaultedMap47.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj55 = defaultedMap53.remove((java.lang.Object) 1.0f);
        java.lang.Object obj57 = defaultedMap53.remove((java.lang.Object) 'a');
        java.lang.Object obj58 = defaultedMap47.get((java.lang.Object) 'a');
        boolean b59 = defaultedMap40.containsKey(obj58);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection62 = defaultedMap61.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        java.lang.Object obj64 = defaultedMap40.remove((java.lang.Object) collection62);
        java.lang.Object obj65 = defaultedMap37.remove((java.lang.Object) defaultedMap40);
        collections.Factory factory66 = null;
        try {
            java.util.Map map67 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap40, factory66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (byte) 0 + "'", obj58.equals((byte) 0));
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap6, predicate8, predicate9);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(map10);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap1.putAll((java.util.Map) defaultedMap16);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        java.lang.String str27 = defaultedMap22.toString();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.get((java.lang.Object) 0.0f);
        boolean b32 = defaultedMap29.isEmpty();
        java.lang.Object obj35 = defaultedMap29.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        boolean b37 = defaultedMap22.equals((java.lang.Object) defaultedMap36);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.get((java.lang.Object) 0.0f);
        boolean b42 = defaultedMap39.isEmpty();
        int i43 = defaultedMap39.size();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap39);
        java.util.Set set45 = defaultedMap39.keySet();
        boolean b46 = defaultedMap36.containsValue((java.lang.Object) set45);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection49 = defaultedMap48.values();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) collection49);
        boolean b51 = defaultedMap36.containsValue((java.lang.Object) defaultedMap50);
        java.lang.Object obj52 = defaultedMap16.remove((java.lang.Object) defaultedMap36);
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b55 = defaultedMap54.isEmpty();
        boolean b56 = defaultedMap54.isEmpty();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.get((java.lang.Object) 0.0f);
        boolean b61 = defaultedMap58.isEmpty();
        java.lang.Object obj64 = defaultedMap58.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap58);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection68 = defaultedMap67.values();
        boolean b69 = defaultedMap58.containsValue((java.lang.Object) collection68);
        boolean b70 = defaultedMap54.containsKey((java.lang.Object) defaultedMap58);
        java.util.Set set71 = defaultedMap54.entrySet();
        java.util.Collection collection72 = defaultedMap54.values();
        java.util.Map map73 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap36, (java.lang.Object) collection72);
        java.util.Set set74 = defaultedMap36.keySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "{}" + "'", str27.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(collection49);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (byte) 0 + "'", obj60.equals((byte) 0));
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(collection68);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNotNull(set71);
        org.junit.Assert.assertNotNull(collection72);
        org.junit.Assert.assertNotNull(map73);
        org.junit.Assert.assertNotNull(set74);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        java.lang.String str14 = defaultedMap10.toString();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b21 = defaultedMap20.isEmpty();
        java.util.Set set22 = defaultedMap20.entrySet();
        boolean b23 = defaultedMap16.containsValue((java.lang.Object) set22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set26 = defaultedMap25.keySet();
        java.util.Collection collection27 = defaultedMap25.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set30 = defaultedMap29.keySet();
        boolean b32 = defaultedMap29.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection33 = defaultedMap29.values();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) collection33);
        boolean b35 = defaultedMap34.isEmpty();
        boolean b36 = defaultedMap25.containsValue((java.lang.Object) defaultedMap34);
        boolean b37 = defaultedMap25.isEmpty();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap25);
        boolean b39 = defaultedMap38.isEmpty();
        java.util.Collection collection40 = defaultedMap38.values();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = defaultedMap42.remove((java.lang.Object) 1.0f);
        defaultedMap38.putAll((java.util.Map) defaultedMap42);
        java.util.Collection collection46 = defaultedMap38.values();
        java.util.Map map47 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap16, (java.lang.Object) collection46);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set50 = defaultedMap49.keySet();
        boolean b52 = defaultedMap49.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection53 = defaultedMap49.values();
        java.lang.String str54 = defaultedMap49.toString();
        collections.Predicate predicate55 = null;
        collections.Predicate predicate56 = null;
        java.util.Map map57 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap49, predicate55, predicate56);
        java.util.Map map58 = collections.map.DefaultedMap.decorate(map47, (java.lang.Object) map57);
        java.util.Map map59 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap10, (java.lang.Object) map57);
        collections.Predicate predicate60 = null;
        collections.Predicate predicate61 = null;
        java.util.Map map62 = collections.map.PredicatedMap.decorate(map59, predicate60, predicate61);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set65 = defaultedMap64.keySet();
        java.util.Collection collection66 = defaultedMap64.values();
        java.lang.Object obj67 = defaultedMap1.put((java.lang.Object) predicate60, (java.lang.Object) collection66);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) predicate60);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "{1=null}" + "'", str14.equals("{1=null}"));
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (byte) 0 + "'", obj18.equals((byte) 0));
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(set26);
        org.junit.Assert.assertNotNull(collection27);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(collection33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNotNull(collection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(collection46);
        org.junit.Assert.assertNotNull(map47);
        org.junit.Assert.assertNotNull(set50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(collection53);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "{}" + "'", str54.equals("{}"));
        org.junit.Assert.assertNotNull(map57);
        org.junit.Assert.assertNotNull(map58);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNotNull(map62);
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertNotNull(collection66);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap14.putAll((java.util.Map) defaultedMap18);
        java.util.Collection collection22 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = defaultedMap24.get((java.lang.Object) 0.0f);
        boolean b27 = defaultedMap24.isEmpty();
        java.lang.Object obj30 = defaultedMap24.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        java.util.Set set32 = defaultedMap31.keySet();
        java.lang.Object obj33 = defaultedMap14.remove((java.lang.Object) defaultedMap31);
        boolean b34 = defaultedMap31.isEmpty();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b34 == true);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        java.util.Set set35 = defaultedMap19.entrySet();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = defaultedMap37.remove((java.lang.Object) 1.0f);
        defaultedMap37.clear();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = defaultedMap42.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj48 = null;
        java.lang.Object obj49 = defaultedMap46.put((java.lang.Object) 1, obj48);
        boolean b51 = defaultedMap46.containsKey((java.lang.Object) 1);
        defaultedMap46.clear();
        java.lang.Object obj53 = defaultedMap37.put((java.lang.Object) defaultedMap42, (java.lang.Object) defaultedMap46);
        defaultedMap19.putAll((java.util.Map) defaultedMap46);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        java.util.Map map0 = null;
        collections.map.DefaultedMap defaultedMap2 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj4 = defaultedMap2.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b7 = defaultedMap6.isEmpty();
        java.util.Set set8 = defaultedMap6.entrySet();
        boolean b9 = defaultedMap2.containsValue((java.lang.Object) set8);
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj13 = defaultedMap11.remove((java.lang.Object) (byte) 100);
        java.util.Set set14 = defaultedMap11.keySet();
        java.lang.Object obj15 = defaultedMap2.get((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        java.util.Collection collection19 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap21.keySet();
        boolean b24 = defaultedMap21.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection25 = defaultedMap21.values();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) collection25);
        boolean b27 = defaultedMap26.isEmpty();
        boolean b28 = defaultedMap17.containsValue((java.lang.Object) defaultedMap26);
        boolean b29 = defaultedMap17.isEmpty();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap17);
        boolean b31 = defaultedMap30.isEmpty();
        java.util.Collection collection32 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap30.putAll((java.util.Map) defaultedMap34);
        java.util.Collection collection38 = defaultedMap30.values();
        boolean b39 = defaultedMap2.equals((java.lang.Object) defaultedMap30);
        try {
            java.util.Map map40 = collections.map.DefaultedMap.decorate(map0, (java.lang.Object) defaultedMap30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue("'" + obj15 + "' != '" + (byte) 0 + "'", obj15.equals((byte) 0));
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = null;
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) 1, obj14);
        boolean b17 = defaultedMap12.containsKey((java.lang.Object) 1);
        java.util.Map map18 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap12);
        collections.Factory factory19 = null;
        try {
            java.util.Map map20 = collections.map.DefaultedMap.decorate(map18, factory19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(map18);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        java.util.Collection collection45 = defaultedMap43.values();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap47.keySet();
        boolean b50 = defaultedMap47.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection51 = defaultedMap47.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) collection51);
        boolean b53 = defaultedMap52.isEmpty();
        boolean b54 = defaultedMap43.containsValue((java.lang.Object) defaultedMap52);
        boolean b55 = defaultedMap43.isEmpty();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap43);
        boolean b57 = defaultedMap56.isEmpty();
        java.util.Collection collection58 = defaultedMap56.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = defaultedMap60.remove((java.lang.Object) 1.0f);
        defaultedMap56.putAll((java.util.Map) defaultedMap60);
        java.util.Collection collection64 = defaultedMap56.values();
        java.util.Map map65 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, (java.lang.Object) collection64);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = null;
        java.lang.Object obj70 = defaultedMap67.put((java.lang.Object) 1, obj69);
        defaultedMap67.clear();
        java.util.Set set72 = defaultedMap67.entrySet();
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection75 = defaultedMap74.values();
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap74);
        boolean b77 = defaultedMap67.containsKey((java.lang.Object) defaultedMap74);
        java.lang.Object obj79 = defaultedMap74.remove((java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap81 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set82 = defaultedMap81.keySet();
        boolean b84 = defaultedMap81.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection85 = defaultedMap81.values();
        collections.map.DefaultedMap defaultedMap86 = new collections.map.DefaultedMap((java.lang.Object) collection85);
        int i87 = defaultedMap86.size();
        collections.Predicate predicate88 = null;
        collections.Predicate predicate89 = null;
        java.util.Map map90 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap86, predicate88, predicate89);
        collections.Predicate predicate91 = null;
        collections.Predicate predicate92 = null;
        java.util.Map map93 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap86, predicate91, predicate92);
        java.util.Map map94 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap74, (java.lang.Object) map93);
        java.lang.Object obj95 = defaultedMap6.get((java.lang.Object) map93);
        defaultedMap6.clear();
        defaultedMap6.clear();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(collection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertNotNull(map65);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(set72);
        org.junit.Assert.assertNotNull(collection75);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(set82);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertNotNull(collection85);
        org.junit.Assert.assertTrue(i87 == 0);
        org.junit.Assert.assertNotNull(map90);
        org.junit.Assert.assertNotNull(map93);
        org.junit.Assert.assertNotNull(map94);
        org.junit.Assert.assertTrue("'" + obj95 + "' != '" + (-1L) + "'", obj95.equals((-1L)));
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        java.util.Collection collection7 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) collection13);
        boolean b15 = defaultedMap14.isEmpty();
        boolean b16 = defaultedMap5.containsValue((java.lang.Object) defaultedMap14);
        boolean b17 = defaultedMap5.isEmpty();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap5.putAll((java.util.Map) defaultedMap20);
        defaultedMap1.putAll((java.util.Map) defaultedMap20);
        int i26 = defaultedMap1.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(i26 == 1);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        int i19 = defaultedMap18.size();
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate20, predicate21);
        java.lang.Object obj23 = defaultedMap6.get((java.lang.Object) defaultedMap18);
        java.util.Set set24 = defaultedMap18.entrySet();
        java.util.Set set25 = defaultedMap18.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 0 + "'", obj23.equals((byte) 0));
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(set25);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        boolean b15 = defaultedMap14.isEmpty();
        java.util.Collection collection16 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap14.putAll((java.util.Map) defaultedMap18);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set24 = defaultedMap23.keySet();
        boolean b26 = defaultedMap23.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection27 = defaultedMap23.values();
        java.lang.String str28 = defaultedMap23.toString();
        collections.Predicate predicate29 = null;
        collections.Predicate predicate30 = null;
        java.util.Map map31 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap23, predicate29, predicate30);
        java.util.Collection collection32 = defaultedMap23.values();
        java.util.Map map33 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap18, (java.lang.Object) defaultedMap23);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = defaultedMap35.get((java.lang.Object) 0.0f);
        boolean b38 = defaultedMap35.isEmpty();
        java.lang.Object obj41 = defaultedMap35.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap35);
        java.util.Set set43 = defaultedMap42.entrySet();
        java.lang.Object obj44 = defaultedMap18.get((java.lang.Object) defaultedMap42);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(collection27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "{}" + "'", str28.equals("{}"));
        org.junit.Assert.assertNotNull(map31);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertNotNull(map33);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (byte) 0 + "'", obj37.equals((byte) 0));
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + (byte) 0 + "'", obj44.equals((byte) 0));
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        defaultedMap6.putAll((java.util.Map) defaultedMap8);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        defaultedMap13.clear();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap13);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set21 = defaultedMap20.keySet();
        java.util.Collection collection22 = defaultedMap20.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        boolean b27 = defaultedMap24.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) collection28);
        boolean b30 = defaultedMap29.isEmpty();
        boolean b31 = defaultedMap20.containsValue((java.lang.Object) defaultedMap29);
        int i32 = defaultedMap29.size();
        java.lang.Object obj33 = defaultedMap18.get((java.lang.Object) defaultedMap29);
        defaultedMap6.putAll((java.util.Map) defaultedMap18);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set37 = defaultedMap36.keySet();
        boolean b39 = defaultedMap36.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection40 = defaultedMap36.values();
        java.lang.String str41 = defaultedMap36.toString();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = defaultedMap43.get((java.lang.Object) 0.0f);
        boolean b46 = defaultedMap43.isEmpty();
        java.lang.Object obj49 = defaultedMap43.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap43);
        boolean b51 = defaultedMap36.equals((java.lang.Object) defaultedMap50);
        defaultedMap50.clear();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = defaultedMap54.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap58.isEmpty();
        java.util.Set set60 = defaultedMap58.entrySet();
        boolean b61 = defaultedMap54.containsValue((java.lang.Object) set60);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj65 = defaultedMap63.remove((java.lang.Object) (byte) 100);
        java.util.Set set66 = defaultedMap63.keySet();
        java.lang.Object obj67 = defaultedMap54.get((java.lang.Object) defaultedMap63);
        collections.map.DefaultedMap defaultedMap69 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set70 = defaultedMap69.keySet();
        boolean b72 = defaultedMap69.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection73 = defaultedMap69.values();
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) collection73);
        int i75 = defaultedMap74.size();
        collections.Predicate predicate76 = null;
        collections.Predicate predicate77 = null;
        java.util.Map map78 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap74, predicate76, predicate77);
        boolean b79 = defaultedMap63.containsKey((java.lang.Object) map78);
        java.util.Set set80 = defaultedMap63.keySet();
        java.lang.Object obj81 = defaultedMap50.get((java.lang.Object) set80);
        java.lang.Object obj82 = defaultedMap18.remove(obj81);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(collection40);
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "{}" + "'", str41.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (byte) 0 + "'", obj45.equals((byte) 0));
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (byte) 0 + "'", obj56.equals((byte) 0));
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(set66);
        org.junit.Assert.assertTrue("'" + obj67 + "' != '" + (byte) 0 + "'", obj67.equals((byte) 0));
        org.junit.Assert.assertNotNull(set70);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(collection73);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertNotNull(map78);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertNotNull(set80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        java.util.Set set14 = defaultedMap10.keySet();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        java.util.Collection collection18 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set21 = defaultedMap20.keySet();
        boolean b23 = defaultedMap20.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection24 = defaultedMap20.values();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) collection24);
        boolean b26 = defaultedMap25.isEmpty();
        boolean b27 = defaultedMap16.containsValue((java.lang.Object) defaultedMap25);
        java.lang.Object obj28 = new java.lang.Object();
        boolean b29 = defaultedMap25.containsValue(obj28);
        boolean b30 = defaultedMap10.containsValue(obj28);
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = null;
        java.lang.Object obj35 = defaultedMap32.put((java.lang.Object) 1, obj34);
        boolean b37 = defaultedMap32.containsKey((java.lang.Object) 1);
        defaultedMap32.clear();
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection41 = defaultedMap40.values();
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) collection41);
        boolean b43 = defaultedMap32.containsValue((java.lang.Object) defaultedMap42);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = null;
        java.lang.Object obj48 = defaultedMap45.put((java.lang.Object) 1, obj47);
        java.util.Set set49 = defaultedMap45.keySet();
        int i50 = defaultedMap45.size();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.String str53 = defaultedMap52.toString();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj57 = defaultedMap55.remove((java.lang.Object) 1.0f);
        defaultedMap55.clear();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = defaultedMap60.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = null;
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) 1, obj66);
        boolean b69 = defaultedMap64.containsKey((java.lang.Object) 1);
        defaultedMap64.clear();
        java.lang.Object obj71 = defaultedMap55.put((java.lang.Object) defaultedMap60, (java.lang.Object) defaultedMap64);
        collections.Predicate predicate72 = null;
        collections.Predicate predicate73 = null;
        java.util.Map map74 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap55, predicate72, predicate73);
        collections.Predicate predicate75 = null;
        collections.Predicate predicate76 = null;
        java.util.Map map77 = collections.map.PredicatedMap.decorate(map74, predicate75, predicate76);
        boolean b78 = defaultedMap52.containsKey((java.lang.Object) map74);
        defaultedMap45.putAll((java.util.Map) defaultedMap52);
        boolean b80 = defaultedMap42.equals((java.lang.Object) defaultedMap45);
        collections.map.DefaultedMap defaultedMap82 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj84 = defaultedMap82.remove((java.lang.Object) 1.0f);
        java.lang.Object obj86 = defaultedMap82.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj90 = defaultedMap88.remove((java.lang.Object) 1.0f);
        java.lang.Object obj92 = defaultedMap88.remove((java.lang.Object) 'a');
        java.lang.Object obj93 = defaultedMap82.get((java.lang.Object) 'a');
        defaultedMap82.clear();
        boolean b95 = defaultedMap82.isEmpty();
        defaultedMap82.clear();
        java.util.Set set97 = defaultedMap82.entrySet();
        collections.map.DefaultedMap defaultedMap98 = new collections.map.DefaultedMap((java.lang.Object) set97);
        java.lang.Object obj99 = defaultedMap10.put((java.lang.Object) defaultedMap42, (java.lang.Object) defaultedMap98);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(collection41);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(set49);
        org.junit.Assert.assertTrue(i50 == 1);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "{}" + "'", str53.equals("{}"));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(map74);
        org.junit.Assert.assertNotNull(map77);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + obj93 + "' != '" + (byte) 0 + "'", obj93.equals((byte) 0));
        org.junit.Assert.assertTrue(b95 == true);
        org.junit.Assert.assertNotNull(set97);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) "");
        boolean b17 = defaultedMap1.containsKey((java.lang.Object) defaultedMap16);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap16, predicate18, predicate19);
        java.util.Collection collection21 = defaultedMap16.values();
        java.lang.Object obj22 = null;
        boolean b23 = defaultedMap16.containsValue(obj22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set26 = defaultedMap25.keySet();
        boolean b28 = defaultedMap25.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        java.util.Set set34 = defaultedMap30.keySet();
        java.lang.Object obj35 = defaultedMap25.get((java.lang.Object) defaultedMap30);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        java.util.Collection collection39 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set42 = defaultedMap41.keySet();
        boolean b44 = defaultedMap41.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection45 = defaultedMap41.values();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) collection45);
        boolean b47 = defaultedMap46.isEmpty();
        boolean b48 = defaultedMap37.containsValue((java.lang.Object) defaultedMap46);
        java.lang.Object obj49 = new java.lang.Object();
        boolean b50 = defaultedMap46.containsValue(obj49);
        defaultedMap25.putAll((java.util.Map) defaultedMap46);
        java.util.Collection collection52 = defaultedMap46.values();
        java.lang.Object obj53 = defaultedMap16.remove((java.lang.Object) defaultedMap46);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(set26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertNotNull(set42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        java.lang.Object obj25 = null;
        boolean b26 = defaultedMap12.containsValue(obj25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = defaultedMap28.remove((java.lang.Object) 1.0f);
        defaultedMap28.clear();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = null;
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) 1, obj39);
        boolean b42 = defaultedMap37.containsKey((java.lang.Object) 1);
        defaultedMap37.clear();
        java.lang.Object obj44 = defaultedMap28.put((java.lang.Object) defaultedMap33, (java.lang.Object) defaultedMap37);
        defaultedMap12.putAll((java.util.Map) defaultedMap33);
        java.util.Collection collection46 = defaultedMap33.values();
        java.util.Collection collection47 = defaultedMap33.values();
        java.lang.String str48 = defaultedMap33.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(collection46);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "{}" + "'", str48.equals("{}"));
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        java.util.Set set24 = defaultedMap22.keySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        java.util.Collection collection28 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap30.keySet();
        boolean b33 = defaultedMap30.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection34 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) collection34);
        boolean b36 = defaultedMap35.isEmpty();
        boolean b37 = defaultedMap26.containsValue((java.lang.Object) defaultedMap35);
        int i38 = defaultedMap35.size();
        java.util.Set set39 = defaultedMap35.keySet();
        defaultedMap22.putAll((java.util.Map) defaultedMap35);
        java.lang.Object obj41 = defaultedMap1.get((java.lang.Object) defaultedMap22);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj45 = defaultedMap43.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap47.keySet();
        boolean b50 = defaultedMap47.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection51 = defaultedMap47.values();
        java.lang.Object obj52 = defaultedMap43.get((java.lang.Object) collection51);
        int i53 = defaultedMap43.size();
        boolean b54 = defaultedMap1.containsKey((java.lang.Object) defaultedMap43);
        java.util.Set set55 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(collection34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + 0 + "'", obj52.equals(0));
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertNotNull(set55);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection10 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) collection10);
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap11);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        boolean b18 = defaultedMap1.containsValue((java.lang.Object) 0.0f);
        java.util.Set set19 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        boolean b25 = defaultedMap22.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection26 = defaultedMap22.values();
        java.lang.String str27 = defaultedMap22.toString();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.get((java.lang.Object) 0.0f);
        boolean b32 = defaultedMap29.isEmpty();
        java.lang.Object obj35 = defaultedMap29.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap29);
        boolean b37 = defaultedMap22.equals((java.lang.Object) defaultedMap36);
        defaultedMap36.clear();
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set41 = defaultedMap40.keySet();
        boolean b43 = defaultedMap40.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection44 = defaultedMap40.values();
        java.lang.String str45 = defaultedMap40.toString();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap47.keySet();
        boolean b50 = defaultedMap47.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection51 = defaultedMap47.values();
        java.lang.String str52 = defaultedMap47.toString();
        collections.Predicate predicate53 = null;
        collections.Predicate predicate54 = null;
        java.util.Map map55 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap47, predicate53, predicate54);
        java.lang.Object obj56 = defaultedMap36.put((java.lang.Object) defaultedMap40, (java.lang.Object) map55);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set59 = defaultedMap58.keySet();
        boolean b61 = defaultedMap58.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        boolean b64 = defaultedMap63.isEmpty();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj68 = defaultedMap66.remove((java.lang.Object) 1.0f);
        defaultedMap66.clear();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj73 = defaultedMap71.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj77 = null;
        java.lang.Object obj78 = defaultedMap75.put((java.lang.Object) 1, obj77);
        boolean b80 = defaultedMap75.containsKey((java.lang.Object) 1);
        defaultedMap75.clear();
        java.lang.Object obj82 = defaultedMap66.put((java.lang.Object) defaultedMap71, (java.lang.Object) defaultedMap75);
        collections.Predicate predicate83 = null;
        collections.Predicate predicate84 = null;
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap66, predicate83, predicate84);
        java.lang.Object obj86 = defaultedMap63.get((java.lang.Object) predicate83);
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj90 = null;
        java.lang.Object obj91 = defaultedMap88.put((java.lang.Object) 1, obj90);
        java.util.Set set92 = defaultedMap88.keySet();
        boolean b93 = defaultedMap63.containsValue((java.lang.Object) set92);
        java.lang.Object obj94 = defaultedMap1.put((java.lang.Object) map55, (java.lang.Object) b93);
        defaultedMap1.clear();
        java.util.Collection collection96 = defaultedMap1.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "{}" + "'", str27.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(collection44);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "{}" + "'", str45.equals("{}"));
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "{}" + "'", str52.equals("{}"));
        org.junit.Assert.assertNotNull(map55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(map85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(set92);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(collection96);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        java.util.Collection collection33 = defaultedMap6.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(collection33);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (short) 0);
        java.util.Set set2 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj6 = null;
        java.lang.Object obj7 = defaultedMap4.put((java.lang.Object) 1, obj6);
        defaultedMap4.clear();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.lang.Object obj13 = defaultedMap10.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        java.lang.Object obj19 = defaultedMap15.remove((java.lang.Object) 'a');
        defaultedMap10.putAll((java.util.Map) defaultedMap15);
        collections.Predicate predicate21 = null;
        collections.Predicate predicate22 = null;
        java.util.Map map23 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap10, predicate21, predicate22);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set26 = defaultedMap25.keySet();
        boolean b28 = defaultedMap25.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection29 = defaultedMap25.values();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) collection29);
        boolean b31 = defaultedMap30.isEmpty();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = defaultedMap33.remove((java.lang.Object) 1.0f);
        defaultedMap33.clear();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = defaultedMap38.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = null;
        java.lang.Object obj45 = defaultedMap42.put((java.lang.Object) 1, obj44);
        boolean b47 = defaultedMap42.containsKey((java.lang.Object) 1);
        defaultedMap42.clear();
        java.lang.Object obj49 = defaultedMap33.put((java.lang.Object) defaultedMap38, (java.lang.Object) defaultedMap42);
        collections.Predicate predicate50 = null;
        collections.Predicate predicate51 = null;
        java.util.Map map52 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap33, predicate50, predicate51);
        java.lang.Object obj53 = defaultedMap30.get((java.lang.Object) predicate50);
        java.util.Set set54 = defaultedMap30.entrySet();
        java.lang.Object obj55 = defaultedMap4.put((java.lang.Object) defaultedMap10, (java.lang.Object) defaultedMap30);
        java.lang.Object obj56 = defaultedMap1.remove((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj60 = defaultedMap58.get((java.lang.Object) 0.0f);
        boolean b61 = defaultedMap58.isEmpty();
        java.util.Set set62 = defaultedMap58.entrySet();
        java.util.Map map63 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap58);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + (byte) 0 + "'", obj13.equals((byte) 0));
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(map23);
        org.junit.Assert.assertNotNull(set26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNotNull(collection29);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(map52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (byte) 0 + "'", obj60.equals((byte) 0));
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertNotNull(map63);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        java.util.Set set7 = defaultedMap6.entrySet();
        java.util.Set set8 = defaultedMap6.entrySet();
        collections.Transformer transformer9 = null;
        try {
            java.util.Map map10 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, transformer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertNotNull(set8);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        java.util.Set set6 = defaultedMap1.entrySet();
        java.util.Set set7 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b10 = defaultedMap9.isEmpty();
        boolean b11 = defaultedMap9.isEmpty();
        boolean b13 = defaultedMap9.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b16 = defaultedMap9.containsKey((java.lang.Object) (byte) 0);
        java.lang.String str17 = defaultedMap9.toString();
        defaultedMap1.putAll((java.util.Map) defaultedMap9);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "{}" + "'", str17.equals("{}"));
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.util.Set set6 = defaultedMap1.keySet();
        java.lang.String str7 = defaultedMap1.toString();
        java.util.Set set8 = defaultedMap1.keySet();
        collections.Predicate predicate9 = null;
        collections.Predicate predicate10 = null;
        java.util.Map map11 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate9, predicate10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        boolean b18 = defaultedMap13.containsKey((java.lang.Object) 1);
        defaultedMap13.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection22 = defaultedMap21.values();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) collection22);
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap23);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        boolean b30 = defaultedMap13.containsValue((java.lang.Object) 0.0f);
        java.util.Set set31 = defaultedMap13.keySet();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set34 = defaultedMap33.keySet();
        boolean b36 = defaultedMap33.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection37 = defaultedMap33.values();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) collection37);
        boolean b39 = defaultedMap38.isEmpty();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = defaultedMap41.remove((java.lang.Object) 1.0f);
        defaultedMap41.clear();
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj48 = defaultedMap46.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = defaultedMap50.put((java.lang.Object) 1, obj52);
        boolean b55 = defaultedMap50.containsKey((java.lang.Object) 1);
        defaultedMap50.clear();
        java.lang.Object obj57 = defaultedMap41.put((java.lang.Object) defaultedMap46, (java.lang.Object) defaultedMap50);
        collections.Predicate predicate58 = null;
        collections.Predicate predicate59 = null;
        java.util.Map map60 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap41, predicate58, predicate59);
        java.lang.Object obj61 = defaultedMap38.get((java.lang.Object) predicate58);
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj65 = null;
        java.lang.Object obj66 = defaultedMap63.put((java.lang.Object) 1, obj65);
        java.util.Set set67 = defaultedMap63.keySet();
        boolean b68 = defaultedMap38.containsValue((java.lang.Object) set67);
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj72 = defaultedMap70.remove((java.lang.Object) 1.0f);
        defaultedMap70.clear();
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj77 = defaultedMap75.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj81 = null;
        java.lang.Object obj82 = defaultedMap79.put((java.lang.Object) 1, obj81);
        boolean b84 = defaultedMap79.containsKey((java.lang.Object) 1);
        defaultedMap79.clear();
        java.lang.Object obj86 = defaultedMap70.put((java.lang.Object) defaultedMap75, (java.lang.Object) defaultedMap79);
        java.lang.Object obj87 = null;
        boolean b88 = defaultedMap75.containsValue(obj87);
        java.util.Set set89 = defaultedMap75.entrySet();
        collections.map.DefaultedMap defaultedMap91 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection92 = defaultedMap91.values();
        boolean b93 = defaultedMap75.containsValue((java.lang.Object) collection92);
        boolean b94 = defaultedMap38.containsValue((java.lang.Object) b93);
        boolean b95 = defaultedMap13.containsKey((java.lang.Object) b94);
        int i96 = defaultedMap13.size();
        java.util.Map map97 = collections.map.DefaultedMap.decorate(map11, (java.lang.Object) i96);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{}" + "'", str7.equals("{}"));
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertNotNull(set34);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(collection37);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(map60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertNotNull(set89);
        org.junit.Assert.assertNotNull(collection92);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == false);
        org.junit.Assert.assertTrue(b95 == false);
        org.junit.Assert.assertTrue(i96 == 0);
        org.junit.Assert.assertNotNull(map97);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        java.lang.Object obj5 = defaultedMap1.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        java.lang.Object obj24 = defaultedMap1.get((java.lang.Object) defaultedMap12);
        collections.Predicate predicate25 = null;
        collections.Predicate predicate26 = null;
        java.util.Map map27 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate25, predicate26);
        java.util.Set set28 = defaultedMap1.entrySet();
        boolean b29 = defaultedMap1.isEmpty();
        collections.Transformer transformer30 = null;
        try {
            java.util.Map map31 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 0 + "'", obj5.equals((byte) 0));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNotNull(map27);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertTrue(b29 == true);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        defaultedMap6.putAll((java.util.Map) defaultedMap8);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        boolean b25 = defaultedMap13.isEmpty();
        java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) b25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) "");
        boolean b29 = defaultedMap8.containsKey((java.lang.Object) "");
        boolean b30 = defaultedMap8.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b30 == true);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        boolean b30 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = defaultedMap32.remove((java.lang.Object) 1.0f);
        java.lang.Object obj36 = defaultedMap32.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = defaultedMap38.remove((java.lang.Object) 1.0f);
        java.lang.Object obj42 = defaultedMap38.remove((java.lang.Object) 'a');
        java.lang.Object obj43 = defaultedMap32.get((java.lang.Object) 'a');
        java.lang.String str44 = defaultedMap32.toString();
        java.lang.Object obj45 = null;
        java.util.Map map46 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap32, obj45);
        boolean b47 = defaultedMap6.containsKey(obj45);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj51 = null;
        java.lang.Object obj52 = defaultedMap49.put((java.lang.Object) 1, obj51);
        java.util.Set set53 = defaultedMap49.keySet();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) set53);
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set57 = defaultedMap56.keySet();
        java.util.Collection collection58 = defaultedMap56.values();
        defaultedMap54.putAll((java.util.Map) defaultedMap56);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set62 = defaultedMap61.keySet();
        java.util.Collection collection63 = defaultedMap61.values();
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set66 = defaultedMap65.keySet();
        boolean b68 = defaultedMap65.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection69 = defaultedMap65.values();
        collections.map.DefaultedMap defaultedMap70 = new collections.map.DefaultedMap((java.lang.Object) collection69);
        boolean b71 = defaultedMap70.isEmpty();
        boolean b72 = defaultedMap61.containsValue((java.lang.Object) defaultedMap70);
        boolean b73 = defaultedMap61.isEmpty();
        java.util.Map map74 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap56, (java.lang.Object) b73);
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b77 = defaultedMap76.isEmpty();
        boolean b78 = defaultedMap76.isEmpty();
        java.lang.Object obj80 = defaultedMap76.get((java.lang.Object) 10.0d);
        java.util.Set set81 = defaultedMap76.entrySet();
        boolean b82 = defaultedMap56.equals((java.lang.Object) defaultedMap76);
        collections.map.DefaultedMap defaultedMap83 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap56);
        java.lang.Object obj84 = defaultedMap6.remove((java.lang.Object) defaultedMap83);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 0 + "'", obj43.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "{}" + "'", str44.equals("{}"));
        org.junit.Assert.assertNotNull(map46);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(set57);
        org.junit.Assert.assertNotNull(collection58);
        org.junit.Assert.assertNotNull(set62);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertNotNull(set66);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNotNull(collection69);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertNotNull(map74);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (byte) 0 + "'", obj80.equals((byte) 0));
        org.junit.Assert.assertNotNull(set81);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        boolean b7 = defaultedMap1.equals((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        boolean b12 = defaultedMap9.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection13 = defaultedMap9.values();
        collections.Predicate predicate14 = null;
        collections.Predicate predicate15 = null;
        java.util.Map map16 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate14, predicate15);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        defaultedMap18.clear();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = defaultedMap23.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = null;
        java.lang.Object obj30 = defaultedMap27.put((java.lang.Object) 1, obj29);
        boolean b32 = defaultedMap27.containsKey((java.lang.Object) 1);
        defaultedMap27.clear();
        java.lang.Object obj34 = defaultedMap18.put((java.lang.Object) defaultedMap23, (java.lang.Object) defaultedMap27);
        java.lang.Object obj35 = null;
        boolean b36 = defaultedMap23.containsValue(obj35);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b39 = defaultedMap38.isEmpty();
        boolean b40 = defaultedMap38.isEmpty();
        boolean b42 = defaultedMap38.equals((java.lang.Object) 10);
        java.lang.Object obj43 = defaultedMap23.get((java.lang.Object) b42);
        java.util.Map map44 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, (java.lang.Object) defaultedMap23);
        collections.Predicate predicate45 = null;
        collections.Predicate predicate46 = null;
        java.util.Map map47 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate45, predicate46);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.remove((java.lang.Object) 1.0f);
        java.lang.Object obj54 = defaultedMap50.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj58 = defaultedMap56.remove((java.lang.Object) 1.0f);
        java.lang.Object obj60 = defaultedMap56.remove((java.lang.Object) 'a');
        java.lang.Object obj61 = defaultedMap50.get((java.lang.Object) 'a');
        java.lang.String str62 = defaultedMap50.toString();
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set65 = defaultedMap64.keySet();
        java.util.Collection collection66 = defaultedMap64.values();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set69 = defaultedMap68.keySet();
        boolean b71 = defaultedMap68.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection72 = defaultedMap68.values();
        collections.map.DefaultedMap defaultedMap73 = new collections.map.DefaultedMap((java.lang.Object) collection72);
        boolean b74 = defaultedMap73.isEmpty();
        boolean b75 = defaultedMap64.containsValue((java.lang.Object) defaultedMap73);
        boolean b76 = defaultedMap64.isEmpty();
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap64);
        collections.map.DefaultedMap defaultedMap79 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj82 = defaultedMap79.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap64.putAll((java.util.Map) defaultedMap79);
        java.lang.Object obj84 = defaultedMap50.get((java.lang.Object) defaultedMap64);
        boolean b85 = defaultedMap9.equals((java.lang.Object) defaultedMap64);
        java.util.Map map86 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap64);
        java.util.Set set87 = defaultedMap1.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertNotNull(map16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 0 + "'", obj43.equals((byte) 0));
        org.junit.Assert.assertNotNull(map44);
        org.junit.Assert.assertNotNull(map47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + obj61 + "' != '" + (byte) 0 + "'", obj61.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "{}" + "'", str62.equals("{}"));
        org.junit.Assert.assertNotNull(set65);
        org.junit.Assert.assertNotNull(collection66);
        org.junit.Assert.assertNotNull(set69);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(collection72);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + obj84 + "' != '" + (byte) 0 + "'", obj84.equals((byte) 0));
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertNotNull(map86);
        org.junit.Assert.assertNotNull(set87);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.util.Set set4 = defaultedMap1.keySet();
        int i5 = defaultedMap1.size();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        boolean b11 = defaultedMap8.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection12 = defaultedMap8.values();
        java.lang.String str13 = defaultedMap8.toString();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b16 = defaultedMap15.isEmpty();
        boolean b17 = defaultedMap15.isEmpty();
        java.lang.Object obj19 = defaultedMap15.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        java.lang.Object obj38 = defaultedMap15.get((java.lang.Object) defaultedMap26);
        java.lang.Object obj40 = defaultedMap26.get((java.lang.Object) 100L);
        java.lang.Object obj41 = defaultedMap8.remove((java.lang.Object) defaultedMap26);
        boolean b42 = defaultedMap8.isEmpty();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set45 = defaultedMap44.keySet();
        boolean b47 = defaultedMap44.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection48 = defaultedMap44.values();
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) collection48);
        boolean b50 = defaultedMap49.isEmpty();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = defaultedMap52.remove((java.lang.Object) 1.0f);
        defaultedMap52.clear();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = defaultedMap57.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = null;
        java.lang.Object obj64 = defaultedMap61.put((java.lang.Object) 1, obj63);
        boolean b66 = defaultedMap61.containsKey((java.lang.Object) 1);
        defaultedMap61.clear();
        java.lang.Object obj68 = defaultedMap52.put((java.lang.Object) defaultedMap57, (java.lang.Object) defaultedMap61);
        collections.Predicate predicate69 = null;
        collections.Predicate predicate70 = null;
        java.util.Map map71 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap52, predicate69, predicate70);
        java.lang.Object obj72 = defaultedMap49.get((java.lang.Object) predicate69);
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj76 = null;
        java.lang.Object obj77 = defaultedMap74.put((java.lang.Object) 1, obj76);
        java.util.Set set78 = defaultedMap74.keySet();
        boolean b79 = defaultedMap49.containsValue((java.lang.Object) set78);
        boolean b80 = defaultedMap8.equals((java.lang.Object) defaultedMap49);
        defaultedMap49.clear();
        boolean b82 = defaultedMap1.containsKey((java.lang.Object) defaultedMap49);
        collections.Predicate predicate83 = null;
        collections.Predicate predicate84 = null;
        java.util.Map map85 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap49, predicate83, predicate84);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte) 0 + "'", obj38.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (byte) 0 + "'", obj40.equals((byte) 0));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNotNull(collection48);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(map71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(set78);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertNotNull(map85);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        defaultedMap1.clear();
        java.util.Set set16 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) set16);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) set16);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(set16);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        boolean b15 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.get((java.lang.Object) 0.0f);
        boolean b20 = defaultedMap17.isEmpty();
        java.lang.Object obj23 = defaultedMap17.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap17);
        java.util.Set set25 = defaultedMap17.entrySet();
        boolean b26 = defaultedMap1.equals((java.lang.Object) defaultedMap17);
        java.util.Set set27 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.remove((java.lang.Object) 1.0f);
        defaultedMap29.clear();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = null;
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) 1, obj40);
        boolean b43 = defaultedMap38.containsKey((java.lang.Object) 1);
        defaultedMap38.clear();
        java.lang.Object obj45 = defaultedMap29.put((java.lang.Object) defaultedMap34, (java.lang.Object) defaultedMap38);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj49 = null;
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) 1, obj49);
        boolean b52 = defaultedMap47.containsKey((java.lang.Object) 1);
        defaultedMap47.clear();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj57 = defaultedMap55.remove((java.lang.Object) (byte) 100);
        int i58 = defaultedMap55.size();
        java.lang.Object obj59 = defaultedMap47.remove((java.lang.Object) defaultedMap55);
        boolean b60 = defaultedMap34.containsValue(obj59);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj64 = null;
        java.lang.Object obj65 = defaultedMap62.put((java.lang.Object) 1, obj64);
        java.util.Set set66 = defaultedMap62.keySet();
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) set66);
        java.lang.Object obj69 = defaultedMap34.put((java.lang.Object) defaultedMap67, (java.lang.Object) (-1L));
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set72 = defaultedMap71.keySet();
        java.util.Collection collection73 = defaultedMap71.values();
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set76 = defaultedMap75.keySet();
        boolean b78 = defaultedMap75.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection79 = defaultedMap75.values();
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) collection79);
        boolean b81 = defaultedMap80.isEmpty();
        boolean b82 = defaultedMap71.containsValue((java.lang.Object) defaultedMap80);
        boolean b83 = defaultedMap71.isEmpty();
        collections.map.DefaultedMap defaultedMap84 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap71);
        boolean b85 = defaultedMap84.isEmpty();
        java.util.Collection collection86 = defaultedMap84.values();
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj90 = defaultedMap88.remove((java.lang.Object) 1.0f);
        defaultedMap84.putAll((java.util.Map) defaultedMap88);
        java.util.Collection collection92 = defaultedMap84.values();
        java.util.Map map93 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap34, (java.lang.Object) collection92);
        int i94 = defaultedMap34.size();
        boolean b95 = defaultedMap1.equals((java.lang.Object) i94);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 0 + "'", obj19.equals((byte) 0));
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(set66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(set72);
        org.junit.Assert.assertNotNull(collection73);
        org.junit.Assert.assertNotNull(set76);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertNotNull(collection79);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertNotNull(collection86);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(collection92);
        org.junit.Assert.assertNotNull(map93);
        org.junit.Assert.assertTrue(i94 == 1);
        org.junit.Assert.assertTrue(b95 == false);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj7 = defaultedMap5.get((java.lang.Object) 0.0f);
        boolean b8 = defaultedMap5.isEmpty();
        java.lang.Object obj11 = defaultedMap5.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap5);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection15 = defaultedMap14.values();
        boolean b16 = defaultedMap5.containsValue((java.lang.Object) collection15);
        boolean b17 = defaultedMap1.containsKey((java.lang.Object) defaultedMap5);
        int i18 = defaultedMap5.size();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + (byte) 0 + "'", obj7.equals((byte) 0));
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(i18 == 1);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        java.lang.String str7 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        java.lang.Object obj12 = defaultedMap9.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        java.lang.Object obj18 = defaultedMap14.remove((java.lang.Object) 'a');
        defaultedMap9.putAll((java.util.Map) defaultedMap14);
        collections.Predicate predicate20 = null;
        collections.Predicate predicate21 = null;
        java.util.Map map22 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate20, predicate21);
        collections.Predicate predicate23 = null;
        collections.Predicate predicate24 = null;
        java.util.Map map25 = collections.map.PredicatedMap.decorate(map22, predicate23, predicate24);
        java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) predicate24);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{1=null}" + "'", str7.equals("{1=null}"));
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertNotNull(map26);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.util.Set set6 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) set6);
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.get((java.lang.Object) 0.0f);
        boolean b12 = defaultedMap9.isEmpty();
        java.lang.Object obj15 = defaultedMap9.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate16 = null;
        collections.Predicate predicate17 = null;
        java.util.Map map18 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate16, predicate17);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj22 = null;
        java.lang.Object obj23 = defaultedMap20.put((java.lang.Object) 1, obj22);
        boolean b25 = defaultedMap20.containsKey((java.lang.Object) 1);
        java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap9, (java.lang.Object) defaultedMap20);
        defaultedMap7.putAll(map26);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(map18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(map26);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) "");
        boolean b17 = defaultedMap1.containsKey((java.lang.Object) defaultedMap16);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap16);
        java.lang.Object obj19 = null;
        java.lang.Object obj20 = defaultedMap18.get(obj19);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.util.Set set6 = defaultedMap1.keySet();
        java.lang.String str7 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b14 = defaultedMap13.isEmpty();
        java.util.Set set15 = defaultedMap13.entrySet();
        boolean b16 = defaultedMap9.containsValue((java.lang.Object) set15);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) (byte) 100);
        java.util.Set set21 = defaultedMap18.keySet();
        java.lang.Object obj22 = defaultedMap9.get((java.lang.Object) defaultedMap18);
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set25 = defaultedMap24.keySet();
        java.util.Collection collection26 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set29 = defaultedMap28.keySet();
        boolean b31 = defaultedMap28.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection32 = defaultedMap28.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) collection32);
        boolean b34 = defaultedMap33.isEmpty();
        boolean b35 = defaultedMap24.containsValue((java.lang.Object) defaultedMap33);
        boolean b36 = defaultedMap24.isEmpty();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        boolean b38 = defaultedMap37.isEmpty();
        java.util.Collection collection39 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = defaultedMap41.remove((java.lang.Object) 1.0f);
        defaultedMap37.putAll((java.util.Map) defaultedMap41);
        java.util.Collection collection45 = defaultedMap37.values();
        boolean b46 = defaultedMap9.equals((java.lang.Object) defaultedMap37);
        java.lang.Object obj47 = defaultedMap1.get((java.lang.Object) defaultedMap37);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{}" + "'", str7.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + (byte) 0 + "'", obj22.equals((byte) 0));
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertNotNull(collection26);
        org.junit.Assert.assertNotNull(set29);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(collection39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte) 0 + "'", obj47.equals((byte) 0));
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        java.lang.Object obj12 = defaultedMap8.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        defaultedMap14.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        boolean b28 = defaultedMap23.containsKey((java.lang.Object) 1);
        defaultedMap23.clear();
        java.lang.Object obj30 = defaultedMap14.put((java.lang.Object) defaultedMap19, (java.lang.Object) defaultedMap23);
        java.lang.Object obj31 = defaultedMap8.get((java.lang.Object) defaultedMap19);
        java.lang.Object obj33 = defaultedMap19.get((java.lang.Object) 100L);
        java.lang.Object obj34 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        java.util.Set set35 = defaultedMap19.entrySet();
        int i36 = defaultedMap19.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + (byte) 0 + "'", obj31.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj33 + "' != '" + (byte) 0 + "'", obj33.equals((byte) 0));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(i36 == 0);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) 100.0f);
        java.util.Set set35 = defaultedMap34.entrySet();
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap6, (java.lang.Object) defaultedMap34);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap34);
        int i38 = defaultedMap37.size();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertTrue(i38 == 0);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.util.Set set5 = defaultedMap1.entrySet();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(map8);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        int i5 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        java.lang.Object obj7 = null;
        boolean b8 = defaultedMap1.containsKey(obj7);
        int i9 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set12 = defaultedMap11.keySet();
        java.util.Collection collection13 = defaultedMap11.values();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        boolean b18 = defaultedMap15.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection19 = defaultedMap15.values();
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) collection19);
        boolean b21 = defaultedMap20.isEmpty();
        boolean b22 = defaultedMap11.containsValue((java.lang.Object) defaultedMap20);
        java.lang.Object obj23 = new java.lang.Object();
        boolean b24 = defaultedMap20.containsValue(obj23);
        collections.Predicate predicate25 = null;
        collections.Predicate predicate26 = null;
        java.util.Map map27 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap20, predicate25, predicate26);
        java.util.Set set28 = defaultedMap20.entrySet();
        java.lang.Object obj29 = defaultedMap1.remove((java.lang.Object) defaultedMap20);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNotNull(set12);
        org.junit.Assert.assertNotNull(collection13);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(collection19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(map27);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        defaultedMap1.clear();
        boolean b14 = defaultedMap1.isEmpty();
        int i15 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        java.util.Set set24 = defaultedMap22.keySet();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        java.util.Collection collection28 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set31 = defaultedMap30.keySet();
        boolean b33 = defaultedMap30.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection34 = defaultedMap30.values();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) collection34);
        boolean b36 = defaultedMap35.isEmpty();
        boolean b37 = defaultedMap26.containsValue((java.lang.Object) defaultedMap35);
        int i38 = defaultedMap35.size();
        java.util.Set set39 = defaultedMap35.keySet();
        defaultedMap22.putAll((java.util.Map) defaultedMap35);
        java.lang.Object obj41 = defaultedMap1.get((java.lang.Object) defaultedMap22);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        boolean b46 = defaultedMap43.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection47 = defaultedMap43.values();
        collections.Predicate predicate48 = null;
        collections.Predicate predicate49 = null;
        java.util.Map map50 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap43, predicate48, predicate49);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = defaultedMap52.remove((java.lang.Object) 1.0f);
        defaultedMap52.clear();
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj59 = defaultedMap57.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = null;
        java.lang.Object obj64 = defaultedMap61.put((java.lang.Object) 1, obj63);
        boolean b66 = defaultedMap61.containsKey((java.lang.Object) 1);
        defaultedMap61.clear();
        java.lang.Object obj68 = defaultedMap52.put((java.lang.Object) defaultedMap57, (java.lang.Object) defaultedMap61);
        java.lang.Object obj69 = null;
        boolean b70 = defaultedMap57.containsValue(obj69);
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b73 = defaultedMap72.isEmpty();
        boolean b74 = defaultedMap72.isEmpty();
        boolean b76 = defaultedMap72.equals((java.lang.Object) 10);
        java.lang.Object obj77 = defaultedMap57.get((java.lang.Object) b76);
        java.util.Map map78 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap43, (java.lang.Object) defaultedMap57);
        collections.Predicate predicate79 = null;
        collections.Predicate predicate80 = null;
        java.util.Map map81 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap43, predicate79, predicate80);
        defaultedMap43.clear();
        defaultedMap1.putAll((java.util.Map) defaultedMap43);
        collections.map.DefaultedMap defaultedMap85 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj87 = null;
        java.lang.Object obj88 = defaultedMap85.put((java.lang.Object) 1, obj87);
        java.lang.String str89 = defaultedMap85.toString();
        int i90 = defaultedMap85.size();
        boolean b91 = defaultedMap1.equals((java.lang.Object) i90);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(set24);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(collection34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue("'" + obj77 + "' != '" + (byte) 0 + "'", obj77.equals((byte) 0));
        org.junit.Assert.assertNotNull(map78);
        org.junit.Assert.assertNotNull(map81);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "{1=null}" + "'", str89.equals("{1=null}"));
        org.junit.Assert.assertTrue(i90 == 1);
        org.junit.Assert.assertTrue(b91 == false);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.util.Set set4 = defaultedMap1.keySet();
        collections.Predicate predicate5 = null;
        collections.Predicate predicate6 = null;
        java.util.Map map7 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate5, predicate6);
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertNotNull(map7);
        org.junit.Assert.assertNotNull(map10);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set5 = defaultedMap4.keySet();
        boolean b7 = defaultedMap4.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection8 = defaultedMap4.values();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) collection8);
        boolean b10 = defaultedMap9.isEmpty();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap9);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        defaultedMap13.clear();
        java.util.Set set18 = defaultedMap13.entrySet();
        boolean b19 = defaultedMap1.containsKey((java.lang.Object) set18);
        java.util.Collection collection20 = defaultedMap1.values();
        collections.Factory factory21 = null;
        try {
            java.util.Map map22 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(collection20);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.Predicate predicate6 = null;
        collections.Predicate predicate7 = null;
        java.util.Map map8 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate6, predicate7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) 1.0f);
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj17 = defaultedMap15.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        java.lang.Object obj26 = defaultedMap10.put((java.lang.Object) defaultedMap15, (java.lang.Object) defaultedMap19);
        java.lang.Object obj27 = null;
        boolean b28 = defaultedMap15.containsValue(obj27);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b31 = defaultedMap30.isEmpty();
        boolean b32 = defaultedMap30.isEmpty();
        boolean b34 = defaultedMap30.equals((java.lang.Object) 10);
        java.lang.Object obj35 = defaultedMap15.get((java.lang.Object) b34);
        java.util.Map map36 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap15);
        collections.Predicate predicate37 = null;
        collections.Predicate predicate38 = null;
        java.util.Map map39 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate37, predicate38);
        collections.Factory factory40 = null;
        try {
            java.util.Map map41 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, factory40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(map8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
        org.junit.Assert.assertNotNull(map36);
        org.junit.Assert.assertNotNull(map39);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        java.lang.String str42 = defaultedMap39.toString();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set45 = defaultedMap44.keySet();
        boolean b47 = defaultedMap44.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection48 = defaultedMap44.values();
        java.lang.String str49 = defaultedMap44.toString();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.get((java.lang.Object) 0.0f);
        boolean b54 = defaultedMap51.isEmpty();
        java.lang.Object obj57 = defaultedMap51.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap51);
        boolean b59 = defaultedMap44.equals((java.lang.Object) defaultedMap58);
        java.util.Map map60 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap39, (java.lang.Object) b59);
        java.util.Set set61 = defaultedMap39.entrySet();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set64 = defaultedMap63.keySet();
        java.lang.Object obj66 = defaultedMap63.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj70 = defaultedMap68.remove((java.lang.Object) 1.0f);
        java.lang.Object obj72 = defaultedMap68.remove((java.lang.Object) 'a');
        defaultedMap63.putAll((java.util.Map) defaultedMap68);
        collections.Predicate predicate74 = null;
        collections.Predicate predicate75 = null;
        java.util.Map map76 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap63, predicate74, predicate75);
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) "");
        boolean b79 = defaultedMap63.containsKey((java.lang.Object) defaultedMap78);
        defaultedMap39.putAll((java.util.Map) defaultedMap63);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "{}" + "'", str42.equals("{}"));
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNotNull(collection48);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "{}" + "'", str49.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNotNull(map60);
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertNotNull(set64);
        org.junit.Assert.assertTrue("'" + obj66 + "' != '" + (byte) 0 + "'", obj66.equals((byte) 0));
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(map76);
        org.junit.Assert.assertTrue(b79 == false);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = null;
        java.lang.Object obj15 = defaultedMap12.put((java.lang.Object) 1, obj14);
        boolean b17 = defaultedMap12.containsKey((java.lang.Object) 1);
        java.util.Map map18 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, (java.lang.Object) defaultedMap12);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set21 = defaultedMap20.keySet();
        boolean b23 = defaultedMap20.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection24 = defaultedMap20.values();
        java.lang.String str25 = defaultedMap20.toString();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.get((java.lang.Object) 0.0f);
        boolean b30 = defaultedMap27.isEmpty();
        java.lang.Object obj33 = defaultedMap27.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap27);
        boolean b35 = defaultedMap20.equals((java.lang.Object) defaultedMap34);
        java.util.Set set36 = defaultedMap34.entrySet();
        java.lang.Object obj37 = defaultedMap12.get((java.lang.Object) defaultedMap34);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(map18);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "{}" + "'", str25.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (byte) 0 + "'", obj29.equals((byte) 0));
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(set36);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (byte) 0 + "'", obj37.equals((byte) 0));
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) collection5);
        boolean b7 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = defaultedMap9.remove((java.lang.Object) 1.0f);
        defaultedMap9.clear();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj16 = defaultedMap14.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = null;
        java.lang.Object obj21 = defaultedMap18.put((java.lang.Object) 1, obj20);
        boolean b23 = defaultedMap18.containsKey((java.lang.Object) 1);
        defaultedMap18.clear();
        java.lang.Object obj25 = defaultedMap9.put((java.lang.Object) defaultedMap14, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate26 = null;
        collections.Predicate predicate27 = null;
        java.util.Map map28 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap9, predicate26, predicate27);
        java.lang.Object obj29 = defaultedMap6.get((java.lang.Object) predicate26);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        java.util.Set set35 = defaultedMap31.keySet();
        boolean b36 = defaultedMap6.containsValue((java.lang.Object) set35);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set39 = defaultedMap38.keySet();
        boolean b41 = defaultedMap38.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection42 = defaultedMap38.values();
        java.lang.String str43 = defaultedMap38.toString();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b46 = defaultedMap45.isEmpty();
        boolean b47 = defaultedMap45.isEmpty();
        java.lang.Object obj49 = defaultedMap45.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.remove((java.lang.Object) 1.0f);
        defaultedMap51.clear();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj58 = defaultedMap56.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = null;
        java.lang.Object obj63 = defaultedMap60.put((java.lang.Object) 1, obj62);
        boolean b65 = defaultedMap60.containsKey((java.lang.Object) 1);
        defaultedMap60.clear();
        java.lang.Object obj67 = defaultedMap51.put((java.lang.Object) defaultedMap56, (java.lang.Object) defaultedMap60);
        java.lang.Object obj68 = defaultedMap45.get((java.lang.Object) defaultedMap56);
        java.lang.Object obj70 = defaultedMap56.get((java.lang.Object) 100L);
        java.lang.Object obj71 = defaultedMap38.remove((java.lang.Object) defaultedMap56);
        boolean b72 = defaultedMap38.isEmpty();
        java.util.Collection collection73 = defaultedMap38.values();
        boolean b74 = defaultedMap6.containsKey((java.lang.Object) defaultedMap38);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(map28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(set39);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "{}" + "'", str43.equals("{}"));
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (byte) 0 + "'", obj49.equals((byte) 0));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj70 + "' != '" + (byte) 0 + "'", obj70.equals((byte) 0));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertNotNull(collection73);
        org.junit.Assert.assertTrue(b74 == false);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        int i4 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = defaultedMap13.remove((java.lang.Object) 1.0f);
        java.lang.Object obj17 = defaultedMap13.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        java.lang.Object obj23 = defaultedMap19.remove((java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap13.get((java.lang.Object) 'a');
        boolean b25 = defaultedMap1.equals((java.lang.Object) 'a');
        java.util.Set set26 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 0 + "'", obj11.equals(0));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(set26);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        java.lang.String str42 = defaultedMap39.toString();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set45 = defaultedMap44.keySet();
        boolean b47 = defaultedMap44.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection48 = defaultedMap44.values();
        java.lang.String str49 = defaultedMap44.toString();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.get((java.lang.Object) 0.0f);
        boolean b54 = defaultedMap51.isEmpty();
        java.lang.Object obj57 = defaultedMap51.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap51);
        boolean b59 = defaultedMap44.equals((java.lang.Object) defaultedMap58);
        java.util.Map map60 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap39, (java.lang.Object) b59);
        java.util.Set set61 = defaultedMap39.entrySet();
        java.util.Set set62 = defaultedMap39.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "{}" + "'", str42.equals("{}"));
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNotNull(collection48);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "{}" + "'", str49.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNotNull(map60);
        org.junit.Assert.assertNotNull(set61);
        org.junit.Assert.assertNotNull(set62);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        java.lang.Object obj13 = new java.lang.Object();
        boolean b14 = defaultedMap10.containsValue(obj13);
        boolean b15 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set19 = defaultedMap18.keySet();
        boolean b21 = defaultedMap18.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection22 = defaultedMap18.values();
        collections.Predicate predicate23 = null;
        collections.Predicate predicate24 = null;
        java.util.Map map25 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap18, predicate23, predicate24);
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        defaultedMap27.clear();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = defaultedMap32.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = null;
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) 1, obj38);
        boolean b41 = defaultedMap36.containsKey((java.lang.Object) 1);
        defaultedMap36.clear();
        java.lang.Object obj43 = defaultedMap27.put((java.lang.Object) defaultedMap32, (java.lang.Object) defaultedMap36);
        java.lang.Object obj44 = null;
        boolean b45 = defaultedMap32.containsValue(obj44);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b48 = defaultedMap47.isEmpty();
        boolean b49 = defaultedMap47.isEmpty();
        boolean b51 = defaultedMap47.equals((java.lang.Object) 10);
        java.lang.Object obj52 = defaultedMap32.get((java.lang.Object) b51);
        java.util.Map map53 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap18, (java.lang.Object) defaultedMap32);
        java.lang.Object obj54 = defaultedMap16.get((java.lang.Object) defaultedMap32);
        java.util.Set set55 = defaultedMap32.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte) 0 + "'", obj52.equals((byte) 0));
        org.junit.Assert.assertNotNull(map53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(set55);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        int i5 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        java.lang.Object obj7 = null;
        boolean b8 = defaultedMap1.containsKey(obj7);
        java.lang.String str9 = defaultedMap1.toString();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "{}" + "'", str9.equals("{}"));
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set7 = defaultedMap6.keySet();
        java.util.Collection collection8 = defaultedMap6.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        boolean b13 = defaultedMap10.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection14 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) collection14);
        boolean b16 = defaultedMap15.isEmpty();
        boolean b17 = defaultedMap6.containsValue((java.lang.Object) defaultedMap15);
        boolean b18 = defaultedMap6.isEmpty();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap6);
        boolean b20 = defaultedMap19.isEmpty();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        defaultedMap22.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = defaultedMap31.put((java.lang.Object) 1, obj33);
        boolean b36 = defaultedMap31.containsKey((java.lang.Object) 1);
        defaultedMap31.clear();
        java.lang.Object obj38 = defaultedMap22.put((java.lang.Object) defaultedMap27, (java.lang.Object) defaultedMap31);
        java.lang.Object obj39 = null;
        boolean b40 = defaultedMap27.containsValue(obj39);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b43 = defaultedMap42.isEmpty();
        boolean b44 = defaultedMap42.isEmpty();
        boolean b46 = defaultedMap42.equals((java.lang.Object) 10);
        java.lang.Object obj47 = defaultedMap27.get((java.lang.Object) b46);
        java.util.Map map48 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap19, (java.lang.Object) b46);
        java.lang.Object obj49 = defaultedMap1.remove((java.lang.Object) defaultedMap19);
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(collection14);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + (byte) 0 + "'", obj47.equals((byte) 0));
        org.junit.Assert.assertNotNull(map48);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        java.util.Set set10 = defaultedMap6.keySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = defaultedMap13.remove((java.lang.Object) 1.0f);
        java.lang.Object obj17 = defaultedMap13.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        java.lang.Object obj23 = defaultedMap19.remove((java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap13.get((java.lang.Object) 'a');
        defaultedMap13.clear();
        defaultedMap1.putAll((java.util.Map) defaultedMap13);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = defaultedMap28.remove((java.lang.Object) 1.0f);
        java.lang.Object obj32 = defaultedMap28.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        java.lang.Object obj38 = defaultedMap34.remove((java.lang.Object) 'a');
        java.lang.Object obj39 = defaultedMap28.get((java.lang.Object) 'a');
        defaultedMap28.clear();
        boolean b41 = defaultedMap28.isEmpty();
        defaultedMap28.clear();
        java.util.Set set43 = defaultedMap28.entrySet();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) set43);
        java.lang.Object obj45 = defaultedMap1.get((java.lang.Object) defaultedMap44);
        java.util.Set set46 = defaultedMap44.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + (byte) 0 + "'", obj39.equals((byte) 0));
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(set43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + (byte) 0 + "'", obj45.equals((byte) 0));
        org.junit.Assert.assertNotNull(set46);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        java.lang.String str13 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap15.keySet();
        java.util.Collection collection17 = defaultedMap15.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        boolean b26 = defaultedMap15.containsValue((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap15.isEmpty();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap15);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap15.putAll((java.util.Map) defaultedMap30);
        java.lang.Object obj35 = defaultedMap1.get((java.lang.Object) defaultedMap15);
        collections.Transformer transformer36 = null;
        try {
            java.util.Map map37 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap15, transformer36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "{}" + "'", str13.equals("{}"));
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + obj35 + "' != '" + (byte) 0 + "'", obj35.equals((byte) 0));
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set32 = defaultedMap31.keySet();
        boolean b34 = defaultedMap31.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = null;
        java.lang.Object obj39 = defaultedMap36.put((java.lang.Object) 1, obj38);
        java.util.Set set40 = defaultedMap36.keySet();
        java.lang.Object obj41 = defaultedMap31.get((java.lang.Object) defaultedMap36);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        java.util.Collection collection45 = defaultedMap43.values();
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set48 = defaultedMap47.keySet();
        boolean b50 = defaultedMap47.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection51 = defaultedMap47.values();
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) collection51);
        boolean b53 = defaultedMap52.isEmpty();
        boolean b54 = defaultedMap43.containsValue((java.lang.Object) defaultedMap52);
        java.lang.Object obj55 = new java.lang.Object();
        boolean b56 = defaultedMap52.containsValue(obj55);
        defaultedMap31.putAll((java.util.Map) defaultedMap52);
        defaultedMap29.putAll((java.util.Map) defaultedMap31);
        collections.Factory factory59 = null;
        try {
            java.util.Map map60 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap29, factory59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(set40);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNotNull(collection45);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b56 == false);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        java.lang.Object obj5 = defaultedMap1.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        java.lang.Object obj11 = defaultedMap7.remove((java.lang.Object) 'a');
        java.lang.Object obj12 = defaultedMap1.get((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        java.util.Set set19 = defaultedMap14.keySet();
        boolean b20 = defaultedMap1.containsValue((java.lang.Object) defaultedMap14);
        java.util.Collection collection21 = defaultedMap14.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + (byte) 0 + "'", obj12.equals((byte) 0));
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertNotNull(set19);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        int i7 = defaultedMap6.size();
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap6, predicate8, predicate9);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertNotNull(map10);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b2 = defaultedMap1.isEmpty();
        boolean b3 = defaultedMap1.isEmpty();
        boolean b5 = defaultedMap1.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap1.containsKey((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set11 = defaultedMap10.keySet();
        java.util.Collection collection12 = defaultedMap10.values();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set15 = defaultedMap14.keySet();
        boolean b17 = defaultedMap14.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection18 = defaultedMap14.values();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) collection18);
        boolean b20 = defaultedMap19.isEmpty();
        boolean b21 = defaultedMap10.containsValue((java.lang.Object) defaultedMap19);
        boolean b22 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap10);
        defaultedMap1.putAll((java.util.Map) defaultedMap10);
        int i25 = defaultedMap10.size();
        org.junit.Assert.assertTrue(b2 == true);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(set11);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(set15);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(collection18);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(i25 == 0);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) b4);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap7.isEmpty();
        boolean b9 = defaultedMap7.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) (byte) 100);
        int i27 = defaultedMap24.size();
        java.lang.Object obj28 = defaultedMap16.remove((java.lang.Object) defaultedMap24);
        boolean b29 = defaultedMap11.containsKey((java.lang.Object) defaultedMap16);
        java.lang.Object obj30 = defaultedMap7.remove((java.lang.Object) defaultedMap11);
        defaultedMap7.clear();
        java.util.Set set32 = defaultedMap7.entrySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = null;
        boolean b52 = defaultedMap39.containsValue(obj51);
        java.util.Set set53 = defaultedMap39.entrySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection56 = defaultedMap55.values();
        boolean b57 = defaultedMap39.containsValue((java.lang.Object) collection56);
        defaultedMap7.putAll((java.util.Map) defaultedMap39);
        java.util.Map map59 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap5, (java.lang.Object) defaultedMap39);
        java.util.Set set60 = defaultedMap5.entrySet();
        int i61 = defaultedMap5.size();
        boolean b62 = defaultedMap5.isEmpty();
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == true);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection2 = defaultedMap1.values();
        java.lang.String str3 = defaultedMap1.toString();
        org.junit.Assert.assertNotNull(collection2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "{}" + "'", str3.equals("{}"));
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = null;
        java.lang.Object obj9 = defaultedMap6.put((java.lang.Object) 1, obj8);
        java.util.Set set10 = defaultedMap6.keySet();
        java.lang.Object obj11 = defaultedMap1.get((java.lang.Object) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = defaultedMap13.remove((java.lang.Object) 1.0f);
        java.lang.Object obj17 = defaultedMap13.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        java.lang.Object obj23 = defaultedMap19.remove((java.lang.Object) 'a');
        java.lang.Object obj24 = defaultedMap13.get((java.lang.Object) 'a');
        defaultedMap13.clear();
        defaultedMap1.putAll((java.util.Map) defaultedMap13);
        java.util.Set set27 = defaultedMap1.keySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (byte) 0 + "'", obj11.equals((byte) 0));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + (byte) 0 + "'", obj24.equals((byte) 0));
        org.junit.Assert.assertNotNull(set27);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        boolean b19 = defaultedMap6.equals((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set22 = defaultedMap21.keySet();
        boolean b24 = defaultedMap21.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection25 = defaultedMap21.values();
        java.lang.String str26 = defaultedMap21.toString();
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap28.isEmpty();
        java.lang.Object obj32 = defaultedMap28.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = defaultedMap28.get((java.lang.Object) defaultedMap39);
        java.lang.Object obj53 = defaultedMap39.get((java.lang.Object) 100L);
        java.lang.Object obj54 = defaultedMap21.remove((java.lang.Object) defaultedMap39);
        boolean b55 = defaultedMap21.isEmpty();
        java.util.Set set56 = defaultedMap21.entrySet();
        java.lang.Object obj57 = defaultedMap6.get((java.lang.Object) set56);
        java.util.Set set58 = defaultedMap6.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "{}" + "'", str26.equals("{}"));
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + obj51 + "' != '" + (byte) 0 + "'", obj51.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + (byte) 0 + "'", obj53.equals((byte) 0));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + (byte) 0 + "'", obj57.equals((byte) 0));
        org.junit.Assert.assertNotNull(set58);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b6 = defaultedMap5.isEmpty();
        java.util.Set set7 = defaultedMap5.entrySet();
        boolean b8 = defaultedMap1.containsValue((java.lang.Object) set7);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj12 = defaultedMap10.remove((java.lang.Object) (byte) 100);
        java.util.Set set13 = defaultedMap10.keySet();
        java.lang.Object obj14 = defaultedMap1.get((java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        boolean b19 = defaultedMap16.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection20 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) collection20);
        int i22 = defaultedMap21.size();
        collections.Predicate predicate23 = null;
        collections.Predicate predicate24 = null;
        java.util.Map map25 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap21, predicate23, predicate24);
        boolean b26 = defaultedMap10.containsKey((java.lang.Object) map25);
        java.util.Set set27 = defaultedMap10.keySet();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj31 = defaultedMap29.remove((java.lang.Object) 1.0f);
        defaultedMap29.clear();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = null;
        java.lang.Object obj41 = defaultedMap38.put((java.lang.Object) 1, obj40);
        boolean b43 = defaultedMap38.containsKey((java.lang.Object) 1);
        defaultedMap38.clear();
        java.lang.Object obj45 = defaultedMap29.put((java.lang.Object) defaultedMap34, (java.lang.Object) defaultedMap38);
        java.lang.Object obj46 = null;
        boolean b47 = defaultedMap34.containsValue(obj46);
        java.util.Set set48 = defaultedMap34.entrySet();
        java.util.Collection collection49 = defaultedMap34.values();
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set52 = defaultedMap51.keySet();
        java.util.Collection collection53 = defaultedMap51.values();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set56 = defaultedMap55.keySet();
        boolean b58 = defaultedMap55.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection59 = defaultedMap55.values();
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) collection59);
        boolean b61 = defaultedMap60.isEmpty();
        boolean b62 = defaultedMap51.containsValue((java.lang.Object) defaultedMap60);
        int i63 = defaultedMap60.size();
        defaultedMap60.clear();
        java.lang.Object obj65 = defaultedMap34.get((java.lang.Object) defaultedMap60);
        collections.Predicate predicate66 = null;
        collections.Predicate predicate67 = null;
        java.util.Map map68 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap60, predicate66, predicate67);
        boolean b69 = defaultedMap10.equals((java.lang.Object) defaultedMap60);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (byte) 0 + "'", obj14.equals((byte) 0));
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(map25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertNotNull(set48);
        org.junit.Assert.assertNotNull(collection49);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertNotNull(collection53);
        org.junit.Assert.assertNotNull(set56);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNotNull(collection59);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (byte) 0 + "'", obj65.equals((byte) 0));
        org.junit.Assert.assertNotNull(map68);
        org.junit.Assert.assertTrue(b69 == true);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj9 = defaultedMap7.remove((java.lang.Object) 1.0f);
        defaultedMap7.clear();
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj14 = defaultedMap12.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        java.lang.Object obj23 = defaultedMap7.put((java.lang.Object) defaultedMap12, (java.lang.Object) defaultedMap16);
        defaultedMap1.putAll((java.util.Map) defaultedMap12);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection30 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) collection30);
        int i32 = defaultedMap31.size();
        collections.Predicate predicate33 = null;
        collections.Predicate predicate34 = null;
        java.util.Map map35 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap31, predicate33, predicate34);
        defaultedMap31.clear();
        collections.Predicate predicate37 = null;
        collections.Predicate predicate38 = null;
        java.util.Map map39 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap31, predicate37, predicate38);
        boolean b40 = defaultedMap1.containsKey((java.lang.Object) predicate37);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertNotNull(map35);
        org.junit.Assert.assertNotNull(map39);
        org.junit.Assert.assertTrue(b40 == false);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        java.util.Set set7 = defaultedMap6.entrySet();
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap6, predicate8, predicate9);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set7);
        org.junit.Assert.assertNotNull(map10);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        java.lang.String str7 = defaultedMap1.toString();
        java.util.Collection collection8 = defaultedMap1.values();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "{1=null}" + "'", str7.equals("{1=null}"));
        org.junit.Assert.assertNotNull(collection8);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        int i6 = defaultedMap1.size();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        boolean b11 = defaultedMap8.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection12 = defaultedMap8.values();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) collection12);
        boolean b14 = defaultedMap13.isEmpty();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.remove((java.lang.Object) 1.0f);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) 1, obj27);
        boolean b30 = defaultedMap25.containsKey((java.lang.Object) 1);
        defaultedMap25.clear();
        java.lang.Object obj32 = defaultedMap16.put((java.lang.Object) defaultedMap21, (java.lang.Object) defaultedMap25);
        collections.Predicate predicate33 = null;
        collections.Predicate predicate34 = null;
        java.util.Map map35 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap16, predicate33, predicate34);
        java.lang.Object obj36 = defaultedMap13.get((java.lang.Object) predicate33);
        boolean b37 = defaultedMap13.isEmpty();
        collections.Predicate predicate38 = null;
        collections.Predicate predicate39 = null;
        java.util.Map map40 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap13, predicate38, predicate39);
        java.lang.Object obj41 = defaultedMap1.get((java.lang.Object) predicate38);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set44 = defaultedMap43.keySet();
        boolean b46 = defaultedMap43.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection47 = defaultedMap43.values();
        java.lang.String str48 = defaultedMap43.toString();
        collections.map.DefaultedMap defaultedMap50 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = defaultedMap50.get((java.lang.Object) 0.0f);
        boolean b53 = defaultedMap50.isEmpty();
        java.lang.Object obj56 = defaultedMap50.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap57 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap50);
        boolean b58 = defaultedMap43.equals((java.lang.Object) defaultedMap57);
        defaultedMap57.clear();
        java.lang.Object obj60 = defaultedMap1.get((java.lang.Object) defaultedMap57);
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set63 = defaultedMap62.keySet();
        java.util.Collection collection64 = defaultedMap62.values();
        collections.map.DefaultedMap defaultedMap66 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set67 = defaultedMap66.keySet();
        boolean b69 = defaultedMap66.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection70 = defaultedMap66.values();
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) collection70);
        boolean b72 = defaultedMap71.isEmpty();
        boolean b73 = defaultedMap62.containsValue((java.lang.Object) defaultedMap71);
        java.lang.Object obj74 = new java.lang.Object();
        boolean b75 = defaultedMap71.containsValue(obj74);
        java.lang.Object obj76 = defaultedMap1.get((java.lang.Object) defaultedMap71);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(map35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(map40);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(collection47);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "{}" + "'", str48.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj52 + "' != '" + (byte) 0 + "'", obj52.equals((byte) 0));
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + (byte) 0 + "'", obj60.equals((byte) 0));
        org.junit.Assert.assertNotNull(set63);
        org.junit.Assert.assertNotNull(collection64);
        org.junit.Assert.assertNotNull(set67);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(collection70);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue("'" + obj76 + "' != '" + (byte) 0 + "'", obj76.equals((byte) 0));
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        java.lang.Object obj7 = defaultedMap1.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.Predicate predicate8 = null;
        collections.Predicate predicate9 = null;
        java.util.Map map10 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate8, predicate9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        java.util.Collection collection14 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        boolean b19 = defaultedMap16.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection20 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) collection20);
        boolean b22 = defaultedMap21.isEmpty();
        boolean b23 = defaultedMap12.containsValue((java.lang.Object) defaultedMap21);
        boolean b24 = defaultedMap12.isEmpty();
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap12);
        boolean b26 = defaultedMap25.isEmpty();
        java.lang.Object obj27 = defaultedMap1.remove((java.lang.Object) defaultedMap25);
        java.util.Set set28 = defaultedMap1.keySet();
        collections.Predicate predicate29 = null;
        collections.Predicate predicate30 = null;
        java.util.Map map31 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate29, predicate30);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(map10);
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertNotNull(collection14);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(collection20);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(set28);
        org.junit.Assert.assertNotNull(map31);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.get((java.lang.Object) 0.0f);
        boolean b11 = defaultedMap8.isEmpty();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b14 = defaultedMap13.isEmpty();
        boolean b15 = defaultedMap13.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        boolean b21 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Map map22 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) defaultedMap13);
        java.lang.Object obj23 = defaultedMap6.remove((java.lang.Object) defaultedMap8);
        boolean b24 = defaultedMap6.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(map22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue(b24 == true);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        java.lang.Object obj18 = null;
        boolean b19 = defaultedMap6.containsValue(obj18);
        java.util.Set set20 = defaultedMap6.entrySet();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection23 = defaultedMap22.values();
        boolean b24 = defaultedMap6.containsValue((java.lang.Object) collection23);
        java.lang.String str25 = defaultedMap6.toString();
        java.util.Collection collection26 = defaultedMap6.values();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "{}" + "'", str25.equals("{}"));
        org.junit.Assert.assertNotNull(collection26);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        defaultedMap6.putAll((java.util.Map) defaultedMap8);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        boolean b25 = defaultedMap13.isEmpty();
        java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) b25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap28.isEmpty();
        java.lang.Object obj32 = defaultedMap28.get((java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap28.entrySet();
        boolean b34 = defaultedMap8.equals((java.lang.Object) defaultedMap28);
        int i35 = defaultedMap8.size();
        java.lang.String str36 = defaultedMap8.toString();
        java.util.Set set37 = defaultedMap8.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "{}" + "'", str36.equals("{}"));
        org.junit.Assert.assertNotNull(set37);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        java.util.Set set30 = defaultedMap24.keySet();
        collections.map.DefaultedMap defaultedMap32 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = defaultedMap32.remove((java.lang.Object) 1.0f);
        defaultedMap32.clear();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = defaultedMap37.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap41 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj43 = null;
        java.lang.Object obj44 = defaultedMap41.put((java.lang.Object) 1, obj43);
        boolean b46 = defaultedMap41.containsKey((java.lang.Object) 1);
        defaultedMap41.clear();
        java.lang.Object obj48 = defaultedMap32.put((java.lang.Object) defaultedMap37, (java.lang.Object) defaultedMap41);
        java.lang.Object obj49 = null;
        boolean b50 = defaultedMap37.containsValue(obj49);
        java.util.Set set51 = defaultedMap37.entrySet();
        java.util.Collection collection52 = defaultedMap37.values();
        collections.map.DefaultedMap defaultedMap54 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set55 = defaultedMap54.keySet();
        java.util.Collection collection56 = defaultedMap54.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set59 = defaultedMap58.keySet();
        boolean b61 = defaultedMap58.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection62 = defaultedMap58.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) collection62);
        boolean b64 = defaultedMap63.isEmpty();
        boolean b65 = defaultedMap54.containsValue((java.lang.Object) defaultedMap63);
        int i66 = defaultedMap63.size();
        defaultedMap63.clear();
        java.lang.Object obj68 = defaultedMap37.get((java.lang.Object) defaultedMap63);
        defaultedMap24.putAll((java.util.Map) defaultedMap63);
        int i70 = defaultedMap24.size();
        java.util.Collection collection71 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) collection71);
        java.lang.String str73 = defaultedMap72.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(set30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNotNull(collection52);
        org.junit.Assert.assertNotNull(set55);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertNotNull(set59);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(collection62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertNotNull(collection71);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "{}" + "'", str73.equals("{}"));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap4 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set5 = defaultedMap4.keySet();
        boolean b7 = defaultedMap4.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection8 = defaultedMap4.values();
        collections.Predicate predicate9 = null;
        collections.Predicate predicate10 = null;
        java.util.Map map11 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap4, predicate9, predicate10);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = defaultedMap13.remove((java.lang.Object) 1.0f);
        defaultedMap13.clear();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = defaultedMap18.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = null;
        java.lang.Object obj25 = defaultedMap22.put((java.lang.Object) 1, obj24);
        boolean b27 = defaultedMap22.containsKey((java.lang.Object) 1);
        defaultedMap22.clear();
        java.lang.Object obj29 = defaultedMap13.put((java.lang.Object) defaultedMap18, (java.lang.Object) defaultedMap22);
        java.lang.Object obj30 = null;
        boolean b31 = defaultedMap18.containsValue(obj30);
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b34 = defaultedMap33.isEmpty();
        boolean b35 = defaultedMap33.isEmpty();
        boolean b37 = defaultedMap33.equals((java.lang.Object) 10);
        java.lang.Object obj38 = defaultedMap18.get((java.lang.Object) b37);
        java.util.Map map39 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap4, (java.lang.Object) defaultedMap18);
        collections.Predicate predicate40 = null;
        collections.Predicate predicate41 = null;
        java.util.Map map42 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap4, predicate40, predicate41);
        defaultedMap4.clear();
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj47 = defaultedMap45.remove((java.lang.Object) 1.0f);
        java.lang.Object obj49 = defaultedMap45.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.remove((java.lang.Object) 1.0f);
        java.lang.Object obj55 = defaultedMap51.remove((java.lang.Object) 'a');
        java.lang.Object obj56 = defaultedMap45.get((java.lang.Object) 'a');
        java.lang.String str57 = defaultedMap45.toString();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set60 = defaultedMap59.keySet();
        java.util.Collection collection61 = defaultedMap59.values();
        collections.map.DefaultedMap defaultedMap63 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set64 = defaultedMap63.keySet();
        boolean b66 = defaultedMap63.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection67 = defaultedMap63.values();
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) collection67);
        boolean b69 = defaultedMap68.isEmpty();
        boolean b70 = defaultedMap59.containsValue((java.lang.Object) defaultedMap68);
        boolean b71 = defaultedMap59.isEmpty();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap59);
        collections.map.DefaultedMap defaultedMap74 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj77 = defaultedMap74.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap59.putAll((java.util.Map) defaultedMap74);
        java.lang.Object obj79 = defaultedMap45.get((java.lang.Object) defaultedMap59);
        boolean b80 = defaultedMap4.equals((java.lang.Object) defaultedMap59);
        java.lang.Object obj81 = defaultedMap1.get((java.lang.Object) defaultedMap59);
        java.util.Set set82 = defaultedMap1.entrySet();
        java.lang.String str83 = defaultedMap1.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(collection8);
        org.junit.Assert.assertNotNull(map11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte) 0 + "'", obj38.equals((byte) 0));
        org.junit.Assert.assertNotNull(map39);
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (byte) 0 + "'", obj56.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "{}" + "'", str57.equals("{}"));
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertNotNull(collection61);
        org.junit.Assert.assertNotNull(set64);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertNotNull(collection67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + obj79 + "' != '" + (byte) 0 + "'", obj79.equals((byte) 0));
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + (byte) 0 + "'", obj81.equals((byte) 0));
        org.junit.Assert.assertNotNull(set82);
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "{}" + "'", str83.equals("{}"));
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b3 = defaultedMap1.isEmpty();
        java.util.Set set4 = defaultedMap1.entrySet();
        java.lang.String str5 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set8 = defaultedMap7.keySet();
        boolean b10 = defaultedMap7.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection11 = defaultedMap7.values();
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap7, predicate12, predicate13);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = defaultedMap16.remove((java.lang.Object) 1.0f);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap25 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = null;
        java.lang.Object obj28 = defaultedMap25.put((java.lang.Object) 1, obj27);
        boolean b30 = defaultedMap25.containsKey((java.lang.Object) 1);
        defaultedMap25.clear();
        java.lang.Object obj32 = defaultedMap16.put((java.lang.Object) defaultedMap21, (java.lang.Object) defaultedMap25);
        java.lang.Object obj33 = null;
        boolean b34 = defaultedMap21.containsValue(obj33);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b37 = defaultedMap36.isEmpty();
        boolean b38 = defaultedMap36.isEmpty();
        boolean b40 = defaultedMap36.equals((java.lang.Object) 10);
        java.lang.Object obj41 = defaultedMap21.get((java.lang.Object) b40);
        java.util.Map map42 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap7, (java.lang.Object) defaultedMap21);
        boolean b43 = defaultedMap1.containsKey((java.lang.Object) defaultedMap21);
        defaultedMap1.clear();
        defaultedMap1.clear();
        java.lang.String str46 = defaultedMap1.toString();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNotNull(set4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "{}" + "'", str5.equals("{}"));
        org.junit.Assert.assertNotNull(set8);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + (byte) 0 + "'", obj41.equals((byte) 0));
        org.junit.Assert.assertNotNull(map42);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "{}" + "'", str46.equals("{}"));
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        boolean b4 = defaultedMap1.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection5 = defaultedMap1.values();
        java.lang.String str6 = defaultedMap1.toString();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = defaultedMap8.get((java.lang.Object) 0.0f);
        boolean b11 = defaultedMap8.isEmpty();
        java.lang.Object obj14 = defaultedMap8.put((java.lang.Object) 10L, (java.lang.Object) "{}");
        collections.map.DefaultedMap defaultedMap15 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        boolean b16 = defaultedMap1.equals((java.lang.Object) defaultedMap15);
        defaultedMap15.clear();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.get((java.lang.Object) 0.0f);
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b24 = defaultedMap23.isEmpty();
        java.util.Set set25 = defaultedMap23.entrySet();
        boolean b26 = defaultedMap19.containsValue((java.lang.Object) set25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj30 = defaultedMap28.remove((java.lang.Object) (byte) 100);
        java.util.Set set31 = defaultedMap28.keySet();
        java.lang.Object obj32 = defaultedMap19.get((java.lang.Object) defaultedMap28);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set35 = defaultedMap34.keySet();
        boolean b37 = defaultedMap34.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection38 = defaultedMap34.values();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) collection38);
        int i40 = defaultedMap39.size();
        collections.Predicate predicate41 = null;
        collections.Predicate predicate42 = null;
        java.util.Map map43 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap39, predicate41, predicate42);
        boolean b44 = defaultedMap28.containsKey((java.lang.Object) map43);
        java.util.Set set45 = defaultedMap28.keySet();
        java.lang.Object obj46 = defaultedMap15.get((java.lang.Object) set45);
        java.util.Set set47 = defaultedMap15.entrySet();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "{}" + "'", str6.equals("{}"));
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (byte) 0 + "'", obj10.equals((byte) 0));
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (byte) 0 + "'", obj21.equals((byte) 0));
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(set25);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set31);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNotNull(set35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(collection38);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(set45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(set47);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = null;
        java.lang.Object obj22 = defaultedMap19.put((java.lang.Object) 1, obj21);
        boolean b24 = defaultedMap19.containsKey((java.lang.Object) 1);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap27 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj29 = defaultedMap27.remove((java.lang.Object) (byte) 100);
        int i30 = defaultedMap27.size();
        java.lang.Object obj31 = defaultedMap19.remove((java.lang.Object) defaultedMap27);
        boolean b32 = defaultedMap6.containsValue(obj31);
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = null;
        java.lang.Object obj37 = defaultedMap34.put((java.lang.Object) 1, obj36);
        java.util.Set set38 = defaultedMap34.keySet();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) set38);
        java.lang.Object obj41 = defaultedMap6.put((java.lang.Object) defaultedMap39, (java.lang.Object) (-1L));
        java.util.Collection collection42 = defaultedMap39.values();
        collections.Predicate predicate43 = null;
        collections.Predicate predicate44 = null;
        java.util.Map map45 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap39, predicate43, predicate44);
        collections.Transformer transformer46 = null;
        try {
            java.util.Map map47 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap39, transformer46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(collection42);
        org.junit.Assert.assertNotNull(map45);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        boolean b15 = defaultedMap10.isEmpty();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj20 = defaultedMap17.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set23 = defaultedMap22.keySet();
        java.util.Collection collection24 = defaultedMap22.values();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection30 = defaultedMap26.values();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) collection30);
        boolean b32 = defaultedMap31.isEmpty();
        boolean b33 = defaultedMap22.containsValue((java.lang.Object) defaultedMap31);
        boolean b34 = defaultedMap22.isEmpty();
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap22);
        boolean b36 = defaultedMap35.isEmpty();
        collections.map.DefaultedMap defaultedMap38 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj40 = defaultedMap38.remove((java.lang.Object) 1.0f);
        defaultedMap38.clear();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = defaultedMap43.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap47 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj49 = null;
        java.lang.Object obj50 = defaultedMap47.put((java.lang.Object) 1, obj49);
        boolean b52 = defaultedMap47.containsKey((java.lang.Object) 1);
        defaultedMap47.clear();
        java.lang.Object obj54 = defaultedMap38.put((java.lang.Object) defaultedMap43, (java.lang.Object) defaultedMap47);
        java.lang.Object obj55 = null;
        boolean b56 = defaultedMap43.containsValue(obj55);
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b59 = defaultedMap58.isEmpty();
        boolean b60 = defaultedMap58.isEmpty();
        boolean b62 = defaultedMap58.equals((java.lang.Object) 10);
        java.lang.Object obj63 = defaultedMap43.get((java.lang.Object) b62);
        java.util.Map map64 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap35, (java.lang.Object) b62);
        java.lang.Object obj65 = defaultedMap17.remove((java.lang.Object) defaultedMap35);
        java.lang.Object obj66 = defaultedMap10.get((java.lang.Object) defaultedMap35);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(set23);
        org.junit.Assert.assertNotNull(collection24);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue("'" + obj63 + "' != '" + (byte) 0 + "'", obj63.equals((byte) 0));
        org.junit.Assert.assertNotNull(map64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) (byte) 100);
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        java.lang.Object obj10 = defaultedMap1.get((java.lang.Object) collection9);
        collections.map.DefaultedMap defaultedMap12 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set13 = defaultedMap12.keySet();
        boolean b15 = defaultedMap12.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection16 = defaultedMap12.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) collection16);
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj21 = defaultedMap19.remove((java.lang.Object) 1.0f);
        defaultedMap19.clear();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = null;
        java.lang.Object obj31 = defaultedMap28.put((java.lang.Object) 1, obj30);
        boolean b33 = defaultedMap28.containsKey((java.lang.Object) 1);
        defaultedMap28.clear();
        java.lang.Object obj35 = defaultedMap19.put((java.lang.Object) defaultedMap24, (java.lang.Object) defaultedMap28);
        java.lang.Object obj36 = null;
        boolean b37 = defaultedMap24.containsValue(obj36);
        java.util.Set set38 = defaultedMap24.entrySet();
        java.lang.Object obj39 = defaultedMap17.remove((java.lang.Object) set38);
        boolean b40 = defaultedMap1.containsValue((java.lang.Object) defaultedMap17);
        java.util.Set set41 = defaultedMap17.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 0 + "'", obj10.equals(0));
        org.junit.Assert.assertNotNull(set13);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(collection16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(set41);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) b4);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap7.isEmpty();
        boolean b9 = defaultedMap7.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) (byte) 100);
        int i27 = defaultedMap24.size();
        java.lang.Object obj28 = defaultedMap16.remove((java.lang.Object) defaultedMap24);
        boolean b29 = defaultedMap11.containsKey((java.lang.Object) defaultedMap16);
        java.lang.Object obj30 = defaultedMap7.remove((java.lang.Object) defaultedMap11);
        defaultedMap7.clear();
        java.util.Set set32 = defaultedMap7.entrySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = null;
        boolean b52 = defaultedMap39.containsValue(obj51);
        java.util.Set set53 = defaultedMap39.entrySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection56 = defaultedMap55.values();
        boolean b57 = defaultedMap39.containsValue((java.lang.Object) collection56);
        defaultedMap7.putAll((java.util.Map) defaultedMap39);
        java.util.Map map59 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap5, (java.lang.Object) defaultedMap39);
        java.util.Set set60 = defaultedMap5.entrySet();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj64 = defaultedMap62.remove((java.lang.Object) 1.0f);
        java.lang.Object obj66 = defaultedMap62.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap68 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj70 = defaultedMap68.remove((java.lang.Object) 1.0f);
        java.lang.Object obj72 = defaultedMap68.remove((java.lang.Object) 'a');
        java.lang.Object obj73 = defaultedMap62.get((java.lang.Object) 'a');
        defaultedMap62.clear();
        boolean b75 = defaultedMap62.isEmpty();
        int i76 = defaultedMap62.size();
        collections.Predicate predicate77 = null;
        collections.Predicate predicate78 = null;
        java.util.Map map79 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap62, predicate77, predicate78);
        java.lang.Object obj80 = defaultedMap5.get((java.lang.Object) predicate78);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNotNull(set60);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + obj73 + "' != '" + (byte) 0 + "'", obj73.equals((byte) 0));
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertNotNull(map79);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + true + "'", obj80.equals(true));
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        defaultedMap6.putAll((java.util.Map) defaultedMap8);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        boolean b25 = defaultedMap13.isEmpty();
        java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) b25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap28.isEmpty();
        java.lang.Object obj32 = defaultedMap28.get((java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap28.entrySet();
        boolean b34 = defaultedMap8.equals((java.lang.Object) defaultedMap28);
        int i35 = defaultedMap8.size();
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj39 = null;
        java.lang.Object obj40 = defaultedMap37.put((java.lang.Object) 1, obj39);
        java.util.Set set41 = defaultedMap37.keySet();
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = defaultedMap43.remove((java.lang.Object) 1.0f);
        defaultedMap43.clear();
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = defaultedMap48.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj54 = null;
        java.lang.Object obj55 = defaultedMap52.put((java.lang.Object) 1, obj54);
        boolean b57 = defaultedMap52.containsKey((java.lang.Object) 1);
        defaultedMap52.clear();
        java.lang.Object obj59 = defaultedMap43.put((java.lang.Object) defaultedMap48, (java.lang.Object) defaultedMap52);
        defaultedMap37.putAll((java.util.Map) defaultedMap48);
        java.lang.Object obj61 = null;
        java.lang.Object obj62 = defaultedMap48.remove(obj61);
        java.util.Collection collection63 = defaultedMap48.values();
        boolean b64 = defaultedMap48.isEmpty();
        java.lang.Object obj65 = defaultedMap8.get((java.lang.Object) b64);
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = defaultedMap67.remove((java.lang.Object) 1.0f);
        java.util.Set set70 = defaultedMap67.keySet();
        int i71 = defaultedMap67.size();
        java.lang.String str72 = defaultedMap67.toString();
        defaultedMap8.putAll((java.util.Map) defaultedMap67);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(set41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(collection63);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue("'" + obj65 + "' != '" + (byte) 0 + "'", obj65.equals((byte) 0));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(set70);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "{}" + "'", str72.equals("{}"));
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        int i7 = defaultedMap6.size();
        collections.map.DefaultedMap defaultedMap9 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set10 = defaultedMap9.keySet();
        java.util.Collection collection11 = defaultedMap9.values();
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        boolean b16 = defaultedMap13.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection17 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) collection17);
        boolean b19 = defaultedMap18.isEmpty();
        boolean b20 = defaultedMap9.containsValue((java.lang.Object) defaultedMap18);
        java.lang.Object obj21 = new java.lang.Object();
        boolean b22 = defaultedMap18.containsValue(obj21);
        boolean b23 = defaultedMap18.isEmpty();
        defaultedMap6.putAll((java.util.Map) defaultedMap18);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set27 = defaultedMap26.keySet();
        boolean b29 = defaultedMap26.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection30 = defaultedMap26.values();
        java.lang.String str31 = defaultedMap26.toString();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b34 = defaultedMap33.isEmpty();
        boolean b35 = defaultedMap33.isEmpty();
        java.lang.Object obj37 = defaultedMap33.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        defaultedMap39.clear();
        collections.map.DefaultedMap defaultedMap44 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = defaultedMap44.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap48 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = null;
        java.lang.Object obj51 = defaultedMap48.put((java.lang.Object) 1, obj50);
        boolean b53 = defaultedMap48.containsKey((java.lang.Object) 1);
        defaultedMap48.clear();
        java.lang.Object obj55 = defaultedMap39.put((java.lang.Object) defaultedMap44, (java.lang.Object) defaultedMap48);
        java.lang.Object obj56 = defaultedMap33.get((java.lang.Object) defaultedMap44);
        java.lang.Object obj58 = defaultedMap44.get((java.lang.Object) 100L);
        java.lang.Object obj59 = defaultedMap26.remove((java.lang.Object) defaultedMap44);
        boolean b60 = defaultedMap26.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj63 = defaultedMap26.remove((java.lang.Object) defaultedMap62);
        collections.map.DefaultedMap defaultedMap65 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj67 = null;
        java.lang.Object obj68 = defaultedMap65.put((java.lang.Object) 1, obj67);
        java.util.Set set69 = defaultedMap65.keySet();
        int i70 = defaultedMap65.size();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj74 = defaultedMap72.remove((java.lang.Object) 1.0f);
        java.lang.Object obj76 = defaultedMap72.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap78 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj80 = defaultedMap78.remove((java.lang.Object) 1.0f);
        java.lang.Object obj82 = defaultedMap78.remove((java.lang.Object) 'a');
        java.lang.Object obj83 = defaultedMap72.get((java.lang.Object) 'a');
        boolean b84 = defaultedMap65.containsKey(obj83);
        collections.map.DefaultedMap defaultedMap86 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection87 = defaultedMap86.values();
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) collection87);
        java.lang.Object obj89 = defaultedMap65.remove((java.lang.Object) collection87);
        java.lang.Object obj90 = defaultedMap62.remove((java.lang.Object) defaultedMap65);
        java.util.Map map91 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap18, obj90);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertNotNull(set10);
        org.junit.Assert.assertNotNull(collection11);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(collection17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(set27);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(collection30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "{}" + "'", str31.equals("{}"));
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (byte) 0 + "'", obj37.equals((byte) 0));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + (byte) 0 + "'", obj56.equals((byte) 0));
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + (byte) 0 + "'", obj58.equals((byte) 0));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(set69);
        org.junit.Assert.assertTrue(i70 == 1);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (byte) 0 + "'", obj83.equals((byte) 0));
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertNotNull(collection87);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(map91);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection25 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) collection25);
        boolean b27 = defaultedMap16.containsValue((java.lang.Object) defaultedMap26);
        java.util.Collection collection28 = defaultedMap16.values();
        java.util.Collection collection29 = defaultedMap16.values();
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = defaultedMap31.remove((java.lang.Object) 1.0f);
        defaultedMap31.clear();
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj38 = defaultedMap36.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap40 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj42 = null;
        java.lang.Object obj43 = defaultedMap40.put((java.lang.Object) 1, obj42);
        boolean b45 = defaultedMap40.containsKey((java.lang.Object) 1);
        defaultedMap40.clear();
        java.lang.Object obj47 = defaultedMap31.put((java.lang.Object) defaultedMap36, (java.lang.Object) defaultedMap40);
        collections.map.DefaultedMap defaultedMap49 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set50 = defaultedMap49.keySet();
        java.util.Collection collection51 = defaultedMap49.values();
        collections.map.DefaultedMap defaultedMap53 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set54 = defaultedMap53.keySet();
        boolean b56 = defaultedMap53.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection57 = defaultedMap53.values();
        collections.map.DefaultedMap defaultedMap58 = new collections.map.DefaultedMap((java.lang.Object) collection57);
        boolean b59 = defaultedMap58.isEmpty();
        boolean b60 = defaultedMap49.containsValue((java.lang.Object) defaultedMap58);
        boolean b61 = defaultedMap49.isEmpty();
        collections.map.DefaultedMap defaultedMap62 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap49);
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        defaultedMap49.putAll((java.util.Map) defaultedMap64);
        java.lang.Object obj69 = defaultedMap36.remove((java.lang.Object) defaultedMap64);
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set72 = defaultedMap71.keySet();
        java.util.Collection collection73 = defaultedMap71.values();
        collections.map.DefaultedMap defaultedMap75 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set76 = defaultedMap75.keySet();
        boolean b78 = defaultedMap75.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection79 = defaultedMap75.values();
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) collection79);
        boolean b81 = defaultedMap80.isEmpty();
        boolean b82 = defaultedMap71.containsValue((java.lang.Object) defaultedMap80);
        boolean b83 = defaultedMap71.isEmpty();
        collections.map.DefaultedMap defaultedMap84 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap71);
        boolean b85 = defaultedMap84.isEmpty();
        java.util.Collection collection86 = defaultedMap84.values();
        collections.map.DefaultedMap defaultedMap88 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj90 = defaultedMap88.remove((java.lang.Object) 1.0f);
        defaultedMap84.putAll((java.util.Map) defaultedMap88);
        collections.map.DefaultedMap defaultedMap92 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap84);
        defaultedMap92.clear();
        java.lang.Object obj94 = defaultedMap64.remove((java.lang.Object) defaultedMap92);
        collections.Predicate predicate95 = null;
        collections.Predicate predicate96 = null;
        java.util.Map map97 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap64, predicate95, predicate96);
        boolean b98 = defaultedMap16.equals((java.lang.Object) predicate96);
        boolean b99 = defaultedMap1.containsValue((java.lang.Object) b98);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(collection25);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(collection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(set50);
        org.junit.Assert.assertNotNull(collection51);
        org.junit.Assert.assertNotNull(set54);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNotNull(collection57);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(set72);
        org.junit.Assert.assertNotNull(collection73);
        org.junit.Assert.assertNotNull(set76);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertNotNull(collection79);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertNotNull(collection86);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(map97);
        org.junit.Assert.assertTrue(b98 == false);
        org.junit.Assert.assertTrue(b99 == false);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.remove((java.lang.Object) 1.0f);
        defaultedMap1.clear();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj12 = null;
        java.lang.Object obj13 = defaultedMap10.put((java.lang.Object) 1, obj12);
        boolean b15 = defaultedMap10.containsKey((java.lang.Object) 1);
        defaultedMap10.clear();
        java.lang.Object obj17 = defaultedMap1.put((java.lang.Object) defaultedMap6, (java.lang.Object) defaultedMap10);
        boolean b19 = defaultedMap6.equals((java.lang.Object) (byte) 0);
        collections.map.DefaultedMap defaultedMap21 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = defaultedMap21.remove((java.lang.Object) 1.0f);
        defaultedMap21.clear();
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = defaultedMap26.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap30 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = null;
        java.lang.Object obj33 = defaultedMap30.put((java.lang.Object) 1, obj32);
        boolean b35 = defaultedMap30.containsKey((java.lang.Object) 1);
        defaultedMap30.clear();
        java.lang.Object obj37 = defaultedMap21.put((java.lang.Object) defaultedMap26, (java.lang.Object) defaultedMap30);
        collections.Predicate predicate38 = null;
        collections.Predicate predicate39 = null;
        java.util.Map map40 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap21, predicate38, predicate39);
        collections.Predicate predicate41 = null;
        collections.Predicate predicate42 = null;
        java.util.Map map43 = collections.map.PredicatedMap.decorate(map40, predicate41, predicate42);
        boolean b44 = defaultedMap6.containsKey((java.lang.Object) predicate42);
        collections.map.DefaultedMap defaultedMap46 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set47 = defaultedMap46.keySet();
        boolean b49 = defaultedMap46.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection50 = defaultedMap46.values();
        java.util.Set set51 = defaultedMap46.keySet();
        java.util.Set set52 = defaultedMap46.entrySet();
        defaultedMap46.clear();
        java.lang.Object obj54 = defaultedMap6.get((java.lang.Object) defaultedMap46);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(map40);
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(set47);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNotNull(collection50);
        org.junit.Assert.assertNotNull(set51);
        org.junit.Assert.assertNotNull(set52);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + (byte) 0 + "'", obj54.equals((byte) 0));
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj15 = null;
        java.lang.Object obj16 = defaultedMap13.put((java.lang.Object) 1, obj15);
        java.util.Set set17 = defaultedMap13.keySet();
        collections.map.DefaultedMap defaultedMap18 = new collections.map.DefaultedMap((java.lang.Object) set17);
        collections.map.DefaultedMap defaultedMap20 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set21 = defaultedMap20.keySet();
        java.util.Collection collection22 = defaultedMap20.values();
        defaultedMap18.putAll((java.util.Map) defaultedMap20);
        java.lang.Object obj24 = defaultedMap1.remove((java.lang.Object) defaultedMap18);
        collections.Predicate predicate25 = null;
        collections.Predicate predicate26 = null;
        java.util.Map map27 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate25, predicate26);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set21);
        org.junit.Assert.assertNotNull(collection22);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(map27);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        defaultedMap1.clear();
        java.util.Set set6 = defaultedMap1.entrySet();
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b9 = defaultedMap8.isEmpty();
        boolean b10 = defaultedMap8.isEmpty();
        boolean b12 = defaultedMap8.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b15 = defaultedMap8.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set16 = defaultedMap8.entrySet();
        java.lang.Object obj17 = defaultedMap1.get((java.lang.Object) set16);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate18, predicate19);
        collections.Transformer transformer21 = null;
        try {
            java.util.Map map22 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap1, transformer21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(set16);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + (byte) 0 + "'", obj17.equals((byte) 0));
        org.junit.Assert.assertNotNull(map20);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        defaultedMap6.putAll((java.util.Map) defaultedMap8);
        boolean b12 = defaultedMap8.isEmpty();
        int i13 = defaultedMap8.size();
        java.lang.String str14 = defaultedMap8.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "{}" + "'", str14.equals("{}"));
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        boolean b6 = defaultedMap1.containsKey((java.lang.Object) 1);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        boolean b11 = defaultedMap8.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection12 = defaultedMap8.values();
        collections.Predicate predicate13 = null;
        collections.Predicate predicate14 = null;
        java.util.Map map15 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap8, predicate13, predicate14);
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj19 = defaultedMap17.remove((java.lang.Object) 1.0f);
        defaultedMap17.clear();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj24 = defaultedMap22.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap26 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj28 = null;
        java.lang.Object obj29 = defaultedMap26.put((java.lang.Object) 1, obj28);
        boolean b31 = defaultedMap26.containsKey((java.lang.Object) 1);
        defaultedMap26.clear();
        java.lang.Object obj33 = defaultedMap17.put((java.lang.Object) defaultedMap22, (java.lang.Object) defaultedMap26);
        java.lang.Object obj34 = null;
        boolean b35 = defaultedMap22.containsValue(obj34);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b38 = defaultedMap37.isEmpty();
        boolean b39 = defaultedMap37.isEmpty();
        boolean b41 = defaultedMap37.equals((java.lang.Object) 10);
        java.lang.Object obj42 = defaultedMap22.get((java.lang.Object) b41);
        java.util.Map map43 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) defaultedMap22);
        collections.map.DefaultedMap defaultedMap45 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b46 = defaultedMap45.isEmpty();
        boolean b47 = defaultedMap45.isEmpty();
        java.lang.Object obj49 = defaultedMap45.get((java.lang.Object) 10.0d);
        collections.map.DefaultedMap defaultedMap51 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = defaultedMap51.remove((java.lang.Object) 1.0f);
        defaultedMap51.clear();
        collections.map.DefaultedMap defaultedMap56 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj58 = defaultedMap56.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap60 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj62 = null;
        java.lang.Object obj63 = defaultedMap60.put((java.lang.Object) 1, obj62);
        boolean b65 = defaultedMap60.containsKey((java.lang.Object) 1);
        defaultedMap60.clear();
        java.lang.Object obj67 = defaultedMap51.put((java.lang.Object) defaultedMap56, (java.lang.Object) defaultedMap60);
        java.lang.Object obj68 = defaultedMap45.get((java.lang.Object) defaultedMap56);
        java.util.Map map69 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap22, (java.lang.Object) defaultedMap45);
        collections.map.DefaultedMap defaultedMap71 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b72 = defaultedMap71.isEmpty();
        boolean b73 = defaultedMap71.isEmpty();
        boolean b75 = defaultedMap71.equals((java.lang.Object) 10);
        collections.map.DefaultedMap defaultedMap77 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b78 = defaultedMap71.containsKey((java.lang.Object) (byte) 0);
        java.util.Set set79 = defaultedMap71.entrySet();
        java.lang.Object obj80 = null;
        boolean b81 = defaultedMap71.containsValue(obj80);
        java.lang.Object obj82 = defaultedMap1.put((java.lang.Object) defaultedMap22, obj80);
        java.util.Set set83 = defaultedMap1.keySet();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(collection12);
        org.junit.Assert.assertNotNull(map15);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + (byte) 0 + "'", obj42.equals((byte) 0));
        org.junit.Assert.assertNotNull(map43);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (byte) 0 + "'", obj49.equals((byte) 0));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + (byte) 0 + "'", obj68.equals((byte) 0));
        org.junit.Assert.assertNotNull(map69);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertNotNull(set79);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(set83);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.lang.Object obj4 = defaultedMap1.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj8 = defaultedMap6.remove((java.lang.Object) 1.0f);
        java.lang.Object obj10 = defaultedMap6.remove((java.lang.Object) 'a');
        defaultedMap1.putAll((java.util.Map) defaultedMap6);
        collections.Predicate predicate12 = null;
        collections.Predicate predicate13 = null;
        java.util.Map map14 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap1, predicate12, predicate13);
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) "");
        boolean b17 = defaultedMap1.containsKey((java.lang.Object) defaultedMap16);
        collections.Predicate predicate18 = null;
        collections.Predicate predicate19 = null;
        java.util.Map map20 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap16, predicate18, predicate19);
        int i21 = defaultedMap16.size();
        collections.map.DefaultedMap defaultedMap23 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = defaultedMap23.put((java.lang.Object) 1, obj25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj30 = null;
        java.lang.Object obj31 = defaultedMap28.put((java.lang.Object) 1, obj30);
        boolean b33 = defaultedMap28.containsKey((java.lang.Object) 1);
        java.lang.String str34 = defaultedMap28.toString();
        boolean b35 = defaultedMap23.containsValue((java.lang.Object) str34);
        collections.map.DefaultedMap defaultedMap37 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set38 = defaultedMap37.keySet();
        java.lang.Object obj40 = defaultedMap37.get((java.lang.Object) 10L);
        collections.map.DefaultedMap defaultedMap42 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj44 = defaultedMap42.remove((java.lang.Object) 1.0f);
        java.lang.Object obj46 = defaultedMap42.remove((java.lang.Object) 'a');
        defaultedMap37.putAll((java.util.Map) defaultedMap42);
        collections.Predicate predicate48 = null;
        collections.Predicate predicate49 = null;
        java.util.Map map50 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap37, predicate48, predicate49);
        collections.map.DefaultedMap defaultedMap52 = new collections.map.DefaultedMap((java.lang.Object) "");
        boolean b53 = defaultedMap37.containsKey((java.lang.Object) defaultedMap52);
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b56 = defaultedMap55.isEmpty();
        boolean b57 = defaultedMap55.isEmpty();
        collections.map.DefaultedMap defaultedMap59 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj62 = defaultedMap59.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap64 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj66 = null;
        java.lang.Object obj67 = defaultedMap64.put((java.lang.Object) 1, obj66);
        boolean b69 = defaultedMap64.containsKey((java.lang.Object) 1);
        defaultedMap64.clear();
        collections.map.DefaultedMap defaultedMap72 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj74 = defaultedMap72.remove((java.lang.Object) (byte) 100);
        int i75 = defaultedMap72.size();
        java.lang.Object obj76 = defaultedMap64.remove((java.lang.Object) defaultedMap72);
        boolean b77 = defaultedMap59.containsKey((java.lang.Object) defaultedMap64);
        java.lang.Object obj78 = defaultedMap55.remove((java.lang.Object) defaultedMap59);
        collections.map.DefaultedMap defaultedMap80 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj82 = defaultedMap80.remove((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = defaultedMap55.get(obj82);
        java.lang.Object obj84 = defaultedMap52.remove((java.lang.Object) defaultedMap55);
        defaultedMap23.putAll((java.util.Map) defaultedMap55);
        java.lang.Object obj86 = defaultedMap16.get((java.lang.Object) defaultedMap23);
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertTrue("'" + obj4 + "' != '" + (byte) 0 + "'", obj4.equals((byte) 0));
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(map14);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(map20);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "{1=null}" + "'", str34.equals("{1=null}"));
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertNotNull(set38);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + (byte) 0 + "'", obj40.equals((byte) 0));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(map50);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + (byte) 0 + "'", obj83.equals((byte) 0));
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + obj86 + "' != '" + "" + "'", obj86.equals(""));
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        int i13 = defaultedMap10.size();
        defaultedMap10.clear();
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set17 = defaultedMap16.keySet();
        collections.map.DefaultedMap defaultedMap19 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set20 = defaultedMap19.keySet();
        boolean b22 = defaultedMap19.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection23 = defaultedMap19.values();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) collection23);
        boolean b25 = defaultedMap24.isEmpty();
        java.lang.Object obj26 = defaultedMap16.get((java.lang.Object) defaultedMap24);
        boolean b27 = defaultedMap10.containsValue((java.lang.Object) defaultedMap24);
        java.util.Collection collection28 = defaultedMap24.values();
        collections.map.DefaultedMap defaultedMap29 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap24);
        collections.map.DefaultedMap defaultedMap31 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection32 = defaultedMap31.values();
        collections.map.DefaultedMap defaultedMap33 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap31);
        defaultedMap29.putAll((java.util.Map) defaultedMap31);
        java.util.Collection collection35 = defaultedMap31.values();
        java.util.Collection collection36 = defaultedMap31.values();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(set17);
        org.junit.Assert.assertNotNull(set20);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection23);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 0 + "'", obj26.equals((byte) 0));
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(collection28);
        org.junit.Assert.assertNotNull(collection32);
        org.junit.Assert.assertNotNull(collection35);
        org.junit.Assert.assertNotNull(collection36);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = defaultedMap1.get((java.lang.Object) 0.0f);
        boolean b4 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) b4);
        collections.map.DefaultedMap defaultedMap7 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b8 = defaultedMap7.isEmpty();
        boolean b9 = defaultedMap7.isEmpty();
        collections.map.DefaultedMap defaultedMap11 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj14 = defaultedMap11.put((java.lang.Object) (-1.0d), (java.lang.Object) '4');
        collections.map.DefaultedMap defaultedMap16 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj18 = null;
        java.lang.Object obj19 = defaultedMap16.put((java.lang.Object) 1, obj18);
        boolean b21 = defaultedMap16.containsKey((java.lang.Object) 1);
        defaultedMap16.clear();
        collections.map.DefaultedMap defaultedMap24 = new collections.map.DefaultedMap((java.lang.Object) 0);
        java.lang.Object obj26 = defaultedMap24.remove((java.lang.Object) (byte) 100);
        int i27 = defaultedMap24.size();
        java.lang.Object obj28 = defaultedMap16.remove((java.lang.Object) defaultedMap24);
        boolean b29 = defaultedMap11.containsKey((java.lang.Object) defaultedMap16);
        java.lang.Object obj30 = defaultedMap7.remove((java.lang.Object) defaultedMap11);
        defaultedMap7.clear();
        java.util.Set set32 = defaultedMap7.entrySet();
        collections.map.DefaultedMap defaultedMap34 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj36 = defaultedMap34.remove((java.lang.Object) 1.0f);
        defaultedMap34.clear();
        collections.map.DefaultedMap defaultedMap39 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = defaultedMap39.remove((java.lang.Object) 1.0f);
        collections.map.DefaultedMap defaultedMap43 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = defaultedMap43.put((java.lang.Object) 1, obj45);
        boolean b48 = defaultedMap43.containsKey((java.lang.Object) 1);
        defaultedMap43.clear();
        java.lang.Object obj50 = defaultedMap34.put((java.lang.Object) defaultedMap39, (java.lang.Object) defaultedMap43);
        java.lang.Object obj51 = null;
        boolean b52 = defaultedMap39.containsValue(obj51);
        java.util.Set set53 = defaultedMap39.entrySet();
        collections.map.DefaultedMap defaultedMap55 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Collection collection56 = defaultedMap55.values();
        boolean b57 = defaultedMap39.containsValue((java.lang.Object) collection56);
        defaultedMap7.putAll((java.util.Map) defaultedMap39);
        java.util.Map map59 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap5, (java.lang.Object) defaultedMap39);
        collections.map.DefaultedMap defaultedMap61 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = defaultedMap61.remove((java.lang.Object) 1.0f);
        java.lang.Object obj65 = defaultedMap61.remove((java.lang.Object) 'a');
        collections.map.DefaultedMap defaultedMap67 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = defaultedMap67.remove((java.lang.Object) 1.0f);
        java.lang.Object obj71 = defaultedMap67.remove((java.lang.Object) 'a');
        java.lang.Object obj72 = defaultedMap61.get((java.lang.Object) 'a');
        defaultedMap61.clear();
        boolean b74 = defaultedMap61.isEmpty();
        collections.map.DefaultedMap defaultedMap76 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b77 = defaultedMap76.isEmpty();
        boolean b78 = defaultedMap76.isEmpty();
        java.util.Map map79 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap61, (java.lang.Object) b78);
        java.lang.Object obj80 = defaultedMap39.get((java.lang.Object) b78);
        collections.Predicate predicate81 = null;
        collections.Predicate predicate82 = null;
        java.util.Map map83 = collections.map.PredicatedMap.decorate((java.util.Map) defaultedMap39, predicate81, predicate82);
        org.junit.Assert.assertTrue("'" + obj3 + "' != '" + (byte) 0 + "'", obj3.equals((byte) 0));
        org.junit.Assert.assertTrue(b4 == true);
        org.junit.Assert.assertTrue(b8 == true);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(set32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(set53);
        org.junit.Assert.assertNotNull(collection56);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(map59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + obj72 + "' != '" + (byte) 0 + "'", obj72.equals((byte) 0));
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNotNull(map79);
        org.junit.Assert.assertTrue("'" + obj80 + "' != '" + (byte) 0 + "'", obj80.equals((byte) 0));
        org.junit.Assert.assertNotNull(map83);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set2 = defaultedMap1.keySet();
        java.util.Collection collection3 = defaultedMap1.values();
        collections.map.DefaultedMap defaultedMap5 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set6 = defaultedMap5.keySet();
        boolean b8 = defaultedMap5.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection9 = defaultedMap5.values();
        collections.map.DefaultedMap defaultedMap10 = new collections.map.DefaultedMap((java.lang.Object) collection9);
        boolean b11 = defaultedMap10.isEmpty();
        boolean b12 = defaultedMap1.containsValue((java.lang.Object) defaultedMap10);
        boolean b13 = defaultedMap1.isEmpty();
        collections.map.DefaultedMap defaultedMap14 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap1);
        int i15 = defaultedMap14.size();
        org.junit.Assert.assertNotNull(set2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(set6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(i15 == 0);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        collections.map.DefaultedMap defaultedMap1 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        java.lang.Object obj4 = defaultedMap1.put((java.lang.Object) 1, obj3);
        java.util.Set set5 = defaultedMap1.keySet();
        collections.map.DefaultedMap defaultedMap6 = new collections.map.DefaultedMap((java.lang.Object) set5);
        collections.map.DefaultedMap defaultedMap8 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set9 = defaultedMap8.keySet();
        java.util.Collection collection10 = defaultedMap8.values();
        defaultedMap6.putAll((java.util.Map) defaultedMap8);
        collections.map.DefaultedMap defaultedMap13 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set14 = defaultedMap13.keySet();
        java.util.Collection collection15 = defaultedMap13.values();
        collections.map.DefaultedMap defaultedMap17 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        java.util.Set set18 = defaultedMap17.keySet();
        boolean b20 = defaultedMap17.containsKey((java.lang.Object) 0.0f);
        java.util.Collection collection21 = defaultedMap17.values();
        collections.map.DefaultedMap defaultedMap22 = new collections.map.DefaultedMap((java.lang.Object) collection21);
        boolean b23 = defaultedMap22.isEmpty();
        boolean b24 = defaultedMap13.containsValue((java.lang.Object) defaultedMap22);
        boolean b25 = defaultedMap13.isEmpty();
        java.util.Map map26 = collections.map.DefaultedMap.decorate((java.util.Map) defaultedMap8, (java.lang.Object) b25);
        collections.map.DefaultedMap defaultedMap28 = new collections.map.DefaultedMap((java.lang.Object) (byte) 0);
        boolean b29 = defaultedMap28.isEmpty();
        boolean b30 = defaultedMap28.isEmpty();
        java.lang.Object obj32 = defaultedMap28.get((java.lang.Object) 10.0d);
        java.util.Set set33 = defaultedMap28.entrySet();
        boolean b34 = defaultedMap8.equals((java.lang.Object) defaultedMap28);
        collections.map.DefaultedMap defaultedMap35 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        collections.map.DefaultedMap defaultedMap36 = new collections.map.DefaultedMap((java.lang.Object) defaultedMap8);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(set5);
        org.junit.Assert.assertNotNull(set9);
        org.junit.Assert.assertNotNull(collection10);
        org.junit.Assert.assertNotNull(set14);
        org.junit.Assert.assertNotNull(collection15);
        org.junit.Assert.assertNotNull(set18);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(collection21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(map26);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + (byte) 0 + "'", obj32.equals((byte) 0));
        org.junit.Assert.assertNotNull(set33);
        org.junit.Assert.assertTrue(b34 == true);
    }
}

