/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 08 14:13:15 GMT 2017
 */

package collections.comparators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import collections.comparators.FixedOrderComparator;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class FixedOrderComparator_ESTest extends FixedOrderComparator_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 58 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true
   * Goal 3. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false
   * Goal 4. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false
   * Goal 5. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - true
   * Goal 6. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false
   * Goal 7. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I71 Branch 22 IFNONNULL L273 - false
   * Goal 8. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 9. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 10. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 11. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 12. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 13. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 14. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I71 Branch 22 IFNONNULL L273 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 15. compare(Ljava/lang/Object;Ljava/lang/Object;)I_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 17. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 18. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 19. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 20. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 21. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 22. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 23. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 24. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 25. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 26. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 27. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 28. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 29. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 30. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 31. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 32. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 33. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 259
   * Goal 34. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 273
   * Goal 35. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 274
   * Goal 36. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 37. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 38. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 39. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 42. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 43. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 44. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 45. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 115: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:256 - ReplaceVariable obj1 -> obj2
   * Goal 47. Weak Mutation 116: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:257 - ReplaceVariable obj2 -> obj1
   * Goal 48. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 49. Weak Mutation 121: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 50. Weak Mutation 122: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 51. Weak Mutation 124: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp Negation
   * Goal 52. Weak Mutation 125: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp +1
   * Goal 53. Weak Mutation 126: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp -1
   * Goal 54. Weak Mutation 146: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:273 - ReplaceComparisonOperator != null -> = null
   * Goal 55. Weak Mutation 147: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:273 - ReplaceVariable obj1 -> obj2
   * Goal 56. Weak Mutation 149: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:274 - ReplaceConstant - Attempting to compare unknown object  -> 
   * Goal 57. Weak Mutation 150: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:274 - ReplaceVariable unknownObj -> obj2
   * Goal 58. Weak Mutation 152: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:274 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        fixedOrderComparator0.compare(object0, "B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attempting to compare unknown object java.lang.Object@4e95b1a7
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 1
  /*
   * 76 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - true
   * Goal 4. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 5. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false
   * Goal 6. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - false
   * Goal 7. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I13 Branch 8 IF_ICMPEQ L150 - false
   * Goal 8. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - true in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 9. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - true in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 10. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 11. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 12. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I13 Branch 8 IF_ICMPEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 13. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 14. setUnknownObjectBehavior(I)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 15. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 17. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 18. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 19. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 20. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 21. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 22. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 23. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 96
   * Goal 24. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 99
   * Goal 25. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 102
   * Goal 26. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 27. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 28. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 29. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 30. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 31. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 32. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 33. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 34. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 35. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 153
   * Goal 36. [METHOD] collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V
   * Goal 37. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 38. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V
   * Goal 39. Weak Mutation 31: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 32: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 33: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 42. Weak Mutation 34: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 43. Weak Mutation 35: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 44. Weak Mutation 36: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 45. Weak Mutation 37: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:96 - ReplaceComparisonOperator != null -> = null
   * Goal 46. Weak Mutation 40: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:99 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 50: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 50. Weak Mutation 51: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 51. Weak Mutation 52: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 52. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 53. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 54. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 55. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 56. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 58: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 58. Weak Mutation 59: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 59. Weak Mutation 60: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 60. Weak Mutation 61: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 61. Weak Mutation 62: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 62. Weak Mutation 63: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 63. Weak Mutation 66: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> <=
   * Goal 64. Weak Mutation 67: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 65. Weak Mutation 68: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 66. Weak Mutation 69: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 67. Weak Mutation 70: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 68. Weak Mutation 71: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 69. Weak Mutation 72: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 70. Weak Mutation 73: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> 0
   * Goal 71. Weak Mutation 74: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> 1
   * Goal 72. Weak Mutation 75: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> -1
   * Goal 73. Weak Mutation 76: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> 3
   * Goal 74. Weak Mutation 79: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> <=
   * Goal 75. Weak Mutation 80: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:153 - ReplaceConstant - Unrecognised value for unknown behaviour flag -> 
   * Goal 76. Weak Mutation 81: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:153 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator((List) linkedList0);
      // Undeclared exception!
      try { 
        fixedOrderComparator0.setUnknownObjectBehavior((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unrecognised value for unknown behaviour flag
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 2
  /*
   * 33 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 3. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 4. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 5. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 6. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 7. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 8. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 9. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 10. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 11. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 12. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 13. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 14. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 15. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 16. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 17. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 18. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 19. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 20. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 21. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 22. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 23. [METHOD] collections.comparators.FixedOrderComparator.checkLocked()V
   * Goal 24. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 25. [METHODNOEX] collections.comparators.FixedOrderComparator.checkLocked()V
   * Goal 26. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 29. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 30. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 31. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 32. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      fixedOrderComparator0.checkLocked();
      assertEquals(2, fixedOrderComparator0.getUnknownObjectBehavior());
  }

  //Test case number: 3
  /*
   * 97 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true
   * Goal 7. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 8. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false
   * Goal 9. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - true
   * Goal 10. Branch collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch in context: collections.comparators.FixedOrderComparator:isLocked()Z
   * Goal 11. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 12. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 13. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 14. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 15. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 16. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 17. [Output]: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:Negative
   * Goal 18. [Output]: collections.comparators.FixedOrderComparator.isLocked()Z:True
   * Goal 19. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 20. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 21. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 22. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 23. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 24. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 25. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 26. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 27. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 28. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 29. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 30. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 31. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 32. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 33. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 34. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 35. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 36. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 37. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 38. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 39. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 40. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 41. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 42. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 43. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 44. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 279
   * Goal 45. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 46. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 47. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 48. [METHOD] collections.comparators.FixedOrderComparator.isLocked()Z
   * Goal 49. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 50. [METHODNOEX] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 51. [METHODNOEX] collections.comparators.FixedOrderComparator.isLocked()Z
   * Goal 52. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 54. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 55. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 56. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 57. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 58. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 59. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 60. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 61. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 62. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 63. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 64. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 65. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 66. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 67. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 68. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 69. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 70. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 71. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 72. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 73. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 74. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 75. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 77. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 78. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 79. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 80. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 81. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 82. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 83. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 84. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 85. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 86. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 87. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 88. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 89. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 90. Weak Mutation 102: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 0 -> 1
   * Goal 91. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 92. Weak Mutation 115: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:256 - ReplaceVariable obj1 -> obj2
   * Goal 93. Weak Mutation 116: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:257 - ReplaceVariable obj2 -> obj1
   * Goal 94. Weak Mutation 117: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position1 -> position2
   * Goal 95. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 96. Weak Mutation 119: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position2 -> position1
   * Goal 97. Weak Mutation 120: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      fixedOrderComparator0.compare(object0, objectArray0[2]);
      boolean boolean0 = fixedOrderComparator0.isLocked();
      assertTrue(boolean0);
  }

  //Test case number: 4
  /*
   * 70 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 3. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 4. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 5. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false
   * Goal 6. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - true
   * Goal 7. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 8. Branch collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I: root-Branch in context: collections.comparators.FixedOrderComparator:getUnknownObjectBehavior()I
   * Goal 9. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 10. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 11. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - true in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 12. [Output]: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:Zero
   * Goal 13. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 14. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 15. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 17. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 18. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 19. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 20. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 21. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 22. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 23. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 24. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 25. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 26. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 27. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 28. collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I: Line 136
   * Goal 29. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 30. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 31. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 32. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 155
   * Goal 33. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 156
   * Goal 34. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 35. [METHOD] collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I
   * Goal 36. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 37. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 38. [METHODNOEX] collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I
   * Goal 39. [METHODNOEX] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 40. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 43. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 44. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 45. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 46. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 47. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 44: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 49. Weak Mutation 46: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 50. Weak Mutation 47: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 48: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - InsertUnaryOp +1
   * Goal 52. Weak Mutation 49: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - InsertUnaryOp -1
   * Goal 53. Weak Mutation 50: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 54. Weak Mutation 52: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 55. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 56. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 57. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 58. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 59. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 60. Weak Mutation 58: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 61. Weak Mutation 60: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 62. Weak Mutation 61: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 63. Weak Mutation 62: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 64. Weak Mutation 63: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 65. Weak Mutation 64: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> -2
   * Goal 66. Weak Mutation 82: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 67. Weak Mutation 84: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 68. Weak Mutation 85: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 69. Weak Mutation 86: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 70. Weak Mutation 87: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC -1 unknownObjectBehavior
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      assertEquals(2, fixedOrderComparator0.getUnknownObjectBehavior());
      
      fixedOrderComparator0.setUnknownObjectBehavior(0);
      int int0 = fixedOrderComparator0.getUnknownObjectBehavior();
      assertEquals(0, int0);
  }

  //Test case number: 5
  /*
   * 31 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 2. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 3. compare(Ljava/lang/Object;Ljava/lang/Object;)I_java.lang.StackOverflowError_IMPLICIT
   * Goal 4. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 5. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 6. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 7. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 8. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 9. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 10. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 11. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 12. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 13. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 14. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 15. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 16. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 17. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 18. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 19. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 20. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 21. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 22. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 23. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 26. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 27. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 28. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 29. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 30. Weak Mutation 115: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:256 - ReplaceVariable obj1 -> obj2
   * Goal 31. Weak Mutation 116: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:257 - ReplaceVariable obj2 -> obj1
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) linkedList0);
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      // Undeclared exception!
      try { 
        fixedOrderComparator0.compare((Object) null, linkedList0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 73 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 3. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 4. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - false
   * Goal 5. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 6. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false
   * Goal 7. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - true
   * Goal 8. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 9. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 10. Branch collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false in context: collections.comparators.FixedOrderComparator:add(Ljava/lang/Object;)Z
   * Goal 11. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 12. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 13. addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z_java.lang.UnsupportedOperationException_EXPLICIT
   * Goal 14. [Output]: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:True
   * Goal 15. [Output]: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:Zero
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 17. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 18. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 19. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 20. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 21. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 22. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 23. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 24. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 25. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 26. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 27. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 28. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 29. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 30. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 31. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 32. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 192
   * Goal 33. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 34. collections.comparators.FixedOrderComparator.checkLocked()V: Line 123
   * Goal 35. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 36. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 37. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 38. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 39. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 40. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 279
   * Goal 41. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 42. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 43. [METHOD] collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z
   * Goal 44. [METHOD] collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 45. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 46. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 47. [METHODNOEX] collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z
   * Goal 48. [METHODNOEX] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 49. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 52. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 53. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 54. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 55. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 56. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 43: collections.comparators.FixedOrderComparator.checkLocked()V:123 - ReplaceConstant - Cannot modify a FixedOrderComparator after a comparison -> 
   * Goal 58. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 59. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 60. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 61. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 62. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 63. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 66. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 67. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 69. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 70. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 71. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 72. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 73. Weak Mutation 120: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      fixedOrderComparator0.add(fixedOrderComparator0);
      fixedOrderComparator0.compare(fixedOrderComparator0, fixedOrderComparator0);
      // Undeclared exception!
      try { 
        fixedOrderComparator0.addAsEqual(fixedOrderComparator0, fixedOrderComparator0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot modify a FixedOrderComparator after a comparison
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 7
  /*
   * 141 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - false
   * Goal 7. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false
   * Goal 8. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - true
   * Goal 9. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true
   * Goal 10. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 11. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true
   * Goal 12. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - true
   * Goal 13. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false
   * Goal 14. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false
   * Goal 15. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false
   * Goal 16. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I35 Branch 18 IFNONNULL L261 - false
   * Goal 17. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I39 Branch 19 IFNONNULL L262 - false
   * Goal 18. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 19. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 20. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 21. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 22. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 23. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - true in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 24. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 25. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 26. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 27. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 28. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 29. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I35 Branch 18 IFNONNULL L261 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 30. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I39 Branch 19 IFNONNULL L262 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 31. add(Ljava/lang/Object;)Z_java.lang.UnsupportedOperationException_EXPLICIT
   * Goal 32. [Output]: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:Zero
   * Goal 33. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 34. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 35. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 36. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 37. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 38. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 39. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 40. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 41. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 42. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 43. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 44. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 45. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 46. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 47. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 48. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 49. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 50. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 51. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 52. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 53. collections.comparators.FixedOrderComparator.checkLocked()V: Line 123
   * Goal 54. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 55. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 56. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 57. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 58. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 59. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 259
   * Goal 60. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 261
   * Goal 61. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 262
   * Goal 62. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 63. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 64. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 65. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 155
   * Goal 66. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 156
   * Goal 67. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 68. [METHOD] collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z
   * Goal 69. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 70. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 71. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 72. [METHODNOEX] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 73. [METHODNOEX] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 74. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 76. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 77. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 78. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 79. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 80. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 81. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 82. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 83. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 84. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 85. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 86. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 87. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 88. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 89. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 90. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 91. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 92. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 93. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 94. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 95. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 96. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 97. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 98. Weak Mutation 43: collections.comparators.FixedOrderComparator.checkLocked()V:123 - ReplaceConstant - Cannot modify a FixedOrderComparator after a comparison -> 
   * Goal 99. Weak Mutation 50: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 100. Weak Mutation 52: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 101. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 102. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 103. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 104. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 105. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 106. Weak Mutation 58: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 107. Weak Mutation 60: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 108. Weak Mutation 61: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 109. Weak Mutation 62: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 110. Weak Mutation 63: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 111. Weak Mutation 64: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> -2
   * Goal 112. Weak Mutation 82: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 113. Weak Mutation 84: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 114. Weak Mutation 85: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 115. Weak Mutation 86: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 116. Weak Mutation 87: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 117. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 118. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 119. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 120. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 121. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 122. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 123. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 124. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 125. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 126. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 127. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 128. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 129. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 130. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 131. Weak Mutation 102: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 0 -> 1
   * Goal 132. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 133. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 134. Weak Mutation 121: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 135. Weak Mutation 123: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 136. Weak Mutation 124: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp Negation
   * Goal 137. Weak Mutation 125: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp +1
   * Goal 138. Weak Mutation 126: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp -1
   * Goal 139. Weak Mutation 128: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:261 - ReplaceComparisonOperator != null -> = null
   * Goal 140. Weak Mutation 130: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:262 - ReplaceComparisonOperator != null -> = null
   * Goal 141. Weak Mutation 131: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:262 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      fixedOrderComparator0.setUnknownObjectBehavior(0);
      fixedOrderComparator0.compare(object0, object0);
      // Undeclared exception!
      try { 
        fixedOrderComparator0.add(object0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot modify a FixedOrderComparator after a comparison
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 8
  /*
   * 67 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 4. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 5. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 6. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 7. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 8. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 9. <init>([Ljava/lang/Object;)V_java.lang.StackOverflowError_IMPLICIT
   * Goal 10. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 11. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 12. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 13. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 14. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 15. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 16. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 17. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 18. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 19. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 20. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 21. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 22. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 23. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 24. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 25. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 26. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 27. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 28. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 29. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 30. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 31. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 32. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 35. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 36. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 37. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 38. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 39. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 41. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 42. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 43. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 44. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 45. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 46. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 47. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 48. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 49. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 50. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 51. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 52. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 53. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 54. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 55. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 56. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 57. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 58. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 59. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 60. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 61. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 62. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 63. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 64. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 65. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 66. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 67. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) linkedList0);
      Object[] objectArray0 = new Object[3];
      objectArray0[1] = (Object) linkedList0;
      FixedOrderComparator fixedOrderComparator0 = null;
      try {
        fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 78 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true
   * Goal 7. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 8. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 9. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 10. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 11. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 12. Branch collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true in context: collections.comparators.FixedOrderComparator:add(Ljava/lang/Object;)Z
   * Goal 13. [Output]: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:False
   * Goal 14. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 15. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 17. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 18. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 19. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 20. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 21. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 22. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 23. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 24. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 25. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 26. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 27. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 28. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 29. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 30. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 31. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 32. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 33. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 34. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 35. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 36. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 37. [METHOD] collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z
   * Goal 38. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 39. [METHODNOEX] collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z
   * Goal 40. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 43. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 44. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 45. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 46. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 47. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 49. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 50. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 51. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 52. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 53. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 54. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 55. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 56. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 57. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 58. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 59. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 60. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 61. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 62. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 63. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 65. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 66. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 67. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 68. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 69. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 70. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 71. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 72. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 73. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 74. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 75. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 76. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 77. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 78. Weak Mutation 102: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      boolean boolean0 = fixedOrderComparator0.add(objectArray0[0]);
      assertEquals(2, fixedOrderComparator0.getUnknownObjectBehavior());
      assertFalse(boolean0);
  }

  //Test case number: 10
  /*
   * 78 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true
   * Goal 7. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 8. Branch collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch in context: collections.comparators.FixedOrderComparator:isLocked()Z
   * Goal 9. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 10. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 11. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 12. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 13. [Output]: collections.comparators.FixedOrderComparator.isLocked()Z:False
   * Goal 14. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 15. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 17. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 18. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 19. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 20. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 21. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 22. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 23. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 24. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 25. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 26. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 27. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 28. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 29. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 30. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 31. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 32. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 33. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 34. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 35. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 36. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 37. [METHOD] collections.comparators.FixedOrderComparator.isLocked()Z
   * Goal 38. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 39. [METHODNOEX] collections.comparators.FixedOrderComparator.isLocked()Z
   * Goal 40. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 43. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 44. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 45. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 46. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 47. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 49. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 50. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 51. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 52. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 53. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 54. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 55. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 56. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 57. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 58. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 59. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 60. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 61. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 62. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 63. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 65. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 66. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 67. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 68. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 69. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 70. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 71. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 72. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 73. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 74. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 75. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 76. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 77. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 78. Weak Mutation 102: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      fixedOrderComparator0.isLocked();
      assertEquals(2, fixedOrderComparator0.getUnknownObjectBehavior());
  }

  //Test case number: 11
  /*
   * 133 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - true
   * Goal 7. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true
   * Goal 8. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 9. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true
   * Goal 10. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false
   * Goal 11. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - true
   * Goal 12. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false
   * Goal 13. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false
   * Goal 14. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I53 Branch 20 IFNONNULL L267 - false
   * Goal 15. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I57 Branch 21 IFNONNULL L268 - true
   * Goal 16. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 17. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 18. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 19. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 20. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - true in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 21. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 22. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 23. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 24. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 25. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 26. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I53 Branch 20 IFNONNULL L267 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 27. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I57 Branch 21 IFNONNULL L268 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 28. [Output]: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:Positive
   * Goal 29. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 30. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 31. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 32. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 33. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 34. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 35. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 36. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 37. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 38. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 39. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 40. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 41. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 42. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 43. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 44. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 45. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 46. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 47. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 48. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 49. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 50. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 51. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 52. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 53. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 54. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 259
   * Goal 55. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 267
   * Goal 56. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 268
   * Goal 57. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 58. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 59. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 60. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 155
   * Goal 61. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 156
   * Goal 62. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 63. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 64. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 65. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 66. [METHODNOEX] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 67. [METHODNOEX] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 68. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 69. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 70. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 71. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 72. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 73. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 74. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 75. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 76. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 77. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 78. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 79. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 80. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 81. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 82. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 83. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 84. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 85. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 86. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 87. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 88. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 89. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 90. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 91. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 92. Weak Mutation 51: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 93. Weak Mutation 52: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 94. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 95. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 96. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 97. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 98. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 99. Weak Mutation 83: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 100. Weak Mutation 84: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 101. Weak Mutation 85: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 102. Weak Mutation 86: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 103. Weak Mutation 87: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 104. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 105. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 106. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 107. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 108. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 109. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 110. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 111. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 112. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 113. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 114. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 115. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 116. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 117. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 118. Weak Mutation 102: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 0 -> 1
   * Goal 119. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 120. Weak Mutation 115: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:256 - ReplaceVariable obj1 -> obj2
   * Goal 121. Weak Mutation 116: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:257 - ReplaceVariable obj2 -> obj1
   * Goal 122. Weak Mutation 117: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position1 -> position2
   * Goal 123. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 124. Weak Mutation 122: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 125. Weak Mutation 123: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 126. Weak Mutation 124: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp Negation
   * Goal 127. Weak Mutation 125: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp +1
   * Goal 128. Weak Mutation 126: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp -1
   * Goal 129. Weak Mutation 136: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:267 - ReplaceVariable position1 -> position2
   * Goal 130. Weak Mutation 137: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:267 - ReplaceComparisonOperator != null -> = null
   * Goal 131. Weak Mutation 138: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:268 - ReplaceVariable position2 -> position1
   * Goal 132. Weak Mutation 139: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:268 - ReplaceComparisonOperator != null -> = null
   * Goal 133. Weak Mutation 141: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:268 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[4] = object0;
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      fixedOrderComparator0.setUnknownObjectBehavior(1);
      Object object1 = new Object();
      int int0 = fixedOrderComparator0.compare(object1, object0);
      assertTrue(fixedOrderComparator0.isLocked());
      assertEquals(1, int0);
  }

  //Test case number: 12
  /*
   * 118 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - true
   * Goal 7. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 8. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false
   * Goal 9. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - false
   * Goal 10. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false
   * Goal 11. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - true
   * Goal 12. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false
   * Goal 13. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false
   * Goal 14. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I53 Branch 20 IFNONNULL L267 - true
   * Goal 15. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - true in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 16. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - true in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 17. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - false in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 18. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 19. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - true in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 20. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 21. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 22. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 23. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 24. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 25. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 26. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I53 Branch 20 IFNONNULL L267 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 27. [Output]: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:Negative
   * Goal 28. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 29. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 30. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 31. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 32. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 33. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 34. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 35. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 36. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 96
   * Goal 37. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 99
   * Goal 38. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 100
   * Goal 39. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 102
   * Goal 40. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 41. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 42. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 43. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 44. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 45. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 46. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 47. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 48. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 49. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 50. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 51. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 52. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 53. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 259
   * Goal 54. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 267
   * Goal 55. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 270
   * Goal 56. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 57. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 58. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 59. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 155
   * Goal 60. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 156
   * Goal 61. [METHOD] collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V
   * Goal 62. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 63. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 64. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V
   * Goal 65. [METHODNOEX] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 66. [METHODNOEX] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 67. Weak Mutation 31: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 68. Weak Mutation 32: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 69. Weak Mutation 33: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 70. Weak Mutation 34: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 71. Weak Mutation 35: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 72. Weak Mutation 36: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 73. Weak Mutation 37: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:96 - ReplaceComparisonOperator != null -> = null
   * Goal 74. Weak Mutation 40: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:99 - ReplaceComparisonOperator == -> !=
   * Goal 75. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 76. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 77. Weak Mutation 51: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 78. Weak Mutation 52: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 79. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 80. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 81. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 82. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 83. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 84. Weak Mutation 83: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 85. Weak Mutation 84: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 86. Weak Mutation 85: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 87. Weak Mutation 86: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 88. Weak Mutation 87: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 89. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 90. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 91. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 92. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 93. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 94. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 95. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 96. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 97. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 98. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 99. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 100. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 101. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 102. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 103. Weak Mutation 115: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:256 - ReplaceVariable obj1 -> obj2
   * Goal 104. Weak Mutation 116: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:257 - ReplaceVariable obj2 -> obj1
   * Goal 105. Weak Mutation 117: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position1 -> position2
   * Goal 106. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 107. Weak Mutation 119: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position2 -> position1
   * Goal 108. Weak Mutation 120: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator != null -> = null
   * Goal 109. Weak Mutation 122: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 110. Weak Mutation 123: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 111. Weak Mutation 124: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp Negation
   * Goal 112. Weak Mutation 125: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp +1
   * Goal 113. Weak Mutation 126: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp -1
   * Goal 114. Weak Mutation 136: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:267 - ReplaceVariable position1 -> position2
   * Goal 115. Weak Mutation 137: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:267 - ReplaceComparisonOperator != null -> = null
   * Goal 116. Weak Mutation 142: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:270 - ReplaceConstant - -1 -> 0
   * Goal 117. Weak Mutation 143: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:270 - ReplaceConstant - -1 -> 1
   * Goal 118. Weak Mutation 144: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:270 - ReplaceConstant - -1 -> -2
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator((List) linkedList0);
      fixedOrderComparator0.setUnknownObjectBehavior(1);
      int int0 = fixedOrderComparator0.compare("", fixedOrderComparator0);
      assertTrue(fixedOrderComparator0.isLocked());
      assertEquals((-1), int0);
  }

  //Test case number: 13
  /*
   * 141 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false
   * Goal 7. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - true
   * Goal 8. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true
   * Goal 9. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 10. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false
   * Goal 11. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - false
   * Goal 12. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - true
   * Goal 13. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false
   * Goal 14. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false
   * Goal 15. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false
   * Goal 16. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I35 Branch 18 IFNONNULL L261 - true
   * Goal 17. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 18. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 19. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 20. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 21. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 22. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - true in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 23. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 24. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 25. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 26. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 27. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 28. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 29. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I35 Branch 18 IFNONNULL L261 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 30. [Output]: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:Positive
   * Goal 31. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 32. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 33. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 34. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 35. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 36. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 37. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 38. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 39. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 40. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 41. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 42. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 43. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 44. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 45. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 46. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 47. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 48. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 49. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 50. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 51. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 52. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 53. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 54. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 55. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 56. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 259
   * Goal 57. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 261
   * Goal 58. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 264
   * Goal 59. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 60. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 61. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 62. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 155
   * Goal 63. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 156
   * Goal 64. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 65. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 66. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 67. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 68. [METHODNOEX] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 69. [METHODNOEX] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 70. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 73. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 74. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 75. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 76. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 77. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 79. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 80. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 81. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 82. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 83. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 84. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 85. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 86. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 87. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 88. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 89. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 90. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 91. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 92. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 93. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 50: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 95. Weak Mutation 52: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 96. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 97. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 98. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 99. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 100. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 58: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 102. Weak Mutation 60: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 103. Weak Mutation 61: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 104. Weak Mutation 62: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 105. Weak Mutation 63: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 106. Weak Mutation 64: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> -2
   * Goal 107. Weak Mutation 82: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 108. Weak Mutation 84: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 109. Weak Mutation 85: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 110. Weak Mutation 86: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 111. Weak Mutation 87: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 112. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 113. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 114. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 115. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 116. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 117. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 118. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 119. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 120. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 121. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 122. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 123. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 124. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 125. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 126. Weak Mutation 102: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 0 -> 1
   * Goal 127. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 128. Weak Mutation 115: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:256 - ReplaceVariable obj1 -> obj2
   * Goal 129. Weak Mutation 116: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:257 - ReplaceVariable obj2 -> obj1
   * Goal 130. Weak Mutation 117: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position1 -> position2
   * Goal 131. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 132. Weak Mutation 119: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position2 -> position1
   * Goal 133. Weak Mutation 120: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator != null -> = null
   * Goal 134. Weak Mutation 121: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 135. Weak Mutation 123: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 136. Weak Mutation 124: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp Negation
   * Goal 137. Weak Mutation 125: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp +1
   * Goal 138. Weak Mutation 126: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp -1
   * Goal 139. Weak Mutation 127: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:261 - ReplaceVariable position1 -> position2
   * Goal 140. Weak Mutation 128: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:261 - ReplaceComparisonOperator != null -> = null
   * Goal 141. Weak Mutation 135: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:264 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      fixedOrderComparator0.setUnknownObjectBehavior(0);
      int int0 = fixedOrderComparator0.compare(objectArray0[1], object0);
      assertTrue(fixedOrderComparator0.isLocked());
      assertEquals(1, int0);
  }

  //Test case number: 14
  /*
   * 143 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false
   * Goal 7. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - true
   * Goal 8. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true
   * Goal 9. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 10. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true
   * Goal 11. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - true
   * Goal 12. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false
   * Goal 13. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false
   * Goal 14. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false
   * Goal 15. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I35 Branch 18 IFNONNULL L261 - false
   * Goal 16. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I39 Branch 19 IFNONNULL L262 - true
   * Goal 17. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 18. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 19. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 20. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 21. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 22. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - true in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 23. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 24. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 25. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 26. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 27. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 28. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I35 Branch 18 IFNONNULL L261 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 29. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I39 Branch 19 IFNONNULL L262 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 30. [Output]: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:Negative
   * Goal 31. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 32. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 33. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 34. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 35. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 36. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 37. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 38. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 39. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 40. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 41. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 42. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 43. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 44. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 45. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 46. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 47. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 48. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 49. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 50. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 51. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 52. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 53. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 54. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 55. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 56. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 259
   * Goal 57. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 261
   * Goal 58. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 262
   * Goal 59. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 60. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 61. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 62. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 155
   * Goal 63. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 156
   * Goal 64. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 65. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 66. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 67. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 68. [METHODNOEX] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 69. [METHODNOEX] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 70. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 73. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 74. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 75. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 76. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 77. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 79. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 80. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 81. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 82. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 83. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 84. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 85. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 86. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 87. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 88. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 89. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 90. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 91. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 92. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 93. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 50: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 95. Weak Mutation 52: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 96. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 97. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 98. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 99. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 100. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 58: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 102. Weak Mutation 60: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 103. Weak Mutation 61: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 104. Weak Mutation 62: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 105. Weak Mutation 63: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 106. Weak Mutation 64: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> -2
   * Goal 107. Weak Mutation 82: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 108. Weak Mutation 84: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 109. Weak Mutation 85: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 110. Weak Mutation 86: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 111. Weak Mutation 87: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 112. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 113. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 114. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 115. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 116. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 117. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 118. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 119. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 120. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 121. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 122. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 123. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 124. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 125. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 126. Weak Mutation 102: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 0 -> 1
   * Goal 127. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 128. Weak Mutation 115: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:256 - ReplaceVariable obj1 -> obj2
   * Goal 129. Weak Mutation 116: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:257 - ReplaceVariable obj2 -> obj1
   * Goal 130. Weak Mutation 117: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position1 -> position2
   * Goal 131. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 132. Weak Mutation 121: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 133. Weak Mutation 123: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 134. Weak Mutation 124: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp Negation
   * Goal 135. Weak Mutation 125: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp +1
   * Goal 136. Weak Mutation 126: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp -1
   * Goal 137. Weak Mutation 127: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:261 - ReplaceVariable position1 -> position2
   * Goal 138. Weak Mutation 128: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:261 - ReplaceComparisonOperator != null -> = null
   * Goal 139. Weak Mutation 129: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:262 - ReplaceVariable position2 -> position1
   * Goal 140. Weak Mutation 130: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:262 - ReplaceComparisonOperator != null -> = null
   * Goal 141. Weak Mutation 132: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:262 - ReplaceConstant - -1 -> 0
   * Goal 142. Weak Mutation 133: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:262 - ReplaceConstant - -1 -> 1
   * Goal 143. Weak Mutation 134: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:262 - ReplaceConstant - -1 -> -2
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      fixedOrderComparator0.setUnknownObjectBehavior(0);
      int int0 = fixedOrderComparator0.compare(object0, objectArray0[0]);
      assertTrue(fixedOrderComparator0.isLocked());
      assertEquals((-1), int0);
  }

  //Test case number: 15
  /*
   * 115 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true
   * Goal 7. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 8. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false
   * Goal 9. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - false
   * Goal 10. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false
   * Goal 11. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false
   * Goal 12. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - true
   * Goal 13. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false
   * Goal 14. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I71 Branch 22 IFNONNULL L273 - true
   * Goal 15. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 16. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 17. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 18. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 19. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 20. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 21. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 22. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 23. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 24. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 25. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I71 Branch 22 IFNONNULL L273 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 26. compare(Ljava/lang/Object;Ljava/lang/Object;)I_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 27. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 28. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 29. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 30. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 31. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 32. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 33. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 34. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 35. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 36. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 37. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 38. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 39. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 40. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 41. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 42. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 43. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 44. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 45. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 46. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 47. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 48. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 49. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 50. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 51. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 52. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 259
   * Goal 53. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 273
   * Goal 54. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 274
   * Goal 55. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 56. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 57. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 58. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 59. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 60. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 62. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 63. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 64. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 65. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 66. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 67. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 68. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 69. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 70. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 71. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 72. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 73. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 74. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 75. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 76. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 77. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 78. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 79. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 80. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 81. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 82. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 84. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 85. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 86. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 87. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 88. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 89. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 90. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 91. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 92. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 93. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 94. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 95. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 96. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 97. Weak Mutation 102: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 0 -> 1
   * Goal 98. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 99. Weak Mutation 115: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:256 - ReplaceVariable obj1 -> obj2
   * Goal 100. Weak Mutation 116: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:257 - ReplaceVariable obj2 -> obj1
   * Goal 101. Weak Mutation 117: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position1 -> position2
   * Goal 102. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 103. Weak Mutation 119: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceVariable position2 -> position1
   * Goal 104. Weak Mutation 120: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator != null -> = null
   * Goal 105. Weak Mutation 121: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 106. Weak Mutation 122: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 107. Weak Mutation 124: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp Negation
   * Goal 108. Weak Mutation 125: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp +1
   * Goal 109. Weak Mutation 126: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp -1
   * Goal 110. Weak Mutation 145: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:273 - ReplaceVariable position1 -> position2
   * Goal 111. Weak Mutation 146: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:273 - ReplaceComparisonOperator != null -> = null
   * Goal 112. Weak Mutation 148: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:273 - ReplaceVariable obj2 -> obj1
   * Goal 113. Weak Mutation 149: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:274 - ReplaceConstant - Attempting to compare unknown object  -> 
   * Goal 114. Weak Mutation 151: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:274 - ReplaceVariable unknownObj -> obj1
   * Goal 115. Weak Mutation 152: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:274 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      // Undeclared exception!
      try { 
        fixedOrderComparator0.compare(object0, object1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attempting to compare unknown object java.lang.Object@2d5f2729
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 16
  /*
   * 87 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 7. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I15 Branch 10 IFNONNULL L194 - true
   * Goal 8. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I56 Branch 11 IFNONNULL L198 - false
   * Goal 9. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 10. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 11. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 12. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 13. Branch collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I15 Branch 10 IFNONNULL L194 - true in context: collections.comparators.FixedOrderComparator:addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 14. Branch collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I56 Branch 11 IFNONNULL L198 - false in context: collections.comparators.FixedOrderComparator:addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 15. [Output]: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:True
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 17. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 18. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 19. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 20. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 21. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 22. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 23. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 24. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 25. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 26. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 27. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 28. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 29. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 30. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 31. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 32. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 33. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 34. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 35. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 192
   * Goal 36. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 193
   * Goal 37. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 194
   * Goal 38. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 197
   * Goal 39. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 198
   * Goal 40. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 41. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 42. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 43. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 44. [METHOD] collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 45. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 46. [METHODNOEX] collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 47. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 50. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 51. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 52. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 53. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 54. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 56. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 57. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 58. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 59. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 60. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 61. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 62. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 63. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 64. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 65. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 66. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 67. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 68. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 70. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 71. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 72. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 73. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 74. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 75. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 76. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 77. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 78. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 79. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 80. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 81. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 82. Weak Mutation 103: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:193 - ReplaceVariable existingObj -> newObj
   * Goal 83. Weak Mutation 104: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:194 - ReplaceComparisonOperator != null -> = null
   * Goal 84. Weak Mutation 108: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:197 - ReplaceVariable newObj -> existingObj
   * Goal 85. Weak Mutation 109: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:198 - ReplaceVariable result -> newObj
   * Goal 86. Weak Mutation 111: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:198 - ReplaceComparisonOperator != null -> = null
   * Goal 87. Weak Mutation 112: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:198 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      Object object0 = new Object();
      boolean boolean0 = fixedOrderComparator0.addAsEqual(objectArray0[0], object0);
      assertEquals(2, fixedOrderComparator0.getUnknownObjectBehavior());
      assertTrue(boolean0);
  }

  //Test case number: 17
  /*
   * 44 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 3. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 4. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I15 Branch 10 IFNONNULL L194 - false
   * Goal 5. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 6. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 7. Branch collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I15 Branch 10 IFNONNULL L194 - false in context: collections.comparators.FixedOrderComparator:addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 8. addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 9. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 10. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 11. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 12. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 13. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 14. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 15. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 16. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 17. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 18. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 19. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 20. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 21. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 22. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 192
   * Goal 23. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 193
   * Goal 24. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 194
   * Goal 25. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 195
   * Goal 26. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 27. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 28. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 29. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 30. [METHOD] collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 31. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 32. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 35. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 36. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 37. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 38. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 103: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:193 - ReplaceVariable existingObj -> newObj
   * Goal 41. Weak Mutation 104: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:194 - ReplaceComparisonOperator != null -> = null
   * Goal 42. Weak Mutation 105: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:195 - ReplaceVariable existingObj -> newObj
   * Goal 43. Weak Mutation 106: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:195 - ReplaceConstant -  not known to  -> 
   * Goal 44. Weak Mutation 107: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:195 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        fixedOrderComparator0.addAsEqual(object0, fixedOrderComparator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.Object@7416a148 not known to collections.comparators.FixedOrderComparator@1
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 18
  /*
   * 70 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 3. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 4. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false
   * Goal 5. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - false
   * Goal 6. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I13 Branch 8 IF_ICMPEQ L150 - false
   * Goal 7. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 8. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 9. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 10. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I13 Branch 8 IF_ICMPEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 11. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 12. setUnknownObjectBehavior(I)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 13. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 14. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 15. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 17. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 18. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 19. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 20. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 21. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 22. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 23. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 24. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 25. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 26. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 27. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 28. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 29. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 30. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 31. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 153
   * Goal 32. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 33. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 34. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 35. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 36. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 38. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 39. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 40. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 41. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 42. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 50: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 44. Weak Mutation 51: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 45. Weak Mutation 52: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 46. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 47. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 48. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 49. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 50. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 58: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 52. Weak Mutation 59: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 53. Weak Mutation 60: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 54. Weak Mutation 61: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 55. Weak Mutation 62: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 56. Weak Mutation 63: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 57. Weak Mutation 65: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> >=
   * Goal 58. Weak Mutation 67: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 59. Weak Mutation 68: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 60. Weak Mutation 69: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 61. Weak Mutation 70: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 62. Weak Mutation 71: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 63. Weak Mutation 72: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 64. Weak Mutation 73: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> 0
   * Goal 65. Weak Mutation 74: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> 1
   * Goal 66. Weak Mutation 75: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> -1
   * Goal 67. Weak Mutation 76: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> 3
   * Goal 68. Weak Mutation 78: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> >=
   * Goal 69. Weak Mutation 80: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:153 - ReplaceConstant - Unrecognised value for unknown behaviour flag -> 
   * Goal 70. Weak Mutation 81: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:153 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      // Undeclared exception!
      try { 
        fixedOrderComparator0.setUnknownObjectBehavior(959);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unrecognised value for unknown behaviour flag
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 19
  /*
   * 71 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 3. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 4. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false
   * Goal 5. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - false
   * Goal 6. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I13 Branch 8 IF_ICMPEQ L150 - true
   * Goal 7. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 8. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 9. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 10. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I10 Branch 7 IFEQ L150 - false in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 11. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I13 Branch 8 IF_ICMPEQ L150 - true in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 12. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 13. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 14. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 15. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 17. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 18. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 19. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 20. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 21. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 22. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 23. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 24. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 25. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 26. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 27. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 28. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 29. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 30. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 155
   * Goal 31. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 156
   * Goal 32. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 33. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 34. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 35. [METHODNOEX] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 36. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 39. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 40. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 41. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 42. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 50: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 45. Weak Mutation 51: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 46. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 47. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 48. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 49. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 50. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 58: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 52. Weak Mutation 59: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 53. Weak Mutation 61: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 54. Weak Mutation 62: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 55. Weak Mutation 63: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 56. Weak Mutation 65: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> >=
   * Goal 57. Weak Mutation 67: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 58. Weak Mutation 68: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 59. Weak Mutation 70: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 60. Weak Mutation 71: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 61. Weak Mutation 72: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 62. Weak Mutation 73: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> 0
   * Goal 63. Weak Mutation 74: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> 1
   * Goal 64. Weak Mutation 75: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> -1
   * Goal 65. Weak Mutation 76: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 2 -> 3
   * Goal 66. Weak Mutation 77: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> -2
   * Goal 67. Weak Mutation 82: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 68. Weak Mutation 83: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 69. Weak Mutation 85: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 70. Weak Mutation 86: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 71. Weak Mutation 87: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC -1 unknownObjectBehavior
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      fixedOrderComparator0.setUnknownObjectBehavior(2);
      assertEquals(2, fixedOrderComparator0.getUnknownObjectBehavior());
  }

  //Test case number: 20
  /*
   * 98 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - true
   * Goal 4. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - false
   * Goal 6. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - true
   * Goal 7. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true
   * Goal 8. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false
   * Goal 9. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - true
   * Goal 10. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false
   * Goal 11. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false
   * Goal 12. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I53 Branch 20 IFNONNULL L267 - false
   * Goal 13. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I57 Branch 21 IFNONNULL L268 - false
   * Goal 14. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - true in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 15. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - true in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 16. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 17. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - false in context: 
   * Goal 18. Branch collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: I8 Branch 6 IF_ICMPEQ L150 - true in context: collections.comparators.FixedOrderComparator:setUnknownObjectBehavior(I)V
   * Goal 19. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 20. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 15 TABLESWITCH L259 Case 1 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 21. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 16 TABLESWITCH L259 Case 2 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 22. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 14 TABLESWITCH L259 Case 0 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 23. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I31 Branch 17 TABLESWITCH L259 Default-Case - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 24. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I53 Branch 20 IFNONNULL L267 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 25. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I57 Branch 21 IFNONNULL L268 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 26. setUnknownObjectBehavior(I)V_java.lang.UnsupportedOperationException_EXPLICIT
   * Goal 27. [Output]: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:Zero
   * Goal 28. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 29. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 30. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 31. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 32. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 33. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 34. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 35. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 36. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 96
   * Goal 37. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 99
   * Goal 38. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 102
   * Goal 39. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 40. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 41. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 42. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 43. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 44. collections.comparators.FixedOrderComparator.checkLocked()V: Line 123
   * Goal 45. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 46. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 47. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 48. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 49. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 50. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 259
   * Goal 51. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 267
   * Goal 52. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 268
   * Goal 53. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 54. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 149
   * Goal 55. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 150
   * Goal 56. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 155
   * Goal 57. collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V: Line 156
   * Goal 58. [METHOD] collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V
   * Goal 59. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 60. [METHOD] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 61. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V
   * Goal 62. [METHODNOEX] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 63. [METHODNOEX] collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V
   * Goal 64. Weak Mutation 31: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 65. Weak Mutation 32: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 66. Weak Mutation 33: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 67. Weak Mutation 34: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 68. Weak Mutation 35: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 69. Weak Mutation 36: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 70. Weak Mutation 37: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:96 - ReplaceComparisonOperator != null -> = null
   * Goal 71. Weak Mutation 40: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:99 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 73. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 74. Weak Mutation 43: collections.comparators.FixedOrderComparator.checkLocked()V:123 - ReplaceConstant - Cannot modify a FixedOrderComparator after a comparison -> 
   * Goal 75. Weak Mutation 51: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 76. Weak Mutation 52: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 77. Weak Mutation 53: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 78. Weak Mutation 54: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 79. Weak Mutation 55: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 80. Weak Mutation 56: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceConstant - 1 -> 0
   * Goal 81. Weak Mutation 57: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:150 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 83: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 83. Weak Mutation 84: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 84. Weak Mutation 85: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp Negation of unknownObjectBehavior
   * Goal 85. Weak Mutation 86: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC 1 unknownObjectBehavior
   * Goal 86. Weak Mutation 87: collections.comparators.FixedOrderComparator.setUnknownObjectBehavior(I)V:155 - InsertUnaryOp IINC -1 unknownObjectBehavior
   * Goal 87. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 88. Weak Mutation 115: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:256 - ReplaceVariable obj1 -> obj2
   * Goal 89. Weak Mutation 116: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:257 - ReplaceVariable obj2 -> obj1
   * Goal 90. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 91. Weak Mutation 122: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 92. Weak Mutation 123: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_THROW_EXCEPTION
   * Goal 93. Weak Mutation 124: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp Negation
   * Goal 94. Weak Mutation 125: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp +1
   * Goal 95. Weak Mutation 126: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:259 - InsertUnaryOp -1
   * Goal 96. Weak Mutation 137: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:267 - ReplaceComparisonOperator != null -> = null
   * Goal 97. Weak Mutation 139: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:268 - ReplaceComparisonOperator != null -> = null
   * Goal 98. Weak Mutation 140: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:268 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator((List) linkedList0);
      fixedOrderComparator0.setUnknownObjectBehavior(1);
      fixedOrderComparator0.compare("", fixedOrderComparator0);
      // Undeclared exception!
      try { 
        fixedOrderComparator0.setUnknownObjectBehavior((-1));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot modify a FixedOrderComparator after a comparison
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 21
  /*
   * 94 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true
   * Goal 4. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false
   * Goal 5. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 6. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - false
   * Goal 7. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - true
   * Goal 8. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 9. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false
   * Goal 10. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - true
   * Goal 11. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 12. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - true in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 13. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I58 Branch 2 IF_ICMPGE L80 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 14. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 15. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I26 Branch 13 IFNONNULL L258 - true in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 16. Branch collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I24 Branch 12 IFNULL L258 - false in context: collections.comparators.FixedOrderComparator:compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 17. checkLocked()V_java.lang.UnsupportedOperationException_EXPLICIT
   * Goal 18. [Output]: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:Zero
   * Goal 19. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 20. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 21. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 22. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 23. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 24. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 25. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 26. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 27. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 28. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 29. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 30. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 31. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 32. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 80
   * Goal 33. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 81
   * Goal 34. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 83
   * Goal 35. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 36. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 37. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 38. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 39. collections.comparators.FixedOrderComparator.checkLocked()V: Line 123
   * Goal 40. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 41. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 255
   * Goal 42. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 256
   * Goal 43. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 257
   * Goal 44. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 258
   * Goal 45. collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 279
   * Goal 46. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 47. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 48. [METHOD] collections.comparators.FixedOrderComparator.checkLocked()V
   * Goal 49. [METHOD] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 50. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 51. [METHODNOEX] collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
   * Goal 52. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 54. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 55. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 56. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 57. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 58. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 59. Weak Mutation 15: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceConstant - 0 -> 1
   * Goal 60. Weak Mutation 16: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 61. Weak Mutation 17: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 62. Weak Mutation 18: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 63. Weak Mutation 19: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp Negation of i
   * Goal 64. Weak Mutation 20: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC 1 i
   * Goal 65. Weak Mutation 21: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - InsertUnaryOp IINC -1 i
   * Goal 66. Weak Mutation 22: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> -1
   * Goal 67. Weak Mutation 23: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:80 - ReplaceComparisonOperator >= -> >
   * Goal 68. Weak Mutation 25: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_AFTER
   * Goal 69. Weak Mutation 26: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_BEFORE
   * Goal 70. Weak Mutation 27: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - ReplaceVariable i -> UNKNOWN_THROW_EXCEPTION
   * Goal 71. Weak Mutation 28: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp Negation of i
   * Goal 72. Weak Mutation 29: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC 1 i
   * Goal 73. Weak Mutation 30: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:81 - InsertUnaryOp IINC -1 i
   * Goal 74. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 75. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 43: collections.comparators.FixedOrderComparator.checkLocked()V:123 - ReplaceConstant - Cannot modify a FixedOrderComparator after a comparison -> 
   * Goal 77. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 78. Weak Mutation 89: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_BEFORE
   * Goal 79. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 80. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 81. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 82. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 83. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 84. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 85. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 86. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 87. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 88. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 89. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 90. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 91. Weak Mutation 102: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 0 -> 1
   * Goal 92. Weak Mutation 114: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:255 - ReplaceConstant - 1 -> 0
   * Goal 93. Weak Mutation 118: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator = null -> != null
   * Goal 94. Weak Mutation 120: collections.comparators.FixedOrderComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I:258 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator(objectArray0);
      fixedOrderComparator0.compare(objectArray0[6], objectArray0[4]);
      // Undeclared exception!
      try { 
        fixedOrderComparator0.checkLocked();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot modify a FixedOrderComparator after a comparison
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 22
  /*
   * 49 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - true
   * Goal 3. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - false
   * Goal 4. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 5. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - true in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 6. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I58 Branch 4 IFEQ L99 - false in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 7. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 8. <init>(Ljava/util/List;)V_java.lang.StackOverflowError_IMPLICIT
   * Goal 9. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 10. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 11. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 12. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 13. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 14. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 15. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 16. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 17. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 96
   * Goal 18. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 99
   * Goal 19. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 100
   * Goal 20. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 21. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 22. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 23. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 24. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 25. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 26. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 27. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 28. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 29. [METHOD] collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V
   * Goal 30. Weak Mutation 31: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 32: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 33: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 33. Weak Mutation 34: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 34. Weak Mutation 35: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 35. Weak Mutation 36: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 36. Weak Mutation 37: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:96 - ReplaceComparisonOperator != null -> = null
   * Goal 37. Weak Mutation 40: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:99 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 41. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 42. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 44. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 45. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 47. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 48. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 49. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) linkedList0);
      FixedOrderComparator fixedOrderComparator0 = null;
      try {
        fixedOrderComparator0 = new FixedOrderComparator((List) linkedList0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 27 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - false
   * Goal 2. Branch collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: I29 Branch 3 IFNONNULL L96 - false in context: collections.comparators.FixedOrderComparator:<init>(Ljava/util/List;)V
   * Goal 3. <init>(Ljava/util/List;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 5. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 6. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 7. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 8. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 9. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 10. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 11. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 12. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 96
   * Goal 13. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 97
   * Goal 14. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 15. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 16. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 17. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 18. [METHOD] collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V
   * Goal 19. Weak Mutation 31: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 32: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 33: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 22. Weak Mutation 34: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 23. Weak Mutation 35: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 24. Weak Mutation 36: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 25. Weak Mutation 37: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:96 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 38: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:97 - ReplaceConstant - The list of items must not be null -> 
   * Goal 27. Weak Mutation 39: collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V:97 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = null;
      try {
        fixedOrderComparator0 = new FixedOrderComparator((List) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The list of items must not be null
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 24
  /*
   * 27 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - false
   * Goal 2. Branch collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: I29 Branch 1 IFNONNULL L77 - false in context: collections.comparators.FixedOrderComparator:<init>([Ljava/lang/Object;)V
   * Goal 3. <init>([Ljava/lang/Object;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 5. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 6. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 7. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 8. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 9. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 10. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 11. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 12. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 13. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 14. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 15. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 16. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 77
   * Goal 17. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 78
   * Goal 18. [METHOD] collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V
   * Goal 19. Weak Mutation 6: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:51 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 7: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:53 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 8: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 0
   * Goal 22. Weak Mutation 9: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 1
   * Goal 23. Weak Mutation 10: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> -1
   * Goal 24. Weak Mutation 11: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:55 - ReplaceConstant - 2 -> 3
   * Goal 25. Weak Mutation 12: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:77 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 13: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:78 - ReplaceConstant - The list of items must not be null -> 
   * Goal 27. Weak Mutation 14: collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V:78 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = null;
      try {
        fixedOrderComparator0 = new FixedOrderComparator((Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The list of items must not be null
         //
         assertThrownBy("collections.comparators.FixedOrderComparator", e);
      }
  }

  //Test case number: 25
  /*
   * 69 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.isLocked()Z: root-Branch
   * Goal 3. collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true
   * Goal 4. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false
   * Goal 5. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I15 Branch 10 IFNONNULL L194 - true
   * Goal 6. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I56 Branch 11 IFNONNULL L198 - true
   * Goal 7. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 8. Branch collections.comparators.FixedOrderComparator.checkLocked()V: I4 Branch 5 IFEQ L122 - true in context: 
   * Goal 9. Branch collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: I24 Branch 9 IFNONNULL L174 - false in context: collections.comparators.FixedOrderComparator:add(Ljava/lang/Object;)Z
   * Goal 10. Branch collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I15 Branch 10 IFNONNULL L194 - true in context: collections.comparators.FixedOrderComparator:addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 11. Branch collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: I56 Branch 11 IFNONNULL L198 - true in context: collections.comparators.FixedOrderComparator:addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 12. [Output]: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:True
   * Goal 13. [Output]: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:False
   * Goal 14. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 15. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 16. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 17. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 18. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 19. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 20. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 21. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 22. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 23. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 24. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 25. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 26. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 27. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 172
   * Goal 28. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 173
   * Goal 29. collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z: Line 174
   * Goal 30. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 192
   * Goal 31. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 193
   * Goal 32. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 194
   * Goal 33. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 197
   * Goal 34. collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z: Line 198
   * Goal 35. collections.comparators.FixedOrderComparator.checkLocked()V: Line 122
   * Goal 36. collections.comparators.FixedOrderComparator.checkLocked()V: Line 125
   * Goal 37. collections.comparators.FixedOrderComparator.isLocked()Z: Line 113
   * Goal 38. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 39. [METHOD] collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z
   * Goal 40. [METHOD] collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 41. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 42. [METHODNOEX] collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z
   * Goal 43. [METHODNOEX] collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z
   * Goal 44. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 47. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 48. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 49. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 50. Weak Mutation 41: collections.comparators.FixedOrderComparator.isLocked()Z:113 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 42: collections.comparators.FixedOrderComparator.checkLocked()V:122 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 88: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_AFTER
   * Goal 53. Weak Mutation 90: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceVariable counter -> UNKNOWN_THROW_EXCEPTION
   * Goal 54. Weak Mutation 91: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 92: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp +1
   * Goal 56. Weak Mutation 93: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - InsertUnaryOp -1
   * Goal 57. Weak Mutation 94: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 95: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 96: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> -
   * Goal 60. Weak Mutation 97: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> *
   * Goal 61. Weak Mutation 98: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:173 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 99: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceVariable position -> obj
   * Goal 63. Weak Mutation 100: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceComparisonOperator != null -> = null
   * Goal 64. Weak Mutation 101: collections.comparators.FixedOrderComparator.add(Ljava/lang/Object;)Z:174 - ReplaceConstant - 1 -> 0
   * Goal 65. Weak Mutation 104: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:194 - ReplaceComparisonOperator != null -> = null
   * Goal 66. Weak Mutation 109: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:198 - ReplaceVariable result -> newObj
   * Goal 67. Weak Mutation 110: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:198 - ReplaceVariable result -> existingObj
   * Goal 68. Weak Mutation 111: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:198 - ReplaceComparisonOperator != null -> = null
   * Goal 69. Weak Mutation 113: collections.comparators.FixedOrderComparator.addAsEqual(Ljava/lang/Object;Ljava/lang/Object;)Z:198 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      assertFalse(fixedOrderComparator0.isLocked());
      
      boolean boolean0 = fixedOrderComparator0.add(fixedOrderComparator0);
      boolean boolean1 = fixedOrderComparator0.addAsEqual(fixedOrderComparator0, fixedOrderComparator0);
      assertFalse(boolean1 == boolean0);
      assertEquals(2, fixedOrderComparator0.getUnknownObjectBehavior());
      assertFalse(boolean1);
  }

  //Test case number: 26
  /*
   * 34 covered goals:
   * Goal 1. collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I: root-Branch
   * Goal 2. collections.comparators.FixedOrderComparator.<init>()V: root-Branch
   * Goal 3. Branch collections.comparators.FixedOrderComparator.<init>()V: root-Branch in context: collections.comparators.FixedOrderComparator:<init>()V
   * Goal 4. Branch collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I: root-Branch in context: collections.comparators.FixedOrderComparator:getUnknownObjectBehavior()I
   * Goal 5. [Output]: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:Positive
   * Goal 6. collections.comparators.FixedOrderComparator.<init>()V: Line 49
   * Goal 7. collections.comparators.FixedOrderComparator.<init>()V: Line 51
   * Goal 8. collections.comparators.FixedOrderComparator.<init>()V: Line 53
   * Goal 9. collections.comparators.FixedOrderComparator.<init>()V: Line 55
   * Goal 10. collections.comparators.FixedOrderComparator.<init>()V: Line 64
   * Goal 11. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 49
   * Goal 12. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 51
   * Goal 13. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 53
   * Goal 14. collections.comparators.FixedOrderComparator.<init>(Ljava/util/List;)V: Line 55
   * Goal 15. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 49
   * Goal 16. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 51
   * Goal 17. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 53
   * Goal 18. collections.comparators.FixedOrderComparator.<init>([Ljava/lang/Object;)V: Line 55
   * Goal 19. collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I: Line 136
   * Goal 20. [METHOD] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 21. [METHOD] collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I
   * Goal 22. [METHODNOEX] collections.comparators.FixedOrderComparator.<init>()V
   * Goal 23. [METHODNOEX] collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I
   * Goal 24. Weak Mutation 0: collections.comparators.FixedOrderComparator.<init>()V:51 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 1: collections.comparators.FixedOrderComparator.<init>()V:53 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 2: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 0
   * Goal 27. Weak Mutation 3: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 1
   * Goal 28. Weak Mutation 4: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> -1
   * Goal 29. Weak Mutation 5: collections.comparators.FixedOrderComparator.<init>()V:55 - ReplaceConstant - 2 -> 3
   * Goal 30. Weak Mutation 44: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_AFTER
   * Goal 31. Weak Mutation 45: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - ReplaceVariable unknownObjectBehavior -> UNKNOWN_BEFORE
   * Goal 32. Weak Mutation 47: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - InsertUnaryOp Negation
   * Goal 33. Weak Mutation 48: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - InsertUnaryOp +1
   * Goal 34. Weak Mutation 49: collections.comparators.FixedOrderComparator.getUnknownObjectBehavior()I:136 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FixedOrderComparator fixedOrderComparator0 = new FixedOrderComparator();
      int int0 = fixedOrderComparator0.getUnknownObjectBehavior();
      assertEquals(2, int0);
      assertFalse(fixedOrderComparator0.isLocked());
  }
}
