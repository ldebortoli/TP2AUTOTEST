/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 08 16:59:57 GMT 2017
 */

package collections.map;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import collections.Predicate;
import collections.functors.AllPredicate;
import collections.functors.InstanceofPredicate;
import collections.functors.NotNullPredicate;
import collections.functors.TruePredicate;
import collections.functors.UniquePredicate;
import collections.map.PredicatedMap;
import java.util.AbstractMap;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class PredicatedMap_ESTest extends PredicatedMap_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 40 covered goals:
   * Goal 1. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false
   * Goal 4. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - true
   * Goal 5. Branch collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch in context: collections.map.PredicatedMap:decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 6. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 7. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false in context: 
   * Goal 8. Branch collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - true in context: collections.map.PredicatedMap:putAll(Ljava/util/Map;)V
   * Goal 9. [Output]: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:NonNull:java.util.Map:isEmpty()Z:True
   * Goal 10. [Output]: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:NonNull:java.util.Map:size()I:Zero
   * Goal 11. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 12. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 13. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 14. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 15. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 16. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: Line 49
   * Goal 17. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 18. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 147
   * Goal 19. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 148
   * Goal 20. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 154
   * Goal 21. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 155
   * Goal 22. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 23. [METHOD] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 24. [METHOD] collections.map.PredicatedMap.putAll(Ljava/util/Map;)V
   * Goal 25. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 26. [METHODNOEX] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 27. [METHODNOEX] collections.map.PredicatedMap.putAll(Ljava/util/Map;)V
   * Goal 28. Weak Mutation 0: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:49 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 29. Weak Mutation 1: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:49 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 30. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 31. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 32. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 33. Weak Mutation 5: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 34. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 35. Weak Mutation 28: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 36. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 37. Weak Mutation 30: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 1 -> 0
   * Goal 38. Weak Mutation 36: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:147 - ReplaceVariable mapToCopy -> map
   * Goal 39. Weak Mutation 37: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:148 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 40: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:154 - ReplaceVariable mapToCopy -> map
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      TruePredicate truePredicate0 = (TruePredicate)TruePredicate.getInstance();
      NotNullPredicate notNullPredicate0 = (NotNullPredicate)NotNullPredicate.getInstance();
      Map map0 = PredicatedMap.decorate(hashMap0, truePredicate0, notNullPredicate0);
      PredicatedMap predicatedMap0 = new PredicatedMap(map0, truePredicate0, truePredicate0);
      predicatedMap0.putAll(map0);
      assertTrue(map0.isEmpty());
  }

  //Test case number: 1
  /*
   * 42 covered goals:
   * Goal 1. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true
   * Goal 5. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false
   * Goal 6. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true
   * Goal 7. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 8. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 9. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 10. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true in context: 
   * Goal 11. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false in context: 
   * Goal 12. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true in context: 
   * Goal 13. [Output]: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 14. [Output]: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 15. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 16. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 17. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 18. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 19. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 20. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 21. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 135
   * Goal 22. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 23. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 24. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 95
   * Goal 25. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 26. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 27. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 28. [METHODNOEX] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 29. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 30. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 31. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 32. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 34. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 35. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 37. Weak Mutation 20: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable value -> key
   * Goal 38. Weak Mutation 21: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 40. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   * Goal 41. Weak Mutation 34: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable key -> value
   * Goal 42. Weak Mutation 35: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      NotNullPredicate notNullPredicate0 = (NotNullPredicate)NotNullPredicate.getInstance();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, notNullPredicate0, notNullPredicate0);
      AbstractMap.SimpleImmutableEntry<String, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Object>("collections.functors.InstanceofPredicate", (Object) predicatedMap0);
      AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>((Map.Entry<? extends String, ?>) abstractMap_SimpleImmutableEntry0);
      predicatedMap0.put(notNullPredicate0, abstractMap_SimpleEntry0);
      AbstractMap.SimpleEntry abstractMap_SimpleEntry1 = (AbstractMap.SimpleEntry)predicatedMap0.put(notNullPredicate0, predicatedMap0);
      assertNotNull(abstractMap_SimpleEntry1);
  }

  //Test case number: 2
  /*
   * 21 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false
   * Goal 3. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 4. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false in context: 
   * Goal 5. [Output]: collections.map.PredicatedMap.isSetValueChecking()Z:True
   * Goal 6. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 7. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 8. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 9. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 11. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 12. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 13. [METHOD] collections.map.PredicatedMap.isSetValueChecking()Z
   * Goal 14. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 15. [METHODNOEX] collections.map.PredicatedMap.isSetValueChecking()Z
   * Goal 16. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 17. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 18. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 19. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 20. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 21. Weak Mutation 30: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      NotNullPredicate notNullPredicate0 = (NotNullPredicate)NotNullPredicate.getInstance();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, notNullPredicate0, notNullPredicate0);
      boolean boolean0 = predicatedMap0.isSetValueChecking();
      assertTrue(boolean0);
  }

  //Test case number: 3
  /*
   * 18 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - true
   * Goal 3. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 4. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - true in context: 
   * Goal 5. [Output]: collections.map.PredicatedMap.isSetValueChecking()Z:False
   * Goal 6. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 7. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 8. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 9. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 11. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 12. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 13. [METHOD] collections.map.PredicatedMap.isSetValueChecking()Z
   * Goal 14. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 15. [METHODNOEX] collections.map.PredicatedMap.isSetValueChecking()Z
   * Goal 16. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 18. Weak Mutation 31: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, (Predicate) null, (Predicate) null);
      boolean boolean0 = predicatedMap0.isSetValueChecking();
      assertFalse(boolean0);
  }

  //Test case number: 4
  /*
   * 23 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 6 IFNE L107 - true
   * Goal 3. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 4. Branch collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 6 IFNE L107 - true in context: 
   * Goal 5. [Output]: collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 6. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 7. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 8. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 9. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 11. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 107
   * Goal 12. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 110
   * Goal 13. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 14. [METHOD] collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 15. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 16. [METHODNOEX] collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 17. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 18. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 19. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 20. Weak Mutation 5: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 21. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 24: collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;:107 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 23. Weak Mutation 25: collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;:107 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      Predicate[] predicateArray0 = new Predicate[4];
      TruePredicate truePredicate0 = (TruePredicate)TruePredicate.getInstance();
      predicateArray0[0] = (Predicate) truePredicate0;
      UniquePredicate uniquePredicate0 = (UniquePredicate)UniquePredicate.getInstance();
      predicateArray0[1] = (Predicate) uniquePredicate0;
      predicateArray0[2] = (Predicate) truePredicate0;
      NotNullPredicate notNullPredicate0 = (NotNullPredicate)NotNullPredicate.INSTANCE;
      predicateArray0[3] = (Predicate) notNullPredicate0;
      AllPredicate allPredicate0 = (AllPredicate)AllPredicate.getInstance(predicateArray0);
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, allPredicate0, uniquePredicate0);
      Object object0 = predicatedMap0.checkSetValue((Object) null);
      assertNull(object0);
  }

  //Test case number: 5
  /*
   * 20 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 3. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 4. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 5. validate(Ljava/lang/Object;Ljava/lang/Object;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 6. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 7. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 8. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 9. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 11. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 12. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 13. [METHOD] collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V
   * Goal 14. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 15. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 16. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 17. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 18. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 20. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AllPredicate allPredicate0 = new AllPredicate((Predicate[]) null);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, allPredicate0, allPredicate0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        predicatedMap0.validate(object0, predicatedMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("collections.functors.AllPredicate", e);
      }
  }

  //Test case number: 6
  /*
   * 47 covered goals:
   * Goal 1. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - true
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - true
   * Goal 5. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - true
   * Goal 6. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - false
   * Goal 7. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 8. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 9. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - true in context: 
   * Goal 10. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - true in context: 
   * Goal 11. Branch collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - true in context: collections.map.PredicatedMap:putAll(Ljava/util/Map;)V
   * Goal 12. Branch collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - false in context: collections.map.PredicatedMap:putAll(Ljava/util/Map;)V
   * Goal 13. putAll(Ljava/util/Map;)V_java.lang.StackOverflowError_IMPLICIT
   * Goal 14. [Output]: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 15. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 16. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 17. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 18. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 19. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 20. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 21. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 135
   * Goal 22. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 147
   * Goal 23. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 148
   * Goal 24. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 149
   * Goal 25. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 150
   * Goal 26. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 151
   * Goal 27. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 152
   * Goal 28. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 153
   * Goal 29. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 154
   * Goal 30. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 31. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 32. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 95
   * Goal 33. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 34. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 35. [METHOD] collections.map.PredicatedMap.putAll(Ljava/util/Map;)V
   * Goal 36. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 37. [METHODNOEX] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 38. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 40. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 41. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 42. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   * Goal 43. Weak Mutation 34: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable key -> value
   * Goal 44. Weak Mutation 35: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable value -> key
   * Goal 45. Weak Mutation 37: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:148 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 38: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:152 - ReplaceVariable key -> value
   * Goal 47. Weak Mutation 39: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:152 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, (Predicate) null, (Predicate) null);
      predicatedMap0.put(hashMap0, (Object) null);
      // Undeclared exception!
      try { 
        predicatedMap0.putAll(hashMap0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 58 covered goals:
   * Goal 1. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true
   * Goal 5. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - false
   * Goal 6. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false
   * Goal 7. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true
   * Goal 8. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - false
   * Goal 9. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 10. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 11. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 12. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true in context: 
   * Goal 13. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false in context: 
   * Goal 14. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true in context: 
   * Goal 15. Branch collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - false in context: collections.map.PredicatedMap:putAll(Ljava/util/Map;)V
   * Goal 16. putAll(Ljava/util/Map;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 17. [Output]: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 18. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 19. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 20. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 21. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 22. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 23. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 24. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 135
   * Goal 25. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 147
   * Goal 26. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 148
   * Goal 27. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 149
   * Goal 28. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 150
   * Goal 29. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 151
   * Goal 30. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 152
   * Goal 31. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 32. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 90
   * Goal 33. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 34. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 95
   * Goal 35. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 36. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 37. [METHOD] collections.map.PredicatedMap.putAll(Ljava/util/Map;)V
   * Goal 38. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 39. [METHODNOEX] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 40. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 41. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 42. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 43. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 45. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 46. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 47. Weak Mutation 15: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:90 - ReplaceConstant - Cannot add key - Predicate rejected it -> 
   * Goal 48. Weak Mutation 16: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:90 - ReplaceComparisonOperator == -> !=
   * Goal 49. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 50. Weak Mutation 20: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable value -> key
   * Goal 51. Weak Mutation 21: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator != -> ==
   * Goal 52. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 53. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   * Goal 54. Weak Mutation 34: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable key -> value
   * Goal 55. Weak Mutation 35: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable value -> key
   * Goal 56. Weak Mutation 37: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:148 - ReplaceComparisonOperator == -> !=
   * Goal 57. Weak Mutation 38: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:152 - ReplaceVariable key -> value
   * Goal 58. Weak Mutation 39: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:152 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      UniquePredicate uniquePredicate0 = new UniquePredicate();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, uniquePredicate0, uniquePredicate0);
      predicatedMap0.put("8(", uniquePredicate0);
      // Undeclared exception!
      try { 
        predicatedMap0.putAll(hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add key - Predicate rejected it
         //
         assertThrownBy("collections.map.PredicatedMap", e);
      }
  }

  //Test case number: 8
  /*
   * 42 covered goals:
   * Goal 1. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true
   * Goal 5. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false
   * Goal 6. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true
   * Goal 7. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 8. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 9. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 10. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true in context: 
   * Goal 11. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false in context: 
   * Goal 12. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true in context: 
   * Goal 13. put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;_java.lang.StackOverflowError_IMPLICIT
   * Goal 14. [Output]: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 15. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 16. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 17. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 18. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 19. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 20. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 21. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 135
   * Goal 22. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 23. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 24. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 95
   * Goal 25. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 26. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 27. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 28. [METHODNOEX] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 29. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 30. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 31. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 32. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 33. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 34. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 35. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 36. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 37. Weak Mutation 20: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable value -> key
   * Goal 38. Weak Mutation 21: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 40. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   * Goal 41. Weak Mutation 34: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable key -> value
   * Goal 42. Weak Mutation 35: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      UniquePredicate uniquePredicate0 = new UniquePredicate();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, uniquePredicate0, uniquePredicate0);
      predicatedMap0.put(predicatedMap0, uniquePredicate0);
      // Undeclared exception!
      try { 
        predicatedMap0.put(predicatedMap0, "");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 58 covered goals:
   * Goal 1. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch
   * Goal 2. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 3. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 4. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - false
   * Goal 5. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 6. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true
   * Goal 7. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false
   * Goal 8. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true
   * Goal 9. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false
   * Goal 10. Branch collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch in context: collections.map.PredicatedMap:decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 11. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 12. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 13. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 14. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true in context: 
   * Goal 15. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false in context: 
   * Goal 16. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true in context: 
   * Goal 17. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false in context: 
   * Goal 18. decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;_java.lang.StackOverflowError_IMPLICIT
   * Goal 19. [Output]: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 20. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 21. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 22. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 23. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 24. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 69
   * Goal 25. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 70
   * Goal 26. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 71
   * Goal 27. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 72
   * Goal 28. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 29. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: Line 49
   * Goal 30. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 31. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 32. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 135
   * Goal 33. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 34. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 35. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 95
   * Goal 36. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 37. [METHOD] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 38. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 39. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 40. [METHODNOEX] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 41. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 42. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 43. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 44. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 8: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable key -> value
   * Goal 46. Weak Mutation 9: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable value -> key
   * Goal 47. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 48. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 49. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 50. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 51. Weak Mutation 20: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable value -> key
   * Goal 52. Weak Mutation 21: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator != -> ==
   * Goal 53. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 54. Weak Mutation 30: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 1 -> 0
   * Goal 55. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 56. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   * Goal 57. Weak Mutation 34: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable key -> value
   * Goal 58. Weak Mutation 35: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      UniquePredicate uniquePredicate0 = new UniquePredicate();
      Set<Map.Entry<String, Integer>> set0 = (Set<Map.Entry<String, Integer>>)hashMap0.entrySet();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, uniquePredicate0, uniquePredicate0);
      predicatedMap0.put(set0, uniquePredicate0);
      // Undeclared exception!
      try { 
        PredicatedMap.decorate(predicatedMap0, uniquePredicate0, uniquePredicate0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 50 covered goals:
   * Goal 1. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - false
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 5. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true
   * Goal 6. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false
   * Goal 7. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false
   * Goal 8. Branch collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch in context: collections.map.PredicatedMap:decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 9. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 10. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 11. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true in context: 
   * Goal 12. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false in context: 
   * Goal 13. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false in context: 
   * Goal 14. decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;_java.lang.NullPointerException_IMPLICIT
   * Goal 15. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 16. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 17. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 18. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 19. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 69
   * Goal 20. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 70
   * Goal 21. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 71
   * Goal 22. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 72
   * Goal 23. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 24. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: Line 49
   * Goal 25. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 26. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 27. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 28. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 29. [METHOD] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 30. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 31. Weak Mutation 0: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:49 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 32. Weak Mutation 1: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:49 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 33. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 34. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 35. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 36. Weak Mutation 5: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 37. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 8: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable key -> value
   * Goal 39. Weak Mutation 9: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable value -> key
   * Goal 40. Weak Mutation 10: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 41. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 42. Weak Mutation 12: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 43. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 44. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 17: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 46. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 47. Weak Mutation 19: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 48. Weak Mutation 20: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable value -> key
   * Goal 49. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 50. Weak Mutation 30: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      AllPredicate allPredicate0 = new AllPredicate((Predicate[]) null);
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, allPredicate0, allPredicate0);
      Integer integer0 = new Integer((-1717));
      hashMap0.put(integer0, (String) null);
      Class<Object> class0 = Object.class;
      InstanceofPredicate instanceofPredicate0 = (InstanceofPredicate)InstanceofPredicate.getInstance(class0);
      // Undeclared exception!
      try { 
        PredicatedMap.decorate(predicatedMap0, instanceofPredicate0, allPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("collections.functors.AllPredicate", e);
      }
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * Goal 1. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch
   * Goal 2. Branch collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch in context: collections.map.PredicatedMap:decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 3. decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: Line 49
   * Goal 5. [METHOD] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Object> class0 = Object.class;
      InstanceofPredicate instanceofPredicate0 = (InstanceofPredicate)InstanceofPredicate.getInstance(class0);
      // Undeclared exception!
      try { 
        PredicatedMap.decorate((Map) null, instanceofPredicate0, instanceofPredicate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Map must not be null
         //
         assertThrownBy("collections.map.AbstractMapDecorator", e);
      }
  }

  //Test case number: 12
  /*
   * 13 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 3. checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;_java.lang.NullPointerException_IMPLICIT
   * Goal 4. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 5. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 6. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 7. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 8. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 9. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 107
   * Goal 10. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 11. [METHOD] collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 12. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 13. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, (Predicate) null, (Predicate) null);
      // Undeclared exception!
      try { 
        predicatedMap0.checkSetValue(predicatedMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("collections.map.PredicatedMap", e);
      }
  }

  //Test case number: 13
  /*
   * 32 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - false
   * Goal 3. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 4. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false
   * Goal 5. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 6. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - false in context: 
   * Goal 7. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 8. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false in context: 
   * Goal 9. <init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V_java.lang.StackOverflowError_IMPLICIT
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 11. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 12. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 13. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 14. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 69
   * Goal 15. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 70
   * Goal 16. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 71
   * Goal 17. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 72
   * Goal 18. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 19. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 20. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 21. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 22. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 23. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 24. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 25. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 26. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 8: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable key -> value
   * Goal 28. Weak Mutation 9: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable value -> key
   * Goal 29. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 30. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 31. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 32. Weak Mutation 30: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      UniquePredicate uniquePredicate0 = new UniquePredicate();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, uniquePredicate0, uniquePredicate0);
      hashMap0.put(predicatedMap0, (String) null);
      PredicatedMap predicatedMap1 = null;
      try {
        predicatedMap1 = new PredicatedMap(predicatedMap0, uniquePredicate0, uniquePredicate0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 59 covered goals:
   * Goal 1. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - false
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - true
   * Goal 5. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 6. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true
   * Goal 7. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - true
   * Goal 8. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false
   * Goal 9. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - true
   * Goal 10. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 11. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 12. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - false in context: 
   * Goal 13. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true in context: 
   * Goal 14. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - true in context: 
   * Goal 15. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - true in context: 
   * Goal 16. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - true in context: 
   * Goal 17. <init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 18. [Output]: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 19. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 20. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 21. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 22. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 23. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 69
   * Goal 24. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 70
   * Goal 25. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 71
   * Goal 26. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 72
   * Goal 27. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 28. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 29. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 30. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 135
   * Goal 31. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 32. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 33. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 95
   * Goal 34. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 35. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 36. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 37. [METHODNOEX] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 38. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 39. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 40. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 41. Weak Mutation 5: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 42. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 8: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable key -> value
   * Goal 44. Weak Mutation 9: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable value -> key
   * Goal 45. Weak Mutation 10: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 46. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 47. Weak Mutation 12: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 48. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 49. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 50. Weak Mutation 17: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 51. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 52. Weak Mutation 19: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 53. Weak Mutation 20: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable value -> key
   * Goal 54. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 55. Weak Mutation 31: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 57. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   * Goal 58. Weak Mutation 34: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable key -> value
   * Goal 59. Weak Mutation 35: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, (Predicate) null, (Predicate) null);
      Collection collection0 = predicatedMap0.values();
      TruePredicate truePredicate0 = (TruePredicate)AllPredicate.getInstance(collection0);
      Object object0 = new Object();
      predicatedMap0.put(object0, hashMap0);
      Predicate[] predicateArray0 = new Predicate[8];
      AllPredicate allPredicate0 = new AllPredicate(predicateArray0);
      PredicatedMap predicatedMap1 = null;
      try {
        predicatedMap1 = new PredicatedMap(predicatedMap0, truePredicate0, allPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("collections.functors.AllPredicate", e);
      }
  }

  //Test case number: 15
  /*
   * 62 covered goals:
   * Goal 1. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - false
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 5. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true
   * Goal 6. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - false
   * Goal 7. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false
   * Goal 8. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true
   * Goal 9. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false
   * Goal 10. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 11. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 12. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - false in context: 
   * Goal 13. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 14. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true in context: 
   * Goal 15. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false in context: 
   * Goal 16. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true in context: 
   * Goal 17. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false in context: 
   * Goal 18. <init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 19. [Output]: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 20. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 21. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 22. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 23. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 24. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 69
   * Goal 25. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 70
   * Goal 26. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 71
   * Goal 27. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 72
   * Goal 28. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 29. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 30. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 31. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 135
   * Goal 32. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 33. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 90
   * Goal 34. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 35. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 95
   * Goal 36. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 37. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 38. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 39. [METHODNOEX] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 40. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 41. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 42. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 43. Weak Mutation 5: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 44. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 8: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable key -> value
   * Goal 46. Weak Mutation 9: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable value -> key
   * Goal 47. Weak Mutation 10: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 48. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 49. Weak Mutation 12: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 50. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 51. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 52. Weak Mutation 15: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:90 - ReplaceConstant - Cannot add key - Predicate rejected it -> 
   * Goal 53. Weak Mutation 16: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:90 - ReplaceComparisonOperator == -> !=
   * Goal 54. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 55. Weak Mutation 20: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable value -> key
   * Goal 56. Weak Mutation 21: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator != -> ==
   * Goal 57. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 58. Weak Mutation 30: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 1 -> 0
   * Goal 59. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 60. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   * Goal 61. Weak Mutation 34: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable key -> value
   * Goal 62. Weak Mutation 35: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      UniquePredicate uniquePredicate0 = new UniquePredicate();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, uniquePredicate0, uniquePredicate0);
      Predicate[] predicateArray0 = new Predicate[5];
      predicateArray0[0] = (Predicate) uniquePredicate0;
      TruePredicate truePredicate0 = (TruePredicate)TruePredicate.INSTANCE;
      predicateArray0[1] = (Predicate) truePredicate0;
      predicateArray0[2] = (Predicate) uniquePredicate0;
      predicateArray0[3] = (Predicate) uniquePredicate0;
      predicateArray0[4] = (Predicate) uniquePredicate0;
      AllPredicate allPredicate0 = (AllPredicate)AllPredicate.getInstance(predicateArray0);
      Object object0 = new Object();
      Integer integer0 = new Integer(0);
      AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, "collections.functors.InstanceofPredicate");
      predicatedMap0.put(object0, abstractMap_SimpleEntry0);
      PredicatedMap predicatedMap1 = null;
      try {
        predicatedMap1 = new PredicatedMap(predicatedMap0, allPredicate0, uniquePredicate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add key - Predicate rejected it
         //
         assertThrownBy("collections.map.PredicatedMap", e);
      }
  }

  //Test case number: 16
  /*
   * 21 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - true
   * Goal 3. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - true
   * Goal 4. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 5. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - true in context: 
   * Goal 6. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - true in context: 
   * Goal 7. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 8. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 9. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 11. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 12. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 13. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 14. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 95
   * Goal 15. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 16. [METHOD] collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V
   * Goal 17. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 18. [METHODNOEX] collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V
   * Goal 19. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 20. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 21. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, (Predicate) null, (Predicate) null);
      predicatedMap0.validate(predicatedMap0, "The type to check instanceof must not be null");
      assertEquals(0, predicatedMap0.size());
  }

  //Test case number: 17
  /*
   * 33 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 3. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - false
   * Goal 4. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 5. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 6. Branch collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: I10 Branch 8 IFEQ L148 - false in context: collections.map.PredicatedMap:putAll(Ljava/util/Map;)V
   * Goal 7. putAll(Ljava/util/Map;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 8. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 9. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 11. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 12. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 13. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 147
   * Goal 14. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 148
   * Goal 15. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 149
   * Goal 16. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 150
   * Goal 17. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 151
   * Goal 18. collections.map.PredicatedMap.putAll(Ljava/util/Map;)V: Line 152
   * Goal 19. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 20. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 21. [METHOD] collections.map.PredicatedMap.putAll(Ljava/util/Map;)V
   * Goal 22. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 23. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 24. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 25. Weak Mutation 5: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 26. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 10: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 28. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 29. Weak Mutation 12: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 30. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 31. Weak Mutation 37: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:148 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 38: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:152 - ReplaceVariable key -> value
   * Goal 33. Weak Mutation 39: collections.map.PredicatedMap.putAll(Ljava/util/Map;)V:152 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Predicate[] predicateArray0 = new Predicate[5];
      AllPredicate allPredicate0 = new AllPredicate(predicateArray0);
      Integer integer0 = new Integer((-1428));
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, allPredicate0, predicateArray0[0]);
      AbstractMap.SimpleImmutableEntry<String, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Object>("iJ/0*g*S", (Object) "\"y]^_7`L4^]qw%5l_");
      hashMap0.put(integer0, abstractMap_SimpleImmutableEntry0);
      // Undeclared exception!
      try { 
        predicatedMap0.putAll(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("collections.functors.AllPredicate", e);
      }
  }

  //Test case number: 18
  /*
   * 22 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 6 IFNE L107 - false
   * Goal 3. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 4. Branch collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 6 IFNE L107 - false in context: 
   * Goal 5. checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 7. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 8. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 9. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 11. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 107
   * Goal 12. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 108
   * Goal 13. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 14. [METHOD] collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 15. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 16. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 17. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 18. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 19. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 20. Weak Mutation 25: collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;:107 - ReplaceComparisonOperator != -> ==
   * Goal 21. Weak Mutation 26: collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;:108 - ReplaceConstant - Cannot set value - Predicate rejected it -> 
   * Goal 22. Weak Mutation 27: collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;:108 - ReplaceComparisonOperator == -> !=
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Class<Integer> class0 = Integer.class;
      InstanceofPredicate instanceofPredicate0 = (InstanceofPredicate)InstanceofPredicate.getInstance(class0);
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, instanceofPredicate0, instanceofPredicate0);
      // Undeclared exception!
      try { 
        predicatedMap0.checkSetValue(hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot set value - Predicate rejected it
         //
         assertThrownBy("collections.map.PredicatedMap", e);
      }
  }

  //Test case number: 19
  /*
   * 23 covered goals:
   * Goal 1. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 2. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 6 IFNE L107 - true
   * Goal 3. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 4. Branch collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: I6 Branch 6 IFNE L107 - true in context: 
   * Goal 5. [Output]: collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;:NonNull
   * Goal 6. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 7. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 8. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 9. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 11. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 107
   * Goal 12. collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;: Line 110
   * Goal 13. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 14. [METHOD] collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 15. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 16. [METHODNOEX] collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 17. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 18. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 19. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 20. Weak Mutation 5: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 21. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 24: collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;:107 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 23. Weak Mutation 25: collections.map.PredicatedMap.checkSetValue(Ljava/lang/Object;)Ljava/lang/Object;:107 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Predicate[] predicateArray0 = new Predicate[5];
      NotNullPredicate notNullPredicate0 = (NotNullPredicate)NotNullPredicate.INSTANCE;
      predicateArray0[0] = (Predicate) notNullPredicate0;
      AllPredicate allPredicate0 = new AllPredicate(predicateArray0);
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, allPredicate0, predicateArray0[0]);
      NotNullPredicate notNullPredicate1 = (NotNullPredicate)predicatedMap0.checkSetValue(notNullPredicate0);
      assertSame(notNullPredicate0, notNullPredicate1);
  }

  //Test case number: 20
  /*
   * 44 covered goals:
   * Goal 1. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true
   * Goal 5. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false
   * Goal 6. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - false
   * Goal 7. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false
   * Goal 8. Branch collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch in context: collections.map.PredicatedMap:decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 9. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 10. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 11. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true in context: 
   * Goal 12. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false in context: 
   * Goal 13. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - false in context: 
   * Goal 14. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false in context: 
   * Goal 15. validate(Ljava/lang/Object;Ljava/lang/Object;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 16. [Output]: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:NonNull:java.util.Map:isEmpty()Z:True
   * Goal 17. [Output]: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:NonNull:java.util.Map:size()I:Zero
   * Goal 18. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 19. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 20. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 21. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 22. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 23. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: Line 49
   * Goal 24. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 25. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 26. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 27. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 93
   * Goal 28. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 29. [METHOD] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 30. [METHOD] collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V
   * Goal 31. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 32. [METHODNOEX] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 33. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 34. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 35. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 36. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 37. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 38. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 40. Weak Mutation 21: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator != -> ==
   * Goal 41. Weak Mutation 22: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:93 - ReplaceConstant - Cannot add value - Predicate rejected it -> 
   * Goal 42. Weak Mutation 23: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:93 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 44. Weak Mutation 30: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      UniquePredicate uniquePredicate0 = new UniquePredicate();
      Map map0 = PredicatedMap.decorate(hashMap0, uniquePredicate0, uniquePredicate0);
      PredicatedMap predicatedMap0 = new PredicatedMap(map0, uniquePredicate0, uniquePredicate0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        predicatedMap0.validate(object0, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add value - Predicate rejected it
         //
         assertThrownBy("collections.map.PredicatedMap", e);
      }
  }

  //Test case number: 21
  /*
   * 68 covered goals:
   * Goal 1. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch
   * Goal 2. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 3. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 4. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - false
   * Goal 5. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 6. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true
   * Goal 7. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - true
   * Goal 8. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false
   * Goal 9. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true
   * Goal 10. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false
   * Goal 11. Branch collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch in context: collections.map.PredicatedMap:decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 12. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 13. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 14. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 15. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - true in context: 
   * Goal 16. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I34 Branch 4 IFNULL L92 - false in context: 
   * Goal 17. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I39 Branch 5 IFNE L92 - true in context: 
   * Goal 18. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false in context: 
   * Goal 19. [Output]: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:NonNull:java.util.Map:isEmpty()Z:False
   * Goal 20. [Output]: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:NonNull:java.util.Map:size()I:Positive
   * Goal 21. [Output]: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:Null
   * Goal 22. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 23. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 24. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 25. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 26. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 69
   * Goal 27. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 70
   * Goal 28. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 71
   * Goal 29. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 72
   * Goal 30. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 73
   * Goal 31. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 32. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: Line 49
   * Goal 33. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 34. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 35. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 135
   * Goal 36. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 37. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 92
   * Goal 38. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 95
   * Goal 39. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 40. [METHOD] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 41. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 42. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 43. [METHODNOEX] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 44. [METHODNOEX] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 45. Weak Mutation 0: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:49 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 46. Weak Mutation 1: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:49 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 47. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 48. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 49. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 50. Weak Mutation 5: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 51. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 52. Weak Mutation 8: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable key -> value
   * Goal 53. Weak Mutation 9: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:72 - ReplaceVariable value -> key
   * Goal 54. Weak Mutation 10: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 55. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 56. Weak Mutation 12: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 57. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 58. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 59. Weak Mutation 17: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable valuePredicate -> keyPredicate
   * Goal 60. Weak Mutation 18: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator = null -> != null
   * Goal 61. Weak Mutation 20: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceVariable value -> key
   * Goal 62. Weak Mutation 21: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:92 - ReplaceComparisonOperator != -> ==
   * Goal 63. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 64. Weak Mutation 30: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 1 -> 0
   * Goal 65. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 66. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   * Goal 67. Weak Mutation 34: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable key -> value
   * Goal 68. Weak Mutation 35: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:135 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      NotNullPredicate notNullPredicate0 = (NotNullPredicate)NotNullPredicate.getInstance();
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, notNullPredicate0, notNullPredicate0);
      Object object0 = new Object();
      AbstractMap.SimpleImmutableEntry<String, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Object>("collections.functors.InstanceofPredicate", (Object) predicatedMap0);
      AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>((Map.Entry<? extends String, ?>) abstractMap_SimpleImmutableEntry0);
      predicatedMap0.put(object0, abstractMap_SimpleEntry0);
      Map map0 = PredicatedMap.decorate(predicatedMap0, notNullPredicate0, (Predicate) null);
      assertFalse(map0.isEmpty());
  }

  //Test case number: 22
  /*
   * 31 covered goals:
   * Goal 1. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 2. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 3. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - false
   * Goal 5. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 6. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 7. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 8. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I9 Branch 3 IFNE L89 - false in context: 
   * Goal 9. put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 10. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 11. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 12. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 13. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 14. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 15. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 16. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 17. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 90
   * Goal 18. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 19. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 20. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 21. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 22. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 23. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 24. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 26. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 27. Weak Mutation 14: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator != -> ==
   * Goal 28. Weak Mutation 15: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:90 - ReplaceConstant - Cannot add key - Predicate rejected it -> 
   * Goal 29. Weak Mutation 16: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:90 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 31. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Class<String> class0 = String.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      PredicatedMap predicatedMap0 = new PredicatedMap(hashMap0, instanceofPredicate0, instanceofPredicate0);
      Integer integer0 = new Integer(0);
      AbstractMap.SimpleImmutableEntry<Integer, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, Object>(integer0, (Object) hashMap0);
      // Undeclared exception!
      try { 
        predicatedMap0.put(abstractMap_SimpleImmutableEntry0, hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add key - Predicate rejected it
         //
         assertThrownBy("collections.map.PredicatedMap", e);
      }
  }

  //Test case number: 23
  /*
   * 37 covered goals:
   * Goal 1. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch
   * Goal 2. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch
   * Goal 3. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true
   * Goal 4. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false
   * Goal 5. collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false
   * Goal 6. Branch collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: root-Branch in context: collections.map.PredicatedMap:decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 7. Branch collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: root-Branch in context: collections.map.PredicatedMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 8. Branch collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: I25 Branch 1 IFEQ L68 - true in context: 
   * Goal 9. Branch collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: I4 Branch 2 IFNULL L89 - false in context: 
   * Goal 10. Branch collections.map.PredicatedMap.isSetValueChecking()Z: I4 Branch 7 IFNULL L121 - false in context: 
   * Goal 11. put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;_java.lang.NullPointerException_IMPLICIT
   * Goal 12. [Output]: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:NonNull:java.util.Map:isEmpty()Z:True
   * Goal 13. [Output]: collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;:NonNull:java.util.Map:size()I:Zero
   * Goal 14. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 64
   * Goal 15. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 65
   * Goal 16. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 67
   * Goal 17. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 68
   * Goal 18. collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V: Line 74
   * Goal 19. collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;: Line 49
   * Goal 20. collections.map.PredicatedMap.isSetValueChecking()Z: Line 121
   * Goal 21. collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;: Line 134
   * Goal 22. collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V: Line 89
   * Goal 23. [METHOD] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 24. [METHOD] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 25. [METHOD] collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * Goal 26. [METHODNOEX] collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V
   * Goal 27. [METHODNOEX] collections.map.PredicatedMap.decorate(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)Ljava/util/Map;
   * Goal 28. Weak Mutation 2: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> valuePredicate
   * Goal 29. Weak Mutation 3: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:64 - ReplaceVariable keyPredicate -> keyPredicate
   * Goal 30. Weak Mutation 4: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:65 - ReplaceVariable valuePredicate -> valuePredicate
   * Goal 31. Weak Mutation 7: collections.map.PredicatedMap.<init>(Ljava/util/Map;Lcollections/Predicate;Lcollections/Predicate;)V:68 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 11: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceComparisonOperator = null -> != null
   * Goal 33. Weak Mutation 13: collections.map.PredicatedMap.validate(Ljava/lang/Object;Ljava/lang/Object;)V:89 - ReplaceVariable key -> value
   * Goal 34. Weak Mutation 29: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceComparisonOperator = null -> != null
   * Goal 35. Weak Mutation 30: collections.map.PredicatedMap.isSetValueChecking()Z:121 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 32: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable key -> value
   * Goal 37. Weak Mutation 33: collections.map.PredicatedMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:134 - ReplaceVariable value -> key
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      AllPredicate allPredicate0 = new AllPredicate((Predicate[]) null);
      Map map0 = PredicatedMap.decorate(hashMap0, allPredicate0, allPredicate0);
      PredicatedMap predicatedMap0 = new PredicatedMap(map0, allPredicate0, allPredicate0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        predicatedMap0.put(object0, predicatedMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("collections.functors.AllPredicate", e);
      }
  }
}
